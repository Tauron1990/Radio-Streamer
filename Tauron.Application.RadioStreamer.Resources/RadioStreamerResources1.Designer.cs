//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34014
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tauron.Application.RadioStreamer.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RadioStreamerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RadioStreamerResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tauron.Application.RadioStreamer.Resources.RadioStreamerResources", typeof(RadioStreamerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abort ähnelt.
        /// </summary>
        public static string AbortLabel {
            get {
                return ResourceManager.GetString("AbortLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add To Favorites ähnelt.
        /// </summary>
        public static string AddFavoritesLabel {
            get {
                return ResourceManager.GetString("AddFavoritesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Addins ähnelt.
        /// </summary>
        public static string AddInViewAddinsLabel {
            get {
                return ResourceManager.GetString("AddInViewAddinsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install ähnelt.
        /// </summary>
        public static string AddInViewInstallButton {
            get {
                return ResourceManager.GetString("AddInViewInstallButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modules ähnelt.
        /// </summary>
        public static string AddInViewModuleLabel {
            get {
                return ResourceManager.GetString("AddInViewModuleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Available AddIns  ähnelt.
        /// </summary>
        public static string AddInViewReadyAddInsLabel {
            get {
                return ResourceManager.GetString("AddInViewReadyAddInsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uninstall ähnelt.
        /// </summary>
        public static string AddInViewUnistallButtonLabel {
            get {
                return ResourceManager.GetString("AddInViewUnistallButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An Error has Occured.\n The Error Code is: {0} ähnelt.
        /// </summary>
        public static string BassErrorMessage {
            get {
                return ResourceManager.GetString("BassErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bass Can&apos;t Initialized. The Error is: {0} ähnelt.
        /// </summary>
        public static string BassInitErrorMessage {
            get {
                return ResourceManager.GetString("BassInitErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Playing ähnelt.
        /// </summary>
        public static string BufferPercentageInvalid {
            get {
                return ResourceManager.GetString("BufferPercentageInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string CloseButton {
            get {
                return ResourceManager.GetString("CloseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile: ähnelt.
        /// </summary>
        public static string CommonEncodingEditorProfileLabel {
            get {
                return ResourceManager.GetString("CommonEncodingEditorProfileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard Profile: ähnelt.
        /// </summary>
        public static string DefaultProfileOptionName {
            get {
                return ResourceManager.GetString("DefaultProfileOptionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Database File: {0} ähnelt.
        /// </summary>
        public static string DeleteDatabaseFilesMessage {
            get {
                return ResourceManager.GetString("DeleteDatabaseFilesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string DeleteLabel {
            get {
                return ResourceManager.GetString("DeleteLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed Time:  ähnelt.
        /// </summary>
        public static string ElapsedTime {
            get {
                return ResourceManager.GetString("ElapsedTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate Equalizer ähnelt.
        /// </summary>
        public static string EqualizerActivate {
            get {
                return ResourceManager.GetString("EqualizerActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Equalizer ähnelt.
        /// </summary>
        public static string EqualizerLabel {
            get {
                return ResourceManager.GetString("EqualizerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export ähnelt.
        /// </summary>
        public static string ExportLabel {
            get {
                return ResourceManager.GetString("ExportLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View Fovorites ähnelt.
        /// </summary>
        public static string FavoritesLabel {
            get {
                return ResourceManager.GetString("FavoritesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Files ähnelt.
        /// </summary>
        public static string FileFilterAllFiles {
            get {
                return ResourceManager.GetString("FileFilterAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Radiostreamer Database ähnelt.
        /// </summary>
        public static string FileFilterRsdFile {
            get {
                return ResourceManager.GetString("FileFilterRsdFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import ähnelt.
        /// </summary>
        public static string ImportLabel {
            get {
                return ResourceManager.GetString("ImportLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installing ähnelt.
        /// </summary>
        public static string InstallingLabel {
            get {
                return ResourceManager.GetString("InstallingLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add:  ähnelt.
        /// </summary>
        public static string LabelAdd {
            get {
                return ResourceManager.GetString("LabelAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Country:            ähnelt.
        /// </summary>
        public static string LabelCountry {
            get {
                return ResourceManager.GetString("LabelCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description:      ähnelt.
        /// </summary>
        public static string LabelDescription {
            get {
                return ResourceManager.GetString("LabelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Genre:                ähnelt.
        /// </summary>
        public static string LabelGenre {
            get {
                return ResourceManager.GetString("LabelGenre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language:         ähnelt.
        /// </summary>
        public static string LabelLanguage {
            get {
                return ResourceManager.GetString("LabelLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Url:     ähnelt.
        /// </summary>
        public static string LabelUrl {
            get {
                return ResourceManager.GetString("LabelUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ATH Control ähnelt.
        /// </summary>
        public static string LameATHControl {
            get {
                return ResourceManager.GetString("LameATHControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string LameATHDefault {
            get {
                return ResourceManager.GetString("LameATHDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string LameATHNo {
            get {
                return ResourceManager.GetString("LameATHNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only ähnelt.
        /// </summary>
        public static string LameATHOnly {
            get {
                return ResourceManager.GetString("LameATHOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only Short Blokes ähnelt.
        /// </summary>
        public static string LameATHOnlyShortBlocks {
            get {
                return ResourceManager.GetString("LameATHOnlyShortBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Average Bitrate: ähnelt.
        /// </summary>
        public static string LameAverageBitrate {
            get {
                return ResourceManager.GetString("LameAverageBitrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright ähnelt.
        /// </summary>
        public static string LameCopyright {
            get {
                return ResourceManager.GetString("LameCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Options: ähnelt.
        /// </summary>
        public static string LameCustomOptionsLabel {
            get {
                return ResourceManager.GetString("LameCustomOptionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only Custom Options ähnelt.
        /// </summary>
        public static string LameCustomOptionsOnly {
            get {
                return ResourceManager.GetString("LameCustomOptionsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string LameDefaultMode {
            get {
                return ResourceManager.GetString("LameDefaultMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable All Filters ähnelt.
        /// </summary>
        public static string LameDisableAllFiltersLabel {
            get {
                return ResourceManager.GetString("LameDisableAllFiltersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable Bit Reservoir ähnelt.
        /// </summary>
        public static string LameDisableBitReservoir {
            get {
                return ResourceManager.GetString("LameDisableBitReservoir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dual Mono ähnelt.
        /// </summary>
        public static string LameDualMoneMode {
            get {
                return ResourceManager.GetString("LameDualMoneMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Options ähnelt.
        /// </summary>
        public static string LameEditorCustomOptionGroup {
            get {
                return ResourceManager.GetString("LameEditorCustomOptionGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enforce Constant Bitrate ähnelt.
        /// </summary>
        public static string LameEnforceCbrLabel {
            get {
                return ResourceManager.GetString("LameEnforceCbrLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enforce ISO ähnelt.
        /// </summary>
        public static string LameEnforceISOLabel {
            get {
                return ResourceManager.GetString("LameEnforceISOLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enforce Minimal Bitrate ähnelt.
        /// </summary>
        public static string LameEnforceMinimalBitrate {
            get {
                return ResourceManager.GetString("LameEnforceMinimalBitrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Protection ähnelt.
        /// </summary>
        public static string LameErrorProtection {
            get {
                return ResourceManager.GetString("LameErrorProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forced Joint Stereo ähnelt.
        /// </summary>
        public static string LameForcedJointStereoMode {
            get {
                return ResourceManager.GetString("LameForcedJointStereoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free Format BitStream ähnelt.
        /// </summary>
        public static string LameFreeFormat {
            get {
                return ResourceManager.GetString("LameFreeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Common ähnelt.
        /// </summary>
        public static string LameGroupCommon {
            get {
                return ResourceManager.GetString("LameGroupCommon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High Pass Frequenzcy Width: ähnelt.
        /// </summary>
        public static string LameHighPassFreqenzcyWidthLabel {
            get {
                return ResourceManager.GetString("LameHighPassFreqenzcyWidthLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High Pass Frequency: ähnelt.
        /// </summary>
        public static string LameHighPassFrequencyLabel {
            get {
                return ResourceManager.GetString("LameHighPassFrequencyLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Joint Stereo ähnelt.
        /// </summary>
        public static string LameJointStereoMode {
            get {
                return ResourceManager.GetString("LameJointStereoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Limit Variable Bit Rate ähnelt.
        /// </summary>
        public static string LameLimitVariableBitRate {
            get {
                return ResourceManager.GetString("LameLimitVariableBitRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low Pass Frecquency Width: ähnelt.
        /// </summary>
        public static string LameLowPassFrecuencyWidth {
            get {
                return ResourceManager.GetString("LameLowPassFrecuencyWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low Pass Frequency: ähnelt.
        /// </summary>
        public static string LameLowPassFreqency {
            get {
                return ResourceManager.GetString("LameLowPassFreqency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max Bitrate: ähnelt.
        /// </summary>
        public static string LameMaxBitrate {
            get {
                return ResourceManager.GetString("LameMaxBitrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Misc ähnelt.
        /// </summary>
        public static string LameMiscGroup {
            get {
                return ResourceManager.GetString("LameMiscGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode: ähnelt.
        /// </summary>
        public static string LameModeLabel {
            get {
                return ResourceManager.GetString("LameModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mono ähnelt.
        /// </summary>
        public static string LameMonoMode {
            get {
                return ResourceManager.GetString("LameMonoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die disable assembly optimizations for mmx/3dnow/sse ähnelt.
        /// </summary>
        public static string LameNoAsm {
            get {
                return ResourceManager.GetString("LameNoAsm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string LameNoAsmDefault {
            get {
                return ResourceManager.GetString("LameNoAsmDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No 3DNow ähnelt.
        /// </summary>
        public static string LameNoAsmNo3DNow {
            get {
                return ResourceManager.GetString("LameNoAsmNo3DNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No MMX ähnelt.
        /// </summary>
        public static string LameNoAsmNoMMX {
            get {
                return ResourceManager.GetString("LameNoAsmNoMMX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No SSE ähnelt.
        /// </summary>
        public static string LameNoASMNoSSE {
            get {
                return ResourceManager.GetString("LameNoASMNoSSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non Original ähnelt.
        /// </summary>
        public static string LameNonOriginal {
            get {
                return ResourceManager.GetString("LameNonOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Temporal Masking ähnelt.
        /// </summary>
        public static string LameNotTemp {
            get {
                return ResourceManager.GetString("LameNotTemp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extreme ähnelt.
        /// </summary>
        public static string LamePresentExtreme {
            get {
                return ResourceManager.GetString("LamePresentExtreme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insane ähnelt.
        /// </summary>
        public static string LamePresentInsane {
            get {
                return ResourceManager.GetString("LamePresentInsane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Present: ähnelt.
        /// </summary>
        public static string LamePresentLabel {
            get {
                return ResourceManager.GetString("LamePresentLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium ähnelt.
        /// </summary>
        public static string LamePresentMedium {
            get {
                return ResourceManager.GetString("LamePresentMedium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string LamePresentNo {
            get {
                return ResourceManager.GetString("LamePresentNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard ähnelt.
        /// </summary>
        public static string LamePresentStandart {
            get {
                return ResourceManager.GetString("LamePresentStandart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PSY ähnelt.
        /// </summary>
        public static string LamePSYGroup {
            get {
                return ResourceManager.GetString("LamePSYGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quality: ähnelt.
        /// </summary>
        public static string LameQualityLabel {
            get {
                return ResourceManager.GetString("LameQualityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string LameQualityNone {
            get {
                return ResourceManager.GetString("LameQualityNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quality ähnelt.
        /// </summary>
        public static string LameQualityQuality {
            get {
                return ResourceManager.GetString("LameQualityQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed ähnelt.
        /// </summary>
        public static string LameQualitySpeed {
            get {
                return ResourceManager.GetString("LameQualitySpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ReplayGain: ähnelt.
        /// </summary>
        public static string LameReplayGain {
            get {
                return ResourceManager.GetString("LameReplayGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accurate ähnelt.
        /// </summary>
        public static string LameReplayGainAccurate {
            get {
                return ResourceManager.GetString("LameReplayGainAccurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string LameReplayGainDefault {
            get {
                return ResourceManager.GetString("LameReplayGainDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fast ähnelt.
        /// </summary>
        public static string LameReplayGainFast {
            get {
                return ResourceManager.GetString("LameReplayGainFast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ReplayGain ähnelt.
        /// </summary>
        public static string LameReplayGainNone {
            get {
                return ResourceManager.GetString("LameReplayGainNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M/S switching criterion ähnelt.
        /// </summary>
        public static string LameSafeJoint {
            get {
                return ResourceManager.GetString("LameSafeJoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale: ähnelt.
        /// </summary>
        public static string LameScaleLabel {
            get {
                return ResourceManager.GetString("LameScaleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Short Blocks: ähnelt.
        /// </summary>
        public static string LameShortBlocks {
            get {
                return ResourceManager.GetString("LameShortBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Option ähnelt.
        /// </summary>
        public static string LameShortBlocksNone {
            get {
                return ResourceManager.GetString("LameShortBlocksNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Short Blocks ähnelt.
        /// </summary>
        public static string LameShortBlocksUse {
            get {
                return ResourceManager.GetString("LameShortBlocksUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t use short blocks ähnelt.
        /// </summary>
        public static string LameShortBlocksUseDont {
            get {
                return ResourceManager.GetString("LameShortBlocksUseDont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Only Short Blocks ähnelt.
        /// </summary>
        public static string LameShortBlockUseOnly {
            get {
                return ResourceManager.GetString("LameShortBlockUseOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stereo ähnelt.
        /// </summary>
        public static string LameStereoMode {
            get {
                return ResourceManager.GetString("LameStereoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target Sample Rate: ähnelt.
        /// </summary>
        public static string LameTargetSampleRateLabel {
            get {
                return ResourceManager.GetString("LameTargetSampleRateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Short Blocks ähnelt.
        /// </summary>
        public static string LameUseShortBlocks {
            get {
                return ResourceManager.GetString("LameUseShortBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Variable Bitrate ähnelt.
        /// </summary>
        public static string LameUseVariableBitrate {
            get {
                return ResourceManager.GetString("LameUseVariableBitrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable Bitrate ähnelt.
        /// </summary>
        public static string LameVariableBitrateGroup {
            get {
                return ResourceManager.GetString("LameVariableBitrateGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable Tag ähnelt.
        /// </summary>
        public static string LameVBRDisableTag {
            get {
                return ResourceManager.GetString("LameVBRDisableTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quality: ähnelt.
        /// </summary>
        public static string LameVRBQuality {
            get {
                return ResourceManager.GetString("LameVRBQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language:  ähnelt.
        /// </summary>
        public static string LanguageLabel {
            get {
                return ResourceManager.GetString("LanguageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load Database ähnelt.
        /// </summary>
        public static string LoadImportLabel {
            get {
                return ResourceManager.GetString("LoadImportLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name:               ähnelt.
        /// </summary>
        public static string NameLabel {
            get {
                return ResourceManager.GetString("NameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Profile ähnelt.
        /// </summary>
        public static string NewEncProfilTitle {
            get {
                return ResourceManager.GetString("NewEncProfilTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string NewLabel {
            get {
                return ResourceManager.GetString("NewLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Radio: {0} ähnelt.
        /// </summary>
        public static string NextRadioMessage {
            get {
                return ResourceManager.GetString("NextRadioMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string NoneString {
            get {
                return ResourceManager.GetString("NoneString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string NoneThemeLabel {
            get {
                return ResourceManager.GetString("NoneThemeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ok ähnelt.
        /// </summary>
        public static string OkLabel {
            get {
                return ResourceManager.GetString("OkLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoder Profiles ähnelt.
        /// </summary>
        public static string OptionsPathEncoder {
            get {
                return ResourceManager.GetString("OptionsPathEncoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Player ähnelt.
        /// </summary>
        public static string OptionsPathPlayer {
            get {
                return ResourceManager.GetString("OptionsPathPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recording ähnelt.
        /// </summary>
        public static string OptionsPathRecording {
            get {
                return ResourceManager.GetString("OptionsPathRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quality Manager: Number: {0}, All: {1} ähnelt.
        /// </summary>
        public static string QualityManager {
            get {
                return ResourceManager.GetString("QualityManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Radio Edit ähnelt.
        /// </summary>
        public static string RadioCreateEditLabel {
            get {
                return ResourceManager.GetString("RadioCreateEditLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter an Name for The new Quality ähnelt.
        /// </summary>
        public static string RadioCreationAddQualityNameInstruction {
            get {
                return ResourceManager.GetString("RadioCreationAddQualityNameInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Qualitys  ähnelt.
        /// </summary>
        public static string RadioCreationQualityTab {
            get {
                return ResourceManager.GetString("RadioCreationQualityTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scripts ähnelt.
        /// </summary>
        public static string RadioCreationScriptTab {
            get {
                return ResourceManager.GetString("RadioCreationScriptTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon RadioIcon {
            get {
                object obj = ResourceManager.GetObject("RadioIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Land:    {0} ähnelt.
        /// </summary>
        public static string RadioItemCountryLabel {
            get {
                return ResourceManager.GetString("RadioItemCountryLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: {0} ähnelt.
        /// </summary>
        public static string RadioItemDescriptionLabel {
            get {
                return ResourceManager.GetString("RadioItemDescriptionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Genre:  ähnelt.
        /// </summary>
        public static string RadioItemGenre {
            get {
                return ResourceManager.GetString("RadioItemGenre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Genres:         {0} ähnelt.
        /// </summary>
        public static string RadioItemGenreLabel {
            get {
                return ResourceManager.GetString("RadioItemGenreLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Qualitys ähnelt.
        /// </summary>
        public static string RadioItemNotReady {
            get {
                return ResourceManager.GetString("RadioItemNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Radio Title:   {0} ähnelt.
        /// </summary>
        public static string RadioItemTilteLabel {
            get {
                return ResourceManager.GetString("RadioItemTilteLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title:  ähnelt.
        /// </summary>
        public static string RadioItemTitle {
            get {
                return ResourceManager.GetString("RadioItemTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please Wait ähnelt.
        /// </summary>
        public static string RadioItemWaitLabel {
            get {
                return ResourceManager.GetString("RadioItemWaitLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Radio Manager ähnelt.
        /// </summary>
        public static string RadioManagerTabTitle {
            get {
                return ResourceManager.GetString("RadioManagerTabTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options ähnelt.
        /// </summary>
        public static string RadioPlayerEffectsOptionLabel {
            get {
                return ResourceManager.GetString("RadioPlayerEffectsOptionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing ähnelt.
        /// </summary>
        public static string RadioPlayerStadeInitializing {
            get {
                return ResourceManager.GetString("RadioPlayerStadeInitializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Playing:  ähnelt.
        /// </summary>
        public static string RadioPlayerStadePlaying {
            get {
                return ResourceManager.GetString("RadioPlayerStadePlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paused:  ähnelt.
        /// </summary>
        public static string RadioPlayerStadeStopped {
            get {
                return ResourceManager.GetString("RadioPlayerStadeStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Radio Player ähnelt.
        /// </summary>
        public static string RadioPlayerTabTitle {
            get {
                return ResourceManager.GetString("RadioPlayerTabTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track: {0}  ähnelt.
        /// </summary>
        public static string RadioTitleCurrentTrack {
            get {
                return ResourceManager.GetString("RadioTitleCurrentTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is Recording ähnelt.
        /// </summary>
        public static string RadioTitleIsRecording {
            get {
                return ResourceManager.GetString("RadioTitleIsRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Record ähnelt.
        /// </summary>
        public static string RecordButtonLabel {
            get {
                return ResourceManager.GetString("RecordButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove From Favorites ähnelt.
        /// </summary>
        public static string RemoveFavoritesLabel {
            get {
                return ResourceManager.GetString("RemoveFavoritesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Database ähnelt.
        /// </summary>
        public static string SaveExportLabel {
            get {
                return ResourceManager.GetString("SaveExportLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string SaveLabel {
            get {
                return ResourceManager.GetString("SaveLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search:  ähnelt.
        /// </summary>
        public static string SearchLabel {
            get {
                return ResourceManager.GetString("SearchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choice your Spectrum: ähnelt.
        /// </summary>
        public static string SpectrumChoiceMainInstruction {
            get {
                return ResourceManager.GetString("SpectrumChoiceMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spectrum Choice ähnelt.
        /// </summary>
        public static string SpectrumChoiceWindowLabel {
            get {
                return ResourceManager.GetString("SpectrumChoiceWindowLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sprectum ähnelt.
        /// </summary>
        public static string SprectumHeaderLabel {
            get {
                return ResourceManager.GetString("SprectumHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Themes ähnelt.
        /// </summary>
        public static string ThemeMenu {
            get {
                return ResourceManager.GetString("ThemeMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Theme becomes available after Restart. ähnelt.
        /// </summary>
        public static string ThemeSwichMessage {
            get {
                return ResourceManager.GetString("ThemeSwichMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type: ähnelt.
        /// </summary>
        public static string TypeLabel {
            get {
                return ResourceManager.GetString("TypeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unkown ähnelt.
        /// </summary>
        public static string UnkownString {
            get {
                return ResourceManager.GetString("UnkownString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Ready! ähnelt.
        /// </summary>
        public static string UpdateAvailableCaption {
            get {
                return ResourceManager.GetString("UpdateAvailableCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An Update is Ready! Install? ähnelt.
        /// </summary>
        public static string UpdateAvailableMessage {
            get {
                return ResourceManager.GetString("UpdateAvailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AddIns ähnelt.
        /// </summary>
        public static string ViewAddinManagerLabel {
            get {
                return ResourceManager.GetString("ViewAddinManagerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Metadata ähnelt.
        /// </summary>
        public static string ViewMetadataLebel {
            get {
                return ResourceManager.GetString("ViewMetadataLebel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options ähnelt.
        /// </summary>
        public static string ViewOptionsLabel {
            get {
                return ResourceManager.GetString("ViewOptionsLabel", resourceCulture);
            }
        }
    }
}
