<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tauron.Application.Common</name>
    </assembly>
    <members>
        <member name="T:Tauron.Application.Aop.AspectBaseAttribute">
            <summary>The aspect base attribute.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.MemberInterceptionAttribute">
            <summary>The member interception attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.MemberInterceptionAttribute.Create(System.Reflection.MemberInfo)">
            <summary>
                The create.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="T:Castle.DynamicProxy.IInterceptor"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.MemberInterceptionAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.ISpecificInterceptor">
            <summary>The SpecificInterceptor interface.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.ISpecificInterceptor.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ISpecificInterceptor.Order">
            <summary>Gets the order.</summary>
            <value>The order.</value>
        </member>
        <member name="M:Tauron.Application.Aop.AspectBaseAttribute.Create(System.Reflection.MemberInfo)">
            <summary>
                The create.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="T:Castle.DynamicProxy.IInterceptor"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Aop.AspectBaseAttribute.Castle#DynamicProxy#IInterceptor#Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
                The intercept.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.AspectBaseAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.AspectBaseAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.AspectBaseAttribute.ContextName">
            <summary>Gets the context name.</summary>
            <value>The context name.</value>
        </member>
        <member name="P:Tauron.Application.Aop.AspectBaseAttribute.MemberType">
            <summary>Gets the member type.</summary>
            <value>The member type.</value>
        </member>
        <member name="P:Tauron.Application.Aop.AspectBaseAttribute.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Tauron.Application.Aop.AspectBaseAttribute.Order">
            <summary>Gets or sets the order.</summary>
            <value>The order.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Model.SecuredOperationAttribute">
            <summary>The secured operation attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.SecuredOperationAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.SecuredOperationAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Model.SecuredOperationAttribute"/> Klasse.
            </summary>
            <param name="roles">
                The roles.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Model.SecuredOperationAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.Security.SecurityException">
            </exception>
        </member>
        <member name="P:Tauron.Application.Aop.Model.SecuredOperationAttribute.Roles">
            <summary>Gets the roles.</summary>
            <value>The roles.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportAttribute">
            <summary>The export attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportAttribute"/> class.
            </summary>
            <param name="export">
                The export.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportAttribute.ContractName">
            <summary>Gets or sets the contract name.</summary>
            <value>The contract name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportAttribute.Export">
            <summary>Gets the export.</summary>
            <value>The export.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportAttribute.Metadata">
            <summary>The get metadata.</summary>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
            <value>The metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportAttribute.HasMetadata">
            <summary>Gets a value indicating whether has metadata.</summary>
            <value>The has metadata.</value>
        </member>
        <member name="T:Tauron.Application.IFileCommand">
            <summary>The FileCommand interface.</summary>
        </member>
        <member name="M:Tauron.Application.IFileCommand.ProcessFile(System.String)">
            <summary>
                The process file.
            </summary>
            <param name="file">
                The file.
            </param>
        </member>
        <member name="M:Tauron.Application.IFileCommand.ProvideFactory">
            <summary>The provide factory.</summary>
            <returns>
                The <see cref="T:Tauron.Application.IShellFactory"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ISecurable">
            <summary>Defines the semantics of classes equipped with object-level security.</summary>
        </member>
        <member name="M:Tauron.Application.ISecurable.IsUserInRole(System.Security.Principal.IIdentity,System.String)">
            <summary>
                Determines whether a given user is enrolled in at least one role.
            </summary>
            <param name="identity">
                The user.
            </param>
            <param name="roles">
                An comma-separated list of roles.
            </param>
            <returns>
                <c>true</c> is the user is enrolled in at least one of the roles,
                otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Tauron.Application.SecurableContracts.IsUserInRole(System.Security.Principal.IIdentity,System.String)">
            <summary>
                The is user in role.
            </summary>
            <param name="identity">
                The identity.
            </param>
            <param name="roles">
                The roles.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Aop.Model.INotifyPropertyChangedMethod">
            <summary>The NotifyPropertyChangedMethod interface.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.INotifyPropertyChangedMethod.OnPropertyChanged(System.String)">
            <summary>
                The on property changed.
            </summary>
            <param name="eventArgs">
                The event args.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Model.INotifyPropertyChangedMethodContracts.OnPropertyChanged(System.String)">
            <summary>
                The on property changed.
            </summary>
            <param name="eventArgs">
                The event args.
            </param>
        </member>
        <member name="E:Tauron.Application.Aop.Model.INotifyPropertyChangedMethodContracts.PropertyChanged">
            <summary>The property changed.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute">
            <summary>The notify property changed attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Model.NotifyPropertyChangedAttribute.AlternativePropertyChangedName">
            <summary>Gets or sets the alternative property changed name.</summary>
            <value>The alternative property changed name.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.BarrierHolder">
            <summary>The barrier holder.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.BaseHolder`1">
            <summary>
                The base holder.
            </summary>
            <typeparam name="TValue">
            </typeparam>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.IBaseHolder">
            <summary>The BaseHolder interface.</summary>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.IBaseHolder.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BaseHolder`1.#ctor(`0)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.BaseHolder`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.BaseHolder`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.BaseHolder`1"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BaseHolder`1.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Tauron.Application.Aop.Threading.BaseHolder`1"/> class.
                Finalisiert eine Instanz der <see cref="T:Tauron.Application.Aop.Threading.BaseHolder`1"/> Klasse.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BaseHolder`1.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.BaseHolder`1.Value">
            <summary>Gets or sets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.BaseHolder`1.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BarrierHolder.#ctor(System.Threading.Barrier)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.BarrierHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.BarrierHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.BarrierHolder"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BarrierHolder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.BarrierHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.BarrierHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.BarrierHolder"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.BarrierSourceAttribute">
            <summary>The barrier source attribute.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ContextPropertyAttributeBase">
            <summary>The context property attribute base.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.ObjectContextPropertyAttribute">
            <summary>The object context property attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ObjectContextPropertyAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ContextPropertyAttributeBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ContextPropertyAttributeBase"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ContextPropertyAttributeBase"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ContextPropertyAttributeBase"/> class.
            </summary>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ContextPropertyAttributeBase.HolderName">
            <summary>Gets or sets the holder name.</summary>
            <value>The holder name.</value>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BarrierSourceAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.BarrierAttribute">
            <summary>The barrier attribute.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ThreadingBaseAspect">
            <summary>The threading base aspect.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ThreadingBaseAspect.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ThreadingBaseAspect"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ThreadingBaseAspect"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ThreadingBaseAspect"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ThreadingBaseAspect.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ThreadingBaseAspect.HolderName">
            <summary>Gets or sets the holder name.</summary>
            <value>The holder name.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ThreadingBaseAspect.IsInitialized">
            <summary>Gets a value indicating whether is initialized.</summary>
            <value>The is initialized.</value>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.BarrierAttribute.holder">
            <summary>The _holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BarrierAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BarrierAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.BarrierAttribute.Position">
            <summary>Gets or sets the position.</summary>
            <value>The position.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.BaseHolder">
            <summary>The base holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.BaseHolder.GetOrAdd``2(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Func{``1},System.String)">
            <summary>
                The get or add.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="factory">
                The factory.
            </param>
            <param name="name">
                The name.
            </param>
            <typeparam name="TKey">
            </typeparam>
            <typeparam name="TValue"></typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.CountdownEventHolder">
            <summary>The countdown event holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.CountdownEventHolder.#ctor(System.Threading.CountdownEvent)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.CountdownEventHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.CountdownEventHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.CountdownEventHolder"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.CountdownEventHolder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.CountdownEventHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.CountdownEventHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.CountdownEventHolder"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.CountdownEventSourceAttribute">
            <summary>The countdown event source attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.CountdownEventSourceAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.CountdownEventAction">
            <summary>The countdown event action.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.CountdownEventAction.Add">
            <summary>The add.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.CountdownEventAction.Signal">
            <summary>The signal.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.CountdownEventAction.Wait">
            <summary>The wait.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.CountdownEventAttribute">
            <summary>The countdown event attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.CountdownEventAttribute._holder">
            <summary>The _holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.CountdownEventAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.CountdownEventAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.CountdownEventAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.CountdownEventAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.CountdownEventAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.CountdownEventAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.CountdownEventAttribute.Count">
            <summary>Gets or sets the count.</summary>
            <value>The count.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.CountdownEventAttribute.EventAction">
            <summary>Gets or sets the event action.</summary>
            <value>The event action.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ManualResetEventHolder">
            <summary>The manual reset event holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ManualResetEventHolder.#ctor(System.Threading.ManualResetEventSlim)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventHolder"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ManualResetEventHolder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventHolder"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ManualResetEventSourceAttribute">
            <summary>The manual reset event source attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ManualResetEventSourceAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.MethodInvocationPosition">
            <summary>The method invocation position.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.MethodInvocationPosition.Before">
            <summary>The before.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.MethodInvocationPosition.After">
            <summary>The after.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ManualResetEventBehavior">
            <summary>The manual reset event behavior.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ManualResetEventBehavior.Set">
            <summary>The set.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ManualResetEventBehavior.Wait">
            <summary>The wait.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ManualResetEventAttribute">
            <summary>The manual reset event attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ManualResetEventAttribute._holder">
            <summary>The _holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ManualResetEventAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ManualResetEventAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ManualResetEventAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ManualResetEventAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ManualResetEventAttribute.EventBehavior">
            <summary>Gets or sets the event behavior.</summary>
            <value>The event behavior.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ManualResetEventAttribute.Position">
            <summary>Gets or sets the position.</summary>
            <value>The position.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.MonitorHolder">
            <summary>The monitor holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.MonitorHolder.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.MonitorHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.MonitorHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.MonitorHolder"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.MonitorHolder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.MonitorHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.MonitorHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.MonitorHolder"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.MonitorLockAttribute">
            <summary>The monitor lock attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.MonitorLockAttribute._holder">
            <summary>The _holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.MonitorLockAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.MonitorLockAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.MonitorSourceAttribute">
            <summary>The monitor source attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.MonitorSourceAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder">
            <summary>The reader writer lock holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ReaderWriterLockHolder.#ctor(System.Threading.ReaderWriterLockSlim)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder"/> class.
            </summary>
            <param name="lockSlim">
                The lock slim.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ReaderWriterLockHolder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ReaderWriterLockHolder"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ReaderWriterLockSourceAttribute">
            <summary>The reader writer lock source attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ReaderWriterLockSourceAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ReaderWriterLockBehavior">
            <summary>The reader writer lock behavior.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ReaderWriterLockBehavior.Read">
            <summary>The read.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ReaderWriterLockBehavior.Write">
            <summary>The write.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute">
            <summary>The reader writer lock attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute._enter">
            <summary>The _enter.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute._exit">
            <summary>The _exit.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute._holder">
            <summary>The _holder.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute._skip">
            <summary>The _skip.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ReaderWriterLockAttribute.LockBehavior">
            <summary>Gets or sets the lock behavior.</summary>
            <value>The lock behavior.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.SemaphoreHolder">
            <summary>The semaphore holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.SemaphoreHolder.#ctor(System.Threading.SemaphoreSlim)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.SemaphoreHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.SemaphoreHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.SemaphoreHolder"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.SemaphoreHolder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.SemaphoreHolder"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.SemaphoreHolder"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.SemaphoreHolder"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.SemaphoreSourceAttribute">
            <summary>The semaphore source attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.SemaphoreSourceAttribute.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.SemaphoreAttribute">
            <summary>The semaphore attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.SemaphoreAttribute._holder">
            <summary>The _holder.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.SemaphoreAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.SemaphoreAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.BaseObject">
            <summary>The base object.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.IContextHolder">
            <summary>The ContextHolder interface.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.IContextHolder.Context">
            <summary>Gets or sets the context.</summary>
            <value>The context.</value>
        </member>
        <member name="P:Tauron.Application.BaseObject.Tauron#Application#Ioc#IContextHolder#Context">
            <summary>Gets or sets the context.</summary>
            <value>The context.</value>
        </member>
        <member name="T:Tauron.Application.UISyncObservableCollection`1">
            <summary>
                The ui sync observable collection.
            </summary>
            <typeparam name="TType">
            </typeparam>
        </member>
        <member name="M:Tauron.Application.UISyncObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                The on collection changed.
            </summary>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="M:Tauron.Application.UISyncObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                The on property changed.
            </summary>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="T:Tauron.Application.IUISynchronize">
            <summary>The UISynchronize interface.</summary>
        </member>
        <member name="M:Tauron.Application.IUISynchronize.BeginInvoke(System.Action)">
            <summary>
                The begin invoke.
            </summary>
            <param name="action">
                The action.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IUISynchronize.Invoke(System.Action)">
            <summary>
                The invoke.
            </summary>
            <param name="action">
                The action.
            </param>
        </member>
        <member name="M:Tauron.Application.IUISynchronize.Invoke``1(System.Func{``0})">
            <summary>
                The invoke.
            </summary>
            <param name="action">
                The action.
            </param>
            <returns>
                The <see cref="!:TReturn"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.UISynchronizeContracts.BeginInvoke(System.Action)">
            <summary>
                The begin invoke.
            </summary>
            <param name="action">
                The action.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.UISynchronizeContracts.Invoke(System.Action)">
            <summary>
                The invoke.
            </summary>
            <param name="action">
                The action.
            </param>
        </member>
        <member name="M:Tauron.Application.UISynchronizeContracts.Invoke``1(System.Func{``0})">
            <summary>
                The invoke.
            </summary>
            <param name="action">
                The action.
            </param>
            <typeparam name="TReturn">
            </typeparam>
            <returns>
                The <see cref="!:TReturn"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.UiSynchronize">
            <summary>The ui synchronize.</summary>
        </member>
        <member name="P:Tauron.Application.UiSynchronize.Synchronize">
            <summary>Gets or sets the synchronize.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.AggregareExportProvider">
            <summary>The aggregare export provider.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportProvider">
            <summary>The export provider.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportProvider.CreateExports(Tauron.Application.Ioc.BuildUp.Exports.IExportFactory)">
            <summary>
                The create exports.
            </summary>
            <param name="factory">
                The factory.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportProvider.OnExportsChanged(Tauron.Application.Ioc.ExportChangedEventArgs)">
            <summary>
                The on exports changed.
            </summary>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="E:Tauron.Application.Ioc.ExportProvider.ExportsChanged">
            <summary>The exports changed.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportProvider.BroadcastChanges">
            <summary>Gets a value indicating whether broadcast changes.</summary>
            <value>The broadcast changes.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportProvider.Technology">
            <summary>Gets the technology.</summary>
            <value>The technology.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.AggregareExportProvider.Add(System.Reflection.Assembly)">
            <summary>
                The add.
            </summary>
            <param name="assembly">
                The assembly.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.AggregareExportProvider.AddRange(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                The add rage.
            </summary>
            <param name="addAssemblys">
                The add assemblys.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.AggregareExportProvider.CreateExports(Tauron.Application.Ioc.BuildUp.Exports.IExportFactory)">
            <summary>
                The create exports.
            </summary>
            <param name="factory">
                The factory.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.AggregareExportProvider.Remove(System.Reflection.Assembly)">
            <summary>
                The remove.
            </summary>
            <param name="assembly">
                The assembly.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.AggregareExportProvider.RemoveRange(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                The remove rage.
            </summary>
            <param name="removeAssemblys">
                The remove assemblys.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.AggregareExportProvider.BroadcastChanges">
            <summary>Gets a value indicating whether broadcast changes.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.AggregareExportProvider.Technology">
            <summary>Gets the technology.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUpException">
            <summary>The build up exception.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.IPolicy">
            <summary>The Policy interface.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy">
            <summary>The object context policy.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy"/> class.
            </summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy.ContextName">
            <summary>Gets or sets the context name.</summary>
            <value>The context name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ObjectContextPolicy.ContextPropertys">
            <summary>Gets or sets the context propertys.</summary>
            <value>The context propertys.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IResolver">
            <summary>The Resolver interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IResolver.Create(Tauron.Application.Ioc.ErrorTracer)">
            <summary>The create.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver">
            <summary>The lazy resolver.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.#ctor(Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver,System.Type,Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver"/> Klasse.
            </summary>
            <param name="resolver">
                The resolver.
            </param>
            <param name="lazy">
                The lazy.
            </param>
            <param name="factory">
                The factory.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.Create(Tauron.Application.Ioc.ErrorTracer)">
            <summary>The create.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1">
            <summary>
                The lazy trampoline.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampolineBase.CreateFunc">
            <summary>The create func.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1._resolver">
            <summary>The _resolver.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1.#ctor(Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1"/> class.
            </summary>
            <param name="resolver">
                The resolver.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1.CreateFunc">
            <summary>The create func.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LazyResolver.LazyTrampoline`1.Create">
            <summary>The create.</summary>
            <returns>
                The <see cref="!:T"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ListResolver">
            <summary>The list resolver.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ListResolver.#ctor(System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IResolver},System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ListResolver"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ListResolver"/> Klasse.
            </summary>
            <param name="resolvers">
                The resolvers.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ListResolver.Create(Tauron.Application.Ioc.ErrorTracer)">
            <summary>The create.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver">
            <summary>The simple resolver.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver.#ctor(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.IContainer,System.Boolean,System.Type,System.Object,System.Type,Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptorCallback)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver"/> Klasse.
            </summary>
            <param name="metadata">
                The metadata.
            </param>
            <param name="container">
                The container.
            </param>
            <param name="isExportFactory"></param>
            <param name="factoryType"></param>
            <param name="metadataObject"></param>
            <param name="metadataType"></param>
            <param name="interceptor"></param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver.Create(Tauron.Application.Ioc.ErrorTracer)">
            <summary>The create.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver.Container">
            <summary>Gets the container.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.SimpleResolver.Metadata">
            <summary>Gets the metadata.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.ContextScopeAttribute">
            <summary>The context scope attribute.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportMetadataBaseAttribute">
            <summary>The export metadata base attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportMetadataBaseAttribute.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportMetadataBaseAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportMetadataBaseAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportMetadataBaseAttribute"/> class.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportMetadataBaseAttribute.InternalKey">
            <summary>Gets or sets the internal key.</summary>
            <value>The internal key.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportMetadataBaseAttribute.InternalValue">
            <summary>Gets or sets the internal value.</summary>
            <value>The internal value.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.ContextScopeAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ContextScopeAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ContextScopeAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ContextScopeAttribute"/> class.
            </summary>
            <param name="name">
                The name.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ContextScopeAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ContextScopeAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ContextScopeAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ContextScopeAttribute"/> class.
            </summary>
        </member>
        <member name="P:Tauron.Application.Ioc.ContextScopeAttribute.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.ObjectContext">
            <summary>The object context.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.ObjectContext._registry">
            <summary>The _registry.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.LifeTime.ObjectContext"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.LifeTime.ObjectContext"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.LifeTime.ObjectContext"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.DisposeAll">
            <summary>The dispose all.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.Get``1">
            <summary>The get.</summary>
            <typeparam name="TInterface"></typeparam>
            <returns>
                The <see cref="!:TInterface"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.GetAll``1">
            <summary>The get all.</summary>
            <typeparam name="TInterface"></typeparam>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.Register``2">
            <summary>The register.</summary>
            <typeparam name="TInterface"></typeparam>
            <typeparam name="TImplement"></typeparam>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ObjectContext.Register``2(``1)">
            <summary>
                The register.
            </summary>
            <param name="instance">
                The instance.
            </param>
            <typeparam name="TInterface">
            </typeparam>
            <typeparam name="TImplement">
            </typeparam>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.ContextManager">
            <summary>The context manager.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.ContextManager._aspectContexts">
            <summary>The _aspect contexts.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.ContextManager._weakContexts">
            <summary>The _weak contexts.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.FindContext(System.Object,System.String)">
            <summary>
                The find context.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="contextName">
                The context name.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.LifeTime.ObjectContext"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.GetContext(System.String,System.Object)">
            <summary>
                The get context.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="owner">
                The owner.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.LifeTime.ObjectContext"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.GetContext(System.Object)">
            <summary>
                The get context.
            </summary>
            <param name="target">
                The target.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.LifeTime.ObjectContext"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.AddContext(System.String,Tauron.Application.Ioc.LifeTime.ObjectContext,System.Object)">
            <summary>
                The add context.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="owner">
                The owner.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.CleanContexts">
            <summary>The clean contexts.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.Initialize">
            <summary>The initialize.</summary>
            <returns>
                The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext">
            <summary>The weak context.</summary>
        </member>
        <member name="T:Tauron.IWeakReference">
            <summary>The WeakReference interface.</summary>
        </member>
        <member name="P:Tauron.IWeakReference.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext._holder">
            <summary>The _holder.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext"/> class.
            </summary>
            <param name="owner">
                The owner.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext.Context">
            <summary>Gets or sets the context.</summary>
            <value>The context.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext.Owner">
            <summary>Gets the owner.</summary>
            <value>The owner.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.ContextManager.WeakContext.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.TaskOption">
            <summary>The task option.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.TaskOption.Worker">
            <summary>The worker.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.TaskOption.Task">
            <summary>The task.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.TaskOption.UIThread">
            <summary>The ui thread.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Threading.ScheduleAttribute">
            <summary>The schedule attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Threading.ScheduleAttribute._isOk">
            <summary>The _is ok.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ScheduleAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ScheduleAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Threading.ScheduleAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Threading.ScheduleAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ScheduleAttribute.Create(System.Reflection.MemberInfo)">
            <summary>
                The create.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="T:Castle.DynamicProxy.IInterceptor"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Aop.Threading.ScheduleAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ScheduleAttribute.CreationOptions">
            <summary>Gets or sets the creation options.</summary>
            <value>The creation options.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Threading.ScheduleAttribute.TaskOption">
            <summary>Gets or sets the task option.</summary>
            <value>The task option.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Model.TraceAspectOptions">
            <summary>The trace aspect options.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAspectOptions.None">
            <summary>The none.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAspectOptions.ParameterType">
            <summary>The parameter type.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAspectOptions.ParameterName">
            <summary>The parameter name.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAspectOptions.ParameterValue">
            <summary>The parameter value.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAspectOptions.ReturnValue">
            <summary>The return value.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.Model.TraceAttribute">
            <summary>The trace attributte.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute._helper">
            <summary>The _helper.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute._logReturn">
            <summary>The _log return.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute._tracerTitle">
            <summary>The _tracer title.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.TraceAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.TraceAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Model.TraceAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.TraceAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.TraceAttribute.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Model.TraceAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.Category">
            <summary>Gets or sets the category.</summary>
            <value>The category.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.EnableTracer">
            <summary>Gets or sets a value indicating whether enable tracer.</summary>
            <value>The enable tracer.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.ExceptionPolicy">
            <summary>Gets or sets the exception policy.</summary>
            <value>The exception policy.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.LogOptions">
            <summary>Gets or sets the log options.</summary>
            <value>The log options.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.LogTitle">
            <summary>Gets or sets the log title.</summary>
            <value>The log title.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.TraceEventType">
            <summary>Gets or sets the trace event type.</summary>
            <value>The trace event type.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.TracerId">
            <summary>Gets or sets the tracer id.</summary>
            <value>The tracer id.</value>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.TracerTitle">
            <summary>Gets or sets the tracer title.</summary>
            <value>The tracer title.</value>
        </member>
        <member name="T:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper">
            <summary>The logger helper.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper._type">
            <summary>The _type.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper._value">
            <summary>The _value.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper._initialized">
            <summary>The _initialized.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper._stringNmes">
            <summary>The _string nmes.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper._types">
            <summary>The _types.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper.parmNames">
            <summary>The _parm names.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper"/> class.
            </summary>
            <param name="value">
                The value.
            </param>
            <param name="type">
                The type.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper.Log(Microsoft.Practices.EnterpriseLibrary.Logging.LogEntry,Castle.DynamicProxy.IInvocation)">
            <summary>
                The log.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <param name="invocation">
                The invocation.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper.Initialize(System.Reflection.MethodInfo)">
            <summary>
                The initialize.
            </summary>
            <param name="info">
                The info.
            </param>
        </member>
        <member name="P:Tauron.Application.Aop.Model.TraceAttribute.LoggerHelper.ParmNames">
            <summary>The _parm names.</summary>
        </member>
        <member name="T:Tauron.Application.Aop.EventAspectAttribute">
            <summary>The event aspect attribute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.EventAspectAttribute.mEventInfo">
            <summary>The _event info.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.EventAspectAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.EventAspectAttribute.OnGet(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.EventInfo)">
            <summary>
                The on get.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="eventInfo">
                The event info.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.EventAspectAttribute.OnSet(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.EventInfo)">
            <summary>
                The on set.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="eventInfo">
                The event info.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.MethodAspectAttribute">
            <summary>The method aspect attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.MethodAspectAttribute.EnterMethod(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The enter method.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.MethodAspectAttribute.ExecuteMethod(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The execute method.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.MethodAspectAttribute.ExitMethod(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The exit method.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.MethodAspectAttribute.FinallyMethod(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The finally method.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.MethodAspectAttribute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.MethodAspectAttribute.MethodException(Castle.DynamicProxy.IInvocation,System.Exception,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The method exception.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="exception">
                The e.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Aop.PropertyAspectAttrebute">
            <summary>The property aspect attrebute.</summary>
        </member>
        <member name="F:Tauron.Application.Aop.PropertyAspectAttrebute.mpropertyInfo">
            <summary>The _property info.</summary>
        </member>
        <member name="M:Tauron.Application.Aop.PropertyAspectAttrebute.Intercept(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext)">
            <summary>
                The intercept impl.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.PropertyAspectAttrebute.OnGet(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.PropertyInfo)">
            <summary>
                The on get.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="propertyInfo">
                The property.
            </param>
        </member>
        <member name="M:Tauron.Application.Aop.PropertyAspectAttrebute.OnSet(Castle.DynamicProxy.IInvocation,Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.PropertyInfo)">
            <summary>
                The on set.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="propertyInfo">
                The property.
            </param>
        </member>
        <member name="T:Tauron.Application.Composition.CatalogCollection">
            <summary>The catalog collection.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.CatalogCollection.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.CatalogCollection"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Composition.CatalogCollection"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.CatalogCollection"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Composition.CatalogCollection.FillCatalag(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill catalag.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="M:Tauron.Application.Composition.CatalogCollection.ObjectInvariant">
            <summary>The object invariant.</summary>
        </member>
        <member name="P:Tauron.Application.Composition.CatalogCollection.Catalogs">
            <summary>Gets or sets the catalogs.</summary>
            <value>The catalogs.</value>
        </member>
        <member name="T:Tauron.Application.Composition.XamlCatalog">
            <summary>The xaml catalog.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.XamlCatalog.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="T:Tauron.Application.Composition.XamlCatalogContracts">
            <summary>The xaml catalog contracts.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.XamlCatalogContracts.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="T:Tauron.Application.Composition.AssemblyCatalog">
            <summary>The assembly catalog.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.AssemblyCatalog.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="P:Tauron.Application.Composition.AssemblyCatalog.AssemblyName">
            <summary>Gets or sets the assembly name.</summary>
            <value>The assembly name.</value>
        </member>
        <member name="T:Tauron.Application.Composition.ApplicationCatalog">
            <summary>The application catalog.</summary>
        </member>
        <member name="F:Tauron.Application.Composition.ApplicationCatalog.PluginPath">
            <summary>The plugin path.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.ApplicationCatalog.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="T:Tauron.Application.Composition.AggregateCatalog">
            <summary>The aggregate catalog.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.AggregateCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.AggregateCatalog"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Composition.AggregateCatalog"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.AggregateCatalog"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Composition.AggregateCatalog.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="M:Tauron.Application.Composition.AggregateCatalog.ObjectInvarint">
            <summary>The object invarint.</summary>
        </member>
        <member name="P:Tauron.Application.Composition.AggregateCatalog.InnerCatalogs">
            <summary>Gets or sets the inner catalogs.</summary>
            <value>The inner catalogs.</value>
        </member>
        <member name="T:Tauron.Application.Composition.DirectoryCatalog">
            <summary>The directory catalog.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.DirectoryCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.DirectoryCatalog"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Composition.DirectoryCatalog"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.DirectoryCatalog"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Composition.DirectoryCatalog.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="M:Tauron.Application.Composition.DirectoryCatalog.ObjectInvariant">
            <summary>The object invariant.</summary>
        </member>
        <member name="P:Tauron.Application.Composition.DirectoryCatalog.DiscoverChanges">
            <summary>Gets or sets a value indicating whether discover changes.</summary>
            <value>The discover changes.</value>
        </member>
        <member name="P:Tauron.Application.Composition.DirectoryCatalog.Path">
            <summary>Gets or sets the path.</summary>
            <value>The path.</value>
        </member>
        <member name="P:Tauron.Application.Composition.DirectoryCatalog.SearchOption">
            <summary>Gets or sets the search option.</summary>
            <value>The search option.</value>
        </member>
        <member name="P:Tauron.Application.Composition.DirectoryCatalog.SearchPattern">
            <summary>Gets or sets the search pattern.</summary>
            <value>The search pattern.</value>
        </member>
        <member name="T:Tauron.Application.Composition.TypeCatalog">
            <summary>The type catalog.</summary>
        </member>
        <member name="M:Tauron.Application.Composition.TypeCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.TypeCatalog"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Composition.TypeCatalog"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Composition.TypeCatalog"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Composition.TypeCatalog.FillContainer(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The fill container.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="P:Tauron.Application.Composition.TypeCatalog.Types">
            <summary>Gets or sets the types.</summary>
            <value>The types.</value>
        </member>
        <member name="T:Tauron.Application.ActiveProgress">
            <summary>The active progress.</summary>
        </member>
        <member name="M:Tauron.Application.ActiveProgress.#ctor(System.String,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ActiveProgress"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ActiveProgress"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.ActiveProgress"/> class.
            </summary>
            <param name="message">
                The message.
            </param>
            <param name="percent">
                The percent.
            </param>
            <param name="overAllProgress">
                The over all progress.
            </param>
        </member>
        <member name="P:Tauron.Application.ActiveProgress.Message">
            <summary>Gets the message.</summary>
            <value>The message.</value>
        </member>
        <member name="P:Tauron.Application.ActiveProgress.OverAllProgress">
            <summary>Gets or sets the over all progress.</summary>
            <value>The over all progress.</value>
        </member>
        <member name="P:Tauron.Application.ActiveProgress.Percent">
            <summary>Gets the percent.</summary>
            <value>The percent.</value>
        </member>
        <member name="T:Tauron.Application.Factory">
            <summary>The new.</summary>
        </member>
        <member name="M:Tauron.Application.Factory.Object``1(System.Object[])">
            <summary>
                The object.
            </summary>
            <param name="args">
                The args.
            </param>
            <typeparam name="TObject">
            </typeparam>
            <returns>
                The <see cref="!:TObject"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Factory.Object(System.Type,System.Object[])">
            <summary>
                The object.
            </summary>
            <param name="targetType">
                The target Type.
            </param>
            <param name="args">
                The args.
            </param>
            <typeparam name="TObject">
            </typeparam>
            <returns>
                The <see cref="!:TObject"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.TaskScheduler">
            <summary>The task scheduler.</summary>
        </member>
        <member name="F:Tauron.Application.TaskScheduler._collection">
            <summary>The _collection.</summary>
        </member>
        <member name="F:Tauron.Application.TaskScheduler._synchronizationContext">
            <summary>The _synchronization context.</summary>
        </member>
        <member name="F:Tauron.Application.TaskScheduler._disposed">
            <summary>The _disposed.</summary>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.#ctor(Tauron.Application.IUISynchronize)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.TaskScheduler"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.TaskScheduler"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.TaskScheduler"/> class.
            </summary>
            <param name="synchronizationContext">
                The synchronization context.
            </param>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.TaskScheduler"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.TaskScheduler"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.TaskScheduler"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Tauron.Application.TaskScheduler"/> class.
                Finalisiert eine Instanz der <see cref="T:Tauron.Application.TaskScheduler"/> Klasse.
                Finalizes an instance of the <see cref="T:Tauron.Application.TaskScheduler"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.QueueTask(Tauron.Application.ITask)">
            <summary>
                The queue task.
            </summary>
            <param name="task">
                The task.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.EnterLoop">
            <summary>The enter loop.</summary>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.CheckDispose">
            <summary>The check dispose.</summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Tauron.Application.TaskScheduler.Dispose(System.Boolean)">
            <summary>
                The dispose.
            </summary>
            <param name="disposing">
                The disposing.
            </param>
        </member>
        <member name="P:Tauron.Application.TaskScheduler.Disposed">
            <summary></summary>
            <value>The disposed.</value>
        </member>
        <member name="T:Tauron.Application.UserTask">
            <summary>The user task.</summary>
        </member>
        <member name="T:Tauron.Application.ITask">
            <summary>The Task interface.</summary>
        </member>
        <member name="M:Tauron.Application.ITask.Execute">
            <summary>The execute.</summary>
        </member>
        <member name="P:Tauron.Application.ITask.Synchronize">
            <summary>Gets a value indicating whether synchronize.</summary>
            <value>The synchronize.</value>
        </member>
        <member name="P:Tauron.Application.ITask.Task">
            <summary>Gets the task.</summary>
        </member>
        <member name="F:Tauron.Application.UserTask._callback">
            <summary>The _callback.</summary>
        </member>
        <member name="M:Tauron.Application.UserTask.#ctor(System.Action,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.UserTask"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.UserTask"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.UserTask"/> class.
            </summary>
            <param name="callback">
                The callback.
            </param>
            <param name="sync">
                The sync.
            </param>
        </member>
        <member name="M:Tauron.Application.UserTask.Execute">
            <summary>The execute.</summary>
        </member>
        <member name="P:Tauron.Application.UserTask.Synchronize">
            <summary>Gets a value indicating whether synchronize.</summary>
            <value>The synchronize.</value>
        </member>
        <member name="P:Tauron.Application.UserTask.Task">
            <summary>Gets the task.</summary>
        </member>
        <member name="T:Tauron.Application.CommandLineCommandBase">
            <summary>The command line command base.</summary>
        </member>
        <member name="T:Tauron.Application.ICommandLineCommand">
            <summary>The CommandLineCommand interface.</summary>
        </member>
        <member name="M:Tauron.Application.ICommandLineCommand.Execute(System.String[],Tauron.Application.Ioc.IContainer)">
            <summary>
                The execute.
            </summary>
            <param name="args">
                The args.
            </param>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="P:Tauron.Application.ICommandLineCommand.CommandName">
            <summary>Gets the command name.</summary>
            <value>The command name.</value>
        </member>
        <member name="P:Tauron.Application.ICommandLineCommand.Factory">
            <summary>Gets the factory.</summary>
            <value>The factory.</value>
        </member>
        <member name="M:Tauron.Application.CommandLineCommandBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.CommandLineCommandBase"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.CommandLineCommandBase"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.CommandLineCommandBase"/> class.
            </summary>
            <param name="comandName">
                The comand name.
            </param>
        </member>
        <member name="M:Tauron.Application.CommandLineCommandBase.Execute(System.String[],Tauron.Application.Ioc.IContainer)">
            <summary>
                The execute.
            </summary>
            <param name="args">
                The args.
            </param>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="P:Tauron.Application.CommandLineCommandBase.CommandName">
            <summary>Gets the command name.</summary>
            <value>The command name.</value>
        </member>
        <member name="P:Tauron.Application.CommandLineCommandBase.Factory">
            <summary>Gets or sets the factory.</summary>
            <value>The factory.</value>
        </member>
        <member name="T:Tauron.Application.IModule">
            <summary>The Module interface.</summary>
        </member>
        <member name="M:Tauron.Application.IModule.Initialize(Tauron.Application.CommonApplication)">
            <summary>
                The initialize.
            </summary>
            <param name="application">
                The application.
            </param>
        </member>
        <member name="T:Tauron.Application.IModuleContracts">
            <summary>The i module contracts.</summary>
        </member>
        <member name="M:Tauron.Application.IModuleContracts.Initialize(Tauron.Application.CommonApplication)">
            <summary>
                The initialize.
            </summary>
            <param name="application">
                The application.
            </param>
        </member>
        <member name="T:Tauron.Application.EventListManager">
            <summary>The event list manager.</summary>
        </member>
        <member name="F:Tauron.Application.EventListManager._handlers">
            <summary>The _handlers.</summary>
        </member>
        <member name="M:Tauron.Application.EventListManager.AddEvent(System.String,System.Delegate)">
            <summary>
                The add event.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="M:Tauron.Application.EventListManager.InvokeEvent(System.String,System.Object[])">
            <summary>
                The invoke event.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="args">
                The args.
            </param>
        </member>
        <member name="M:Tauron.Application.EventListManager.RemoveEvent(System.String,System.Delegate)">
            <summary>
                The remove event.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="P:Tauron.Application.EventListManager.Handlers">
            <summary>Gets the handlers.</summary>
            <value>The handlers.</value>
        </member>
        <member name="T:Tauron.Application.PropertyHelper">
            <summary>The property helper.</summary>
        </member>
        <member name="M:Tauron.Application.PropertyHelper.ExtractPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
                The extract property name.
            </summary>
            <param name="propertyExpression">
                The property expression.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ObservableObject">
            <summary>The observable object.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableObject.OnPropertyChanged(System.String)">
            <summary>
                The on property changed.
            </summary>
            <param name="eventArgs">
                The event args.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableObject.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                The on property changed.
            </summary>
            <param name="eventArgs">
                The event args.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableObject.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
                The on property changed.
            </summary>
            <param name="eventArgs">
                The event args.
            </param>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:Tauron.Application.ObservableObject.QueueWorkitem(System.Action,System.Boolean)">
            <summary>
                The queue workitem.
            </summary>
            <param name="action">
                The action.
            </param>
            <param name="withDispatcher">
                The with dispatcher.
            </param>
        </member>
        <member name="E:Tauron.Application.ObservableObject.PropertyChanged">
            <summary>The property changed.</summary>
        </member>
        <member name="P:Tauron.Application.ObservableObject.CurrentDispatcher">
            <summary>Gets the current dispatcher.</summary>
            <value>The current dispatcher.</value>
        </member>
        <member name="T:Tauron.Application.GroupDictionary`2">
            <summary>
                Eine Klasse die eine Liste von Objecten einem Schlüssel zuordnent.
            </summary>
            <typeparam name="TKey">
                Der Type des Schlüssels.
            </typeparam>
            <typeparam name="TValue">
                Der Type des Inhalts.
            </typeparam>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum
                Serialisieren der
                <see cref="T:System.Collections.Generic.Dictionary`2" />
                -Instanz erforderlichen Daten zurück.
            </summary>
            <param name="info">
                Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den zum Serialisieren der
                <see cref="T:System.Collections.Generic.Dictionary`2" />
                -Instanz erforderlichen Informationen.
            </param>
            <param name="context">
                Eine <see cref="T:System.Runtime.Serialization.StreamingContext" />-Struktur, die die Quelle und das Ziel des
                serialisierten Streams enthält, der der
                <see cref="T:System.Collections.Generic.Dictionary`2" />
                -Instanz zugeordnet ist.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info" /> ist null.
            </exception>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.GroupDictionary`2"/> Klasse.
            </summary>
            <param name="info">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="F:Tauron.Application.GroupDictionary`2._listType">
            <summary>The _list type.</summary>
        </member>
        <member name="F:Tauron.Application.GroupDictionary`2._genericTemp">
            <summary>The _generic temp.</summary>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.GroupDictionary`2"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.GroupDictionary`2"/> Klasse.
            </summary>
            <param name="listType">
                The list type.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.GroupDictionary`2"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.GroupDictionary`2"/> Klasse.
            </summary>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.GroupDictionary`2"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.GroupDictionary`2"/> Klasse.
            </summary>
            <param name="singleList">
                The single list.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.CreateList">
            <summary>The create list.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.Add(`0)">
            <summary>
                Fügt einen schlüssel zur liste hinzu.
            </summary>
            <param name="key">
                Der Schlüssel der hinzugefügt werden soll.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.Add(`0,`1)">
            <summary>
                Fügt eineesn schlüssel und ein Element hinzu bei .
            </summary>
            <param name="key">
                Der Schlüssel unter dem ein wert hinzugefügt werden soll.
            </param>
            <param name="value">
                Der wert der Hinzugefügt werden soll.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
                Fügt eine ganze liste von werten hinzu.
            </summary>
            <param name="key">
                Der Schlüssel zu dem ein wert hinzugefügt werden soll.
            </param>
            <param name="value">
                Die werte die hinzugefügt werden sollen.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.RemoveValue(`1)">
            <summary>
                Entfernt einen wert unabhänig vom schlüssel.
            </summary>
            <param name="value">
                Der wert der entfernt werden soll.
            </param>
            <returns>
                Ob der wert Entfernt werden konnte.
            </returns>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.Remove(`1,System.Boolean)">
            <summary>
                Entfernt einen wert unabhänig vom schlüssel.
            </summary>
            <param name="value">
                Der wert der entfernt werden soll.
            </param>
            <param name="removeEmptyLists">
                Gibt an ob leere listen entfernt werden sollen.
            </param>
            <returns>
                Ob der wert Entfernt werden konnte.
            </returns>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.Remove(`0,`1)">
            <summary>
                Entfernt einen Wert aus der Liste eines bestimten schlüssels.
            </summary>
            <param name="key">
                Der schlüssel der den Wert enthält der Enfernt werden soll.
            </param>
            <param name="value">
                Der wert der Enfernt werden soll.
            </param>
            <returns>
                Ob der wert Enfernt werden konnte.
            </returns>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.Remove(`0,`1,System.Boolean)">
            <summary>
                Entfernt einen Wert aus der Liste eines bestimten schlüssels.
            </summary>
            <param name="key">
                Der schlüssel der den Wert enthält der Enfernt werden soll.
            </param>
            <param name="value">
                Der wert der Enfernt werden soll.
            </param>
            <param name="removeListIfEmpty">
                Gibt an ob alle leeren listen entfernt werden sollen.
            </param>
            <returns>
                Ob der wert Enfernt werden konnte.
            </returns>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.RemoveImpl(`0,`1,System.Boolean,System.Boolean)">
            <summary>
                The remove impl.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="val">
                The val.
            </param>
            <param name="removeEmpty">
                The remove empty.
            </param>
            <param name="removeAll">
                The remove all.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.RemoveList(System.Collections.Generic.ICollection{`1},`1)">
            <summary>
                The remove list.
            </summary>
            <param name="vals">
                The vals.
            </param>
            <param name="val">
                The val.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.GroupDictionary`2.AllValues">
            <summary>Gibt eine Collection zurück die Alle in den Listen enthaltenen Werte Darstellen.</summary>
            <value>The all values.</value>
        </member>
        <member name="P:Tauron.Application.GroupDictionary`2.Item(`0)">
            <summary>
                Gibt eine Liste mit entsprechenden Schlüssel zurück. Ist keine Liste bkannt
                wird eine erstellt.
            </summary>
            <param name="key">
                Der Schlüssel nach dem gesucht werden soll.
            </param>
            <returns>
                Eine Passende Collection.
            </returns>
        </member>
        <member name="T:Tauron.Application.GroupDictionary`2.AllValueCollection">
            <summary>The all value collection.</summary>
        </member>
        <member name="F:Tauron.Application.GroupDictionary`2.AllValueCollection._list">
            <summary>The _list.</summary>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.#ctor(Tauron.Application.GroupDictionary{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.GroupDictionary`2.AllValueCollection"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.GroupDictionary`2.AllValueCollection"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.GroupDictionary`2.AllValueCollection"/> class.
            </summary>
            <param name="list">
                The list.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.Add(`1)">
            <summary>
                Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.
            </summary>
            <param name="item">
                Das Objekt, das <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.
            </param>
            <exception cref="T:System.NotSupportedException">
                <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt.
            </exception>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.Clear">
            <summary>
                Entfernt alle Elemente aus <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">
                <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt.
            </exception>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.Contains(`1)">
            <summary>
                Bestimmt, ob <see cref="T:System.Collections.Generic.ICollection`1" /> einen bestimmten Wert enthält.
            </summary>
            <returns>
                True, wenn sich <paramref name="item" /> in <see cref="T:System.Collections.Generic.ICollection`1" /> befindet,
                andernfalls false.
            </returns>
            <param name="item">
                Das im <see cref="T:System.Collections.Generic.ICollection`1" /> zu suchende Objekt.
            </param>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.CopyTo(`1[],System.Int32)">
            <summary>
                Kopiert die Elemente von <see cref="T:System.Collections.Generic.ICollection`1" /> in ein
                <see cref="T:System.Array" />
                , beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.
            </summary>
            <param name="array">
                Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus
                <see cref="T:System.Collections.Generic.ICollection`1" />
                kopierten Elemente ist.Für <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.
            </param>
            <param name="arrayIndex">
                Der nullbasierte Index in <paramref name="array" />, an dem das Kopieren beginnt.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> hat den Wert null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="arrayIndex" /> ist kleiner als 0.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="array" /> ist mehrdimensional.
                - oder -Die Anzahl der Elemente in der Quelle <see cref="T:System.Collections.Generic.ICollection`1" />
                ist größer als der verfügbare Speicherplatz ab <paramref name="arrayIndex" /> bis zum Ende des
                <paramref name="array" />
                ,
                das als Ziel festgelegt wurde.- oder -Type TValue kann nicht automatisch in den Typ des Ziel-
                <paramref name="array" />
                umgewandelt werden.
            </exception>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.GetEnumerator">
            <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
            <returns>
                Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />, der zum Durchlaufen der Auflistung verwendet werden
                kann.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.Remove(`1)">
            <summary>
                Entfernt das erste Vorkommen eines bestimmten Objekts aus <see cref="T:System.Collections.Generic.ICollection`1" />
                .
            </summary>
            <returns>
                True, wenn <paramref name="item" /> erfolgreich aus <see cref="T:System.Collections.Generic.ICollection`1" />
                gelöscht wurde, andernfalls false.Diese Methode gibt auch dann false zurück, wenn
                <paramref name="item" />
                nicht in der ursprünglichen <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.
            </returns>
            <param name="item">
                Das aus dem <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.
            </param>
            <exception cref="T:System.NotSupportedException">
                <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt.
            </exception>
        </member>
        <member name="M:Tauron.Application.GroupDictionary`2.AllValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
            <returns>
                Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden
                kann.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Tauron.Application.GroupDictionary`2.AllValueCollection.Count">
            <summary>
                Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Generic.ICollection`1" /> enthalten sind.
            </summary>
            <returns>
                Die Anzahl der Elemente, die in <see cref="T:System.Collections.Generic.ICollection`1" /> enthalten sind.
            </returns>
            <value>The count.</value>
        </member>
        <member name="P:Tauron.Application.GroupDictionary`2.AllValueCollection.IsReadOnly">
            <summary>
                Ruft einen Wert ab, der angibt, ob <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.
            </summary>
            <returns>
                True, wenn <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.
            </returns>
            <value>The is read only.</value>
        </member>
        <member name="P:Tauron.Application.GroupDictionary`2.AllValueCollection.GetAll">
            <summary>Gets the get all.</summary>
            <value>The get all.</value>
        </member>
        <member name="T:Tauron.Application.MsgBoxImage">
            <summary>The msg box image.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.None">
            <summary>The none.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Error">
            <summary>The error.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Hand">
            <summary>The hand.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Stop">
            <summary>The stop.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Question">
            <summary>The question.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Exclamation">
            <summary>The exclamation.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Warning">
            <summary>The warning.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Asterisk">
            <summary>The asterisk.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxImage.Information">
            <summary>The information.</summary>
        </member>
        <member name="T:Tauron.Application.MsgBoxButton">
            <summary>The msg box button.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxButton.Ok">
            <summary>The ok.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxButton.OkCancel">
            <summary>The ok cancel.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxButton.YesNoCancel">
            <summary>The yes no cancel.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxButton.YesNo">
            <summary>The yes no.</summary>
        </member>
        <member name="T:Tauron.Application.MsgBoxResult">
            <summary>The msg box result.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxResult.None">
            <summary>The none.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxResult.Ok">
            <summary>The ok.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxResult.Cancel">
            <summary>The cancel.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxResult.Yes">
            <summary>The yes.</summary>
        </member>
        <member name="F:Tauron.Application.MsgBoxResult.No">
            <summary>The no.</summary>
        </member>
        <member name="T:Tauron.Application.IDialogFactory">
            <summary>The DialogFactory interface.</summary>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.CreateProgressDialog(System.String,System.String,Tauron.Application.IWindow,System.Action{System.IProgress{Tauron.Application.ActiveProgress}})">
            <summary>
                The create progress dialog.
            </summary>
            <param name="text">
                The text.
            </param>
            <param name="title">
                The title.
            </param>
            <param name="owner">
                The owner.
            </param>
            <param name="worker">
                The worker.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.IProgressDialog"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.FormatException(Tauron.Application.IWindow,System.Exception)">
            <summary>
                The format exception.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="exception">
                The exception.
            </param>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.GetText(Tauron.Application.IWindow,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
                The get text.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="instruction">
                The instruction.
            </param>
            <param name="content">
                The content.
            </param>
            <param name="caption">
                The caption.
            </param>
            <param name="allowCancel">
                The allow cancel.
            </param>
            <param name="defaultValue">
                The default value.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.ShowMessageBox(Tauron.Application.IWindow,System.String,System.String,Tauron.Application.MsgBoxButton,Tauron.Application.MsgBoxImage,System.Drawing.Icon)">
            <summary>
                The show message box.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="text">
                The text.
            </param>
            <param name="caption">
                The caption.
            </param>
            <param name="button">
                The button.
            </param>
            <param name="icon">
                The icon.
            </param>
            <param name="custumIcon">
                The custum icon.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.MsgBoxResult"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.ShowOpenFileDialog(Tauron.Application.IWindow,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Nullable{System.Boolean}@)">
            <summary>
                The show open file dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="checkFileExists">
                The check file exists.
            </param>
            <param name="defaultExt">
                The default ext.
            </param>
            <param name="dereferenceLinks">
                The dereference links.
            </param>
            <param name="filter">
                The filter.
            </param>
            <param name="multiSelect">
                The multi select.
            </param>
            <param name="title">
                The title.
            </param>
            <param name="validateNames">
                The validate names.
            </param>
            <param name="checkPathExists">
                The check path exists.
            </param>
            <param name="result">
                The result.
            </param>
            <returns>
                The <see>
                    <cref>IEnumerable</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.ShowOpenFolderDialog(Tauron.Application.IWindow,System.String,System.Environment.SpecialFolder,System.Boolean,System.Boolean,System.Nullable{System.Boolean}@)">
            <summary>
                The show open folder dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="description">
                The description.
            </param>
            <param name="rootFolder">
                The root folder.
            </param>
            <param name="showNewFolderButton">
                The show new folder button.
            </param>
            <param name="useDescriptionForTitle">
                The use description for title.
            </param>
            <param name="result">
                The result.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.ShowSaveFileDialog(Tauron.Application.IWindow,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Nullable{System.Boolean}@)">
            <summary>
                The show save file dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="addExtension">
                The add extension.
            </param>
            <param name="checkFileExists">
                The check file exists.
            </param>
            <param name="checkPathExists">
                The check path exists.
            </param>
            <param name="defaultExt">
                The default ext.
            </param>
            <param name="dereferenceLinks">
                The dereference links.
            </param>
            <param name="filter">
                The filter.
            </param>
            <param name="createPrompt">
                The create prompt.
            </param>
            <param name="overwritePrompt">
                The overwrite prompt.
            </param>
            <param name="title">
                The title.
            </param>
            <param name="initialDirectory">
                The initial directory.
            </param>
            <param name="result">
                The result.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IDialogFactory.ShowTaskDialog(Tauron.Application.IWindow,System.String,System.String,Tauron.Application.MsgBoxButton,Tauron.Application.MsgBoxImage,System.Drawing.Icon)">
            <summary>
                The show task dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="text">
                The text.
            </param>
            <param name="caption">
                The caption.
            </param>
            <param name="button">
                The button.
            </param>
            <param name="icon">
                The icon.
            </param>
            <param name="custumIcon">
                The custum icon.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.MsgBoxResult"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.CreateProgressDialog(System.String,System.String,Tauron.Application.IWindow,System.Action{System.IProgress{Tauron.Application.ActiveProgress}})">
            <summary>
                The create progress dialog.
            </summary>
            <param name="text">
                The text.
            </param>
            <param name="title">
                The title.
            </param>
            <param name="owner">
                The owner.
            </param>
            <param name="worker">
                The worker.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.IProgressDialog"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.FormatException(Tauron.Application.IWindow,System.Exception)">
            <summary>
                The format exception.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="exception">
                The exception.
            </param>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.GetText(Tauron.Application.IWindow,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
                The get text.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="instruction">
                The instruction.
            </param>
            <param name="content">
                The content.
            </param>
            <param name="caption">
                The caption.
            </param>
            <param name="allowCancel">
                The allow cancel.
            </param>
            <param name="defaultValue">
                The default value.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.ShowMessageBox(Tauron.Application.IWindow,System.String,System.String,Tauron.Application.MsgBoxButton,Tauron.Application.MsgBoxImage,System.Drawing.Icon)">
            <summary>
                The show message box.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="text">
                The text.
            </param>
            <param name="caption">
                The caption.
            </param>
            <param name="button">
                The button.
            </param>
            <param name="icon">
                The icon.
            </param>
            <param name="custumIcon">
                The custum icon.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.MsgBoxResult"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.ShowOpenFileDialog(Tauron.Application.IWindow,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Nullable{System.Boolean}@)">
            <summary>
                The show open file dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="checkFileExists">
                The check file exists.
            </param>
            <param name="defaultExt">
                The default ext.
            </param>
            <param name="dereferenceLinks">
                The dereference links.
            </param>
            <param name="filter">
                The filter.
            </param>
            <param name="multiSelect">
                The multi select.
            </param>
            <param name="title">
                The title.
            </param>
            <param name="validateNames">
                The validate names.
            </param>
            <param name="checkPathExists">
                The check path exists.
            </param>
            <param name="result">
                The result.
            </param>
            <returns>
                The <see>
                    <cref>IEnumerable</cref>
                </see>
                .
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.ShowOpenFolderDialog(Tauron.Application.IWindow,System.String,System.Environment.SpecialFolder,System.Boolean,System.Boolean,System.Nullable{System.Boolean}@)">
            <summary>
                The show open folder dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="description">
                The description.
            </param>
            <param name="rootFolder">
                The root folder.
            </param>
            <param name="showNewFolderButton">
                The show new folder button.
            </param>
            <param name="useDescriptionForTitle">
                The use description for title.
            </param>
            <param name="result">
                The result.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.ShowSaveFileDialog(Tauron.Application.IWindow,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Nullable{System.Boolean}@)">
            <summary>
                The show save file dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="addExtension">
                The add extension.
            </param>
            <param name="checkFileExists">
                The check file exists.
            </param>
            <param name="checkPathExists">
                The check path exists.
            </param>
            <param name="defaultExt">
                The default ext.
            </param>
            <param name="dereferenceLinks">
                The dereference links.
            </param>
            <param name="filter">
                The filter.
            </param>
            <param name="createPrompt">
                The create prompt.
            </param>
            <param name="overwritePrompt">
                The overwrite prompt.
            </param>
            <param name="title">
                The title.
            </param>
            <param name="initialDirectory">
                The initial directory.
            </param>
            <param name="result">
                The result.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.DialogFactoryContracts.ShowTaskDialog(Tauron.Application.IWindow,System.String,System.String,Tauron.Application.MsgBoxButton,Tauron.Application.MsgBoxImage,System.Drawing.Icon)">
            <summary>
                The show task dialog.
            </summary>
            <param name="owner">
                The owner.
            </param>
            <param name="text">
                The text.
            </param>
            <param name="caption">
                The caption.
            </param>
            <param name="button">
                The button.
            </param>
            <param name="icon">
                The icon.
            </param>
            <param name="custumIcon">
                The custum icon.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.MsgBoxResult"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ProgressStyle">
            <summary>The progress style.</summary>
        </member>
        <member name="F:Tauron.Application.ProgressStyle.None">
            <summary>The none.</summary>
        </member>
        <member name="F:Tauron.Application.ProgressStyle.ProgressBar">
            <summary>The progress bar.</summary>
        </member>
        <member name="F:Tauron.Application.ProgressStyle.MarqueeProgressBar">
            <summary>The marquee progress bar.</summary>
        </member>
        <member name="T:Tauron.Application.IProgressDialog">
            <summary>The ProgressDialog interface.</summary>
        </member>
        <member name="M:Tauron.Application.IProgressDialog.Start">
            <summary>The start.</summary>
        </member>
        <member name="E:Tauron.Application.IProgressDialog.Completed">
            <summary>The completed.</summary>
        </member>
        <member name="P:Tauron.Application.IProgressDialog.ProgressBarStyle">
            <summary>Gets or sets the progress bar style.</summary>
            <value>The progress bar style.</value>
        </member>
        <member name="T:Tauron.Application.Implement.CommandLineProcessor">
            <summary>The command line processor.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.CommandLineProcessor._application">
            <summary>The _application.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.CommandLineProcessor._commands">
            <summary>The _commands.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.CommandLineProcessor._factory">
            <summary>The _factory.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineProcessor.#ctor(Tauron.Application.CommonApplication)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.CommandLineProcessor"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Implement.CommandLineProcessor"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.CommandLineProcessor"/> class.
            </summary>
            <param name="application">
                The application.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineProcessor.CreateShellView">
            <summary>The create shell view.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineProcessor.ExecuteCommands">
            <summary>The execute commands.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineProcessor.ParseCommandLine">
            <summary>The parse command line.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineProcessor.SelectViewFacotry">
            <summary>The select view facotry.</summary>
        </member>
        <member name="T:Tauron.Application.Implement.CommandLineProcessor.Command">
            <summary>The command.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineProcessor.Command.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.CommandLineProcessor.Command"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Implement.CommandLineProcessor.Command"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.CommandLineProcessor.Command"/> class.
            </summary>
            <param name="name">
                The name.
            </param>
        </member>
        <member name="P:Tauron.Application.Implement.CommandLineProcessor.Command.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Tauron.Application.Implement.CommandLineProcessor.Command.Parms">
            <summary>Gets the parms.</summary>
            <value>The parms.</value>
        </member>
        <member name="T:Tauron.Application.Implement.CommandLineService">
            <summary>The command line service.</summary>
        </member>
        <member name="T:Tauron.Application.ICommandLineService">
            <summary>The CommandLineService interface.</summary>
        </member>
        <member name="M:Tauron.Application.ICommandLineService.Add(Tauron.Application.ICommandLineCommand)">
            <summary>
                The add.
            </summary>
            <param name="command">
                The command.
            </param>
        </member>
        <member name="P:Tauron.Application.ICommandLineService.Commands">
            <summary>Gets the commands.</summary>
            <value>The commands.</value>
        </member>
        <member name="F:Tauron.Application.Implement.CommandLineService._commands">
            <summary>The _commands.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.CommandLineService.Add(Tauron.Application.ICommandLineCommand)">
            <summary>
                The add.
            </summary>
            <param name="command">
                The command.
            </param>
        </member>
        <member name="P:Tauron.Application.Implement.CommandLineService.Commands">
            <summary>Gets the commands.</summary>
            <value>The commands.</value>
        </member>
        <member name="T:Tauron.Application.DefaultShellFactory">
            <summary>The default shell factory.</summary>
        </member>
        <member name="T:Tauron.Application.IShellFactory">
            <summary>The ShellFactory interface.</summary>
        </member>
        <member name="M:Tauron.Application.IShellFactory.CreateView">
            <summary>The create view.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="F:Tauron.Application.DefaultShellFactory._shellType">
            <summary>The _shell type.</summary>
        </member>
        <member name="M:Tauron.Application.DefaultShellFactory.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.DefaultShellFactory"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.DefaultShellFactory"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.DefaultShellFactory"/> class.
            </summary>
            <param name="shellType">
                The shell type.
            </param>
        </member>
        <member name="M:Tauron.Application.DefaultShellFactory.CreateView">
            <summary>The create view.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.CommandLineCommandContracts.Execute(System.String[],Tauron.Application.Ioc.IContainer)">
            <summary>
                The execute.
            </summary>
            <param name="args">
                The args.
            </param>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="P:Tauron.Application.CommandLineCommandContracts.CommandName">
            <summary>Gets the command name.</summary>
            <value>The command name.</value>
        </member>
        <member name="P:Tauron.Application.CommandLineCommandContracts.Factory">
            <summary>Gets the factory.</summary>
            <value>The factory.</value>
        </member>
        <member name="M:Tauron.Application.CommandLineServiceContracts.Add(Tauron.Application.ICommandLineCommand)">
            <summary>
                The add.
            </summary>
            <param name="command">
                The command.
            </param>
        </member>
        <member name="P:Tauron.Application.CommandLineServiceContracts.Commands">
            <summary>Gets the commands.</summary>
            <value>The commands.</value>
        </member>
        <member name="T:Tauron.Application.Implement.ApplicationHelper">
            <summary>The application helper.</summary>
        </member>
        <member name="T:Tauron.Application.IApplicationHelper">
            <summary>The ApplicationHelper interface.</summary>
        </member>
        <member name="M:Tauron.Application.IApplicationHelper.CreateUIThread(System.Threading.ThreadStart)">
            <summary>
                The create ui thread.
            </summary>
            <param name="start">
                The start.
            </param>
            <returns>
                The <see cref="T:System.Threading.Thread"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IApplicationHelper.RunAnonymousApplication``1">
            <summary>The run anonymous application.</summary>
            <typeparam name="T"></typeparam>
            <returns>
                The <see cref="T:Tauron.Application.IWindow"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IApplicationHelper.RunAnonymousApplication(Tauron.Application.IWindow)">
            <summary>
                The run anonymous application.
            </summary>
            <param name="window">
                The window.
            </param>
        </member>
        <member name="M:Tauron.Application.IApplicationHelper.RunUIThread(System.Threading.ThreadStart)">
            <summary>
                The run ui thread.
            </summary>
            <param name="start">
                The start.
            </param>
        </member>
        <member name="F:Tauron.Application.Implement.ApplicationHelper._factory">
            <summary>The _factory.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.CreateUIThread(System.Threading.ThreadStart)">
            <summary>
                The create ui thread.
            </summary>
            <param name="start">
                The start.
            </param>
            <returns>
                The <see cref="T:System.Threading.Thread"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.RunAnonymousApplication``1">
            <summary>The run anonymous application.</summary>
            <typeparam name="T"></typeparam>
            <returns>
                The <see cref="T:Tauron.Application.IWindow"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.RunAnonymousApplication(Tauron.Application.IWindow)">
            <summary>
                The run anonymous application.
            </summary>
            <param name="window">
                The window.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.RunUIThread(System.Threading.ThreadStart)">
            <summary>
                The run ui thread.
            </summary>
            <param name="start">
                The start.
            </param>
        </member>
        <member name="T:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1">
            <summary>
                The start up helper.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="F:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1._helper">
            <summary>The _helper.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1._temp">
            <summary>The _temp.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1.#ctor(Tauron.Application.Implement.ApplicationHelper)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1"/> class.
            </summary>
            <param name="helper">
                The helper.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1.Start">
            <summary>The start.</summary>
            <returns>
                The <see cref="!:T"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.ApplicationHelper.StartUpHelper`1.Starthelper">
            <summary>The starthelper.</summary>
        </member>
        <member name="T:Tauron.Application.ClipboardViewer">
            <summary>The clipboard viewer.</summary>
        </member>
        <member name="F:Tauron.Application.ClipboardViewer._disposed">
            <summary>The _disposed.</summary>
        </member>
        <member name="F:Tauron.Application.ClipboardViewer._hWndNextViewer">
            <summary>The _h wnd next viewer.</summary>
        </member>
        <member name="F:Tauron.Application.ClipboardViewer._isViewing">
            <summary>The _is viewing.</summary>
        </member>
        <member name="F:Tauron.Application.ClipboardViewer._target">
            <summary>The _target.</summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.#ctor(Tauron.Application.IWindow,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ClipboardViewer"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ClipboardViewer"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.ClipboardViewer"/> class.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="registerForClose">
                The register for close.
            </param>
            <param name="performInitialization">
                The perform initialization.
            </param>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Tauron.Application.ClipboardViewer"/> class.
                Finalisiert eine Instanz der <see cref="T:Tauron.Application.ClipboardViewer"/> Klasse.
                Finalizes an instance of the <see cref="T:Tauron.Application.ClipboardViewer"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.Initialize">
            <summary>The initialize.</summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.CloseCbViewer">
            <summary>The close cb viewer.</summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.OnClipboardChanged">
            <summary>The on clipboard changed.</summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.TargetClosed(System.Object,System.EventArgs)">
            <summary>
                The target closed.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.WinProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
                The win proc.
            </summary>
            <param name="hwnd">
                The hwnd.
            </param>
            <param name="msg">
                The msg.
            </param>
            <param name="wParam">
                The w param.
            </param>
            <param name="lParam">
                The l param.
            </param>
            <param name="handled">
                The handled.
            </param>
            <returns>
                The <see cref="T:System.IntPtr"/>.
            </returns>
        </member>
        <member name="E:Tauron.Application.ClipboardViewer.ClipboardChanged">
            <summary>The clipboard changed.</summary>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.ViewerSafeHandle.#ctor(System.IntPtr,Tauron.Application.IWindow)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ClipboardViewer.ViewerSafeHandle"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ClipboardViewer.ViewerSafeHandle"/> Klasse.
            </summary>
            <param name="nextViewer">
                The next viewer.
            </param>
            <param name="current">
                The current.
            </param>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.ViewerSafeHandle.SetNewhandler(System.IntPtr)">
            <summary>
                The set newhandler.
            </summary>
            <param name="intPtr">
                The int ptr.
            </param>
        </member>
        <member name="M:Tauron.Application.ClipboardViewer.ViewerSafeHandle.ReleaseHandle">
            <summary>The release handle.</summary>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.IClipboardManager">
            <summary>The ClipboardManager interface.</summary>
        </member>
        <member name="M:Tauron.Application.IClipboardManager.CreateViewer(Tauron.Application.IWindow,System.Boolean,System.Boolean)">
            <summary>
                The create viewer.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="registerForClose">
                The register for close.
            </param>
            <param name="performInitialization">
                The perform initialization.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.ClipboardViewer"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ClipboardManagerContracts.CreateViewer(Tauron.Application.IWindow,System.Boolean,System.Boolean)">
            <summary>
                The create viewer.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="registerForClose">
                The register for close.
            </param>
            <param name="performInitialization">
                The perform initialization.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.ClipboardViewer"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.WindowHook">
            <summary>The window hook.</summary>
            <param name="hwnd">The hwnd.</param>
            <param name="msg">The msg.</param>
            <param name="wParam">The w param.</param>
            <param name="lParam">The l param.</param>
            <param name="handled">The handled.</param>
        </member>
        <member name="T:Tauron.Application.IWindow">
            <summary>The Window interface.</summary>
        </member>
        <member name="M:Tauron.Application.IWindow.AddHook(Tauron.Application.WindowHook)">
            <summary>
                The add hook.
            </summary>
            <param name="winProc">
                The win proc.
            </param>
        </member>
        <member name="M:Tauron.Application.IWindow.Close">
            <summary>The close.</summary>
        </member>
        <member name="M:Tauron.Application.IWindow.RemoveHook(Tauron.Application.WindowHook)">
            <summary>
                The remove hook.
            </summary>
            <param name="winProc">
                The win proc.
            </param>
        </member>
        <member name="M:Tauron.Application.IWindow.Show">
            <summary>The show.</summary>
        </member>
        <member name="M:Tauron.Application.IWindow.TranslateForTechnology">
            <summary>The translate for technology.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="E:Tauron.Application.IWindow.Closed">
            <summary>The closed.</summary>
        </member>
        <member name="P:Tauron.Application.IWindow.Handle">
            <summary>Gets the handle.</summary>
            <value>The handle.</value>
        </member>
        <member name="P:Tauron.Application.IWindow.Title">
            <summary>Gets or sets the title.</summary>
        </member>
        <member name="M:Tauron.Application.WindowContracts.AddHook(Tauron.Application.WindowHook)">
            <summary>
                The add hook.
            </summary>
            <param name="winProc">
                The win proc.
            </param>
        </member>
        <member name="M:Tauron.Application.WindowContracts.Close">
            <summary>The close.</summary>
        </member>
        <member name="M:Tauron.Application.WindowContracts.RemoveHook(Tauron.Application.WindowHook)">
            <summary>
                The remove hook.
            </summary>
            <param name="winProc">
                The win proc.
            </param>
        </member>
        <member name="M:Tauron.Application.WindowContracts.Show">
            <summary>The show.</summary>
        </member>
        <member name="M:Tauron.Application.WindowContracts.TranslateForTechnology">
            <summary>The translate for technology.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="E:Tauron.Application.WindowContracts.Closed">
            <summary>The closed.</summary>
        </member>
        <member name="P:Tauron.Application.WindowContracts.Handle">
            <summary>Gets the handle.</summary>
            <value>The handle.</value>
        </member>
        <member name="P:Tauron.Application.WindowContracts.Title">
            <summary>Gets or sets the title.</summary>
        </member>
        <member name="T:Tauron.Application.ApplicationHelperContracts">
            <summary>The application helper contracts.</summary>
        </member>
        <member name="M:Tauron.Application.ApplicationHelperContracts.CreateUIThread(System.Threading.ThreadStart)">
            <summary>
                The create ui thread.
            </summary>
            <param name="start">
                The start.
            </param>
            <returns>
                The <see cref="T:System.Threading.Thread"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ApplicationHelperContracts.RunAnonymousApplication``1">
            <summary>The run anonymous application.</summary>
            <typeparam name="T"></typeparam>
            <returns>
                The <see cref="T:Tauron.Application.IWindow"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ApplicationHelperContracts.RunAnonymousApplication(Tauron.Application.IWindow)">
            <summary>
                The run anonymous application.
            </summary>
            <param name="window">
                The window.
            </param>
        </member>
        <member name="M:Tauron.Application.ApplicationHelperContracts.RunUIThread(System.Threading.ThreadStart)">
            <summary>
                The run ui thread.
            </summary>
            <param name="start">
                The start.
            </param>
        </member>
        <member name="T:Tauron.Application.Implement.ClipboardManager">
            <summary>The clipboard manager.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.ClipboardManager.CreateViewer(Tauron.Application.IWindow,System.Boolean,System.Boolean)">
            <summary>
                The create viewer.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="registerForClose">
                The register for close.
            </param>
            <param name="performInitialization">
                The perform initialization.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.ClipboardViewer"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ShellFactoryContracts.CreateView">
            <summary>The create view.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ISingleThreadScheduler">
            <summary>The SingleThreadScheduler interface.</summary>
        </member>
        <member name="M:Tauron.Application.ISingleThreadScheduler.Queue(System.Action)">
            <summary>
                The queue.
            </summary>
            <param name="task">
                The task.
            </param>
        </member>
        <member name="P:Tauron.Application.ISingleThreadScheduler.IsBackground">
            <summary>Gets or sets a value indicating whether is background.</summary>
            <value>The is background.</value>
        </member>
        <member name="M:Tauron.Application.SingleThreadSchedulerContracts.Queue(System.Action)">
            <summary>
                The queue.
            </summary>
            <param name="task">
                The task.
            </param>
        </member>
        <member name="P:Tauron.Application.SingleThreadSchedulerContracts.IsBackground">
            <summary>Gets or sets a value indicating whether is background.</summary>
            <value>The is background.</value>
        </member>
        <member name="T:Tauron.Application.ISingleInstanceApp">
            <summary>The SingleInstanceApp interface.</summary>
        </member>
        <member name="M:Tauron.Application.ISingleInstanceApp.SignalExternalCommandLineArgs(System.Collections.Generic.IList{System.String})">
            <summary>
                The signal external command line args.
            </summary>
            <param name="args">
                The args.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.SingleInstanceAppContracts.SignalExternalCommandLineArgs(System.Collections.Generic.IList{System.String})">
            <summary>
                The signal external command line args.
            </summary>
            <param name="args">
                The args.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Implement.SingleThreadScheduler">
            <summary>The single thread scheduler.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleThreadScheduler._tasks">
            <summary>The _tasks.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleThreadScheduler._thread">
            <summary>The _thread.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleThreadScheduler.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.SingleThreadScheduler"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Implement.SingleThreadScheduler"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Implement.SingleThreadScheduler"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleThreadScheduler.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Tauron.Application.Implement.SingleThreadScheduler"/> class.
                Finalisiert eine Instanz der <see cref="T:Tauron.Application.Implement.SingleThreadScheduler"/> Klasse.
                Finalizes an instance of the <see cref="T:Tauron.Application.Implement.SingleThreadScheduler"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleThreadScheduler.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleThreadScheduler.Queue(System.Action)">
            <summary>
                The queue.
            </summary>
            <param name="task">
                The task.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.SingleThreadScheduler.EnterLoop">
            <summary>The enter loop.</summary>
        </member>
        <member name="P:Tauron.Application.Implement.SingleThreadScheduler.IsBackground">
            <summary>Gets or sets a value indicating whether is background.</summary>
            <value>The is background.</value>
        </member>
        <member name="T:Tauron.Application.CommonApplication">
            <summary>The common application.</summary>
        </member>
        <member name="F:Tauron.Application.CommonApplication._current">
            <summary>The _current.</summary>
        </member>
        <member name="F:Tauron.Application.CommonApplication._scheduler">
            <summary>The _scheduler.</summary>
        </member>
        <member name="F:Tauron.Application.CommonApplication._doStartup">
            <summary>The _do startup.</summary>
        </member>
        <member name="F:Tauron.Application.CommonApplication._splash">
            <summary>The _splash.</summary>
        </member>
        <member name="F:Tauron.Application.CommonApplication._args">
            <summary>The _args.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.#ctor(System.Boolean,Tauron.Application.ISplashService,Tauron.Application.IUIControllerFactory)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.CommonApplication"/> Klasse.
            </summary>
            <param name="doStartup">
                The do startup.
            </param>
            <param name="service">
                The service.
            </param>
            <param name="factory">
                The factory.
            </param>
        </member>
        <member name="M:Tauron.Application.CommonApplication.QueueWorkitem(System.Action,System.Boolean)">
            <summary>
                The queue workitem.
            </summary>
            <param name="action">
                The action.
            </param>
            <param name="withDispatcher">
                The with dispatcher.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.CommonApplication.GetArgs">
            <summary>The get args.</summary>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.CommonApplication.CreateConfiguration">
            <summary>The create configuration.</summary>
            <returns>
                The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.CommonApplication.CreateContainer">
            <summary>The create container.</summary>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.IContainer"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.CommonApplication.DoStartup(Tauron.Application.Implement.CommandLineProcessor)">
            <summary>
                The do startup.
            </summary>
            <param name="args">
                The args.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.IWindow"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.CommonApplication.Fill(Tauron.Application.Ioc.IContainer)">
            <summary>
                The fill.
            </summary>
            <param name="container">
                The container.
            </param>
        </member>
        <member name="M:Tauron.Application.CommonApplication.LoadCommands">
            <summary>The load commands.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.LoadResources">
            <summary>The load resources.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.MainWindowClosed(System.Object,System.EventArgs)">
            <summary>
                The main window closed.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="M:Tauron.Application.CommonApplication.OnExit">
            <summary>The on exit.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.OnStartup(System.String[])">
            <summary>
                The on startup.
            </summary>
            <param name="args">
                The args.
            </param>
        </member>
        <member name="M:Tauron.Application.CommonApplication.Shutdown">
            <summary>The shutdown.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.PerformStartup">
            <summary>The perform startup.</summary>
        </member>
        <member name="P:Tauron.Application.CommonApplication.Current">
            <summary>Gets the current.</summary>
            <value>The current.</value>
        </member>
        <member name="P:Tauron.Application.CommonApplication.Scheduler">
            <summary>Gets the scheduler.</summary>
            <value>The scheduler.</value>
        </member>
        <member name="P:Tauron.Application.CommonApplication.CatalogList">
            <summary>Gets or sets the catalog list.</summary>
            <value>The catalog list.</value>
        </member>
        <member name="P:Tauron.Application.CommonApplication.Container">
            <summary>Gets or sets the container.</summary>
            <value>The container.</value>
        </member>
        <member name="P:Tauron.Application.CommonApplication.Factory">
            <summary>Gets or sets the factory.</summary>
        </member>
        <member name="P:Tauron.Application.CommonApplication.SourceAssembly">
            <summary>Gets or sets the source assembly.</summary>
            <value>The source assembly.</value>
        </member>
        <member name="T:Tauron.Application.CommonApplication.NullSplash">
            <summary>The null splash.</summary>
        </member>
        <member name="T:Tauron.Application.ISplashService">
            <summary>The SplashService interface.</summary>
        </member>
        <member name="M:Tauron.Application.ISplashService.CloseSplash">
            <summary>The close splash.</summary>
        </member>
        <member name="M:Tauron.Application.ISplashService.ShowSplash">
            <summary>The show splash.</summary>
        </member>
        <member name="P:Tauron.Application.ISplashService.Listner">
            <summary>Gets the listner.</summary>
            <value>The listner.</value>
        </member>
        <member name="M:Tauron.Application.CommonApplication.NullSplash.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.CommonApplication.NullSplash"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.CommonApplication.NullSplash"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.CommonApplication.NullSplash"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.NullSplash.CloseSplash">
            <summary>The close splash.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplication.NullSplash.ShowSplash">
            <summary>The show splash.</summary>
        </member>
        <member name="P:Tauron.Application.CommonApplication.NullSplash.Listner">
            <summary>Gets the listner.</summary>
            <value>The listner.</value>
        </member>
        <member name="T:Tauron.Application.CommonApplicationContracts">
            <summary>The common application contracts.</summary>
        </member>
        <member name="M:Tauron.Application.CommonApplicationContracts.#ctor(System.Boolean,Tauron.Application.ISplashService,Tauron.Application.IUIControllerFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.CommonApplicationContracts"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.CommonApplicationContracts"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.CommonApplicationContracts"/> class.
            </summary>
            <param name="doStartup">
                The do startup.
            </param>
            <param name="service">
                The service.
            </param>
            <param name="factory">
                The factory.
            </param>
        </member>
        <member name="P:Tauron.Application.CommonApplicationContracts.Container">
            <summary>Gets or sets the container.</summary>
            <value>The container.</value>
        </member>
        <member name="T:Tauron.Application.WeakAction">
            <summary>Speichert informationen für eine Aktion ohne Refernce auf das Object.</summary>
        </member>
        <member name="F:Tauron.Application.WeakAction._delegateType">
            <summary>The _delegate type.</summary>
        </member>
        <member name="F:Tauron.Application.WeakAction._method">
            <summary>The _method.</summary>
        </member>
        <member name="M:Tauron.Application.WeakAction.#ctor(System.Object,System.Reflection.MethodInfo,System.Type)">
            <summary>
            </summary>
            <param name="target">
                Das Ziel Object.
            </param>
            <param name="method">
                Die Methode die Ausgeführt werden soll.
            </param>
            <param name="parameterType">
                Der Parameter der methode.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakAction.#ctor(System.Object,System.Reflection.MethodInfo)">
            <summary>
                Initialisiert eine Instanz der Klasse mit einer methode mit Maximal 16 Parameter.
            </summary>
            <param name="target">
                Das Object mit dem die Methode Ausgeführt werden soll.
            </param>
            <param name="method">
                Die Methode die AUsgefürt werden soll.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakAction.Invoke(System.Object[])">
            <summary>
                Führt die Methode aus.
            </summary>
            <param name="parms">
                Die Argumente die Übergeben werden.
            </param>
            <returns>
                Das Ergebnis der Methode.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakAction.CreateDelegate">
            <summary>Creates callback delegate.</summary>
            <returns>Callback delegate.</returns>
        </member>
        <member name="M:Tauron.Application.WeakAction.FactoryDelegateType(System.String,System.Type[])">
            <summary>
                The factory delegate type.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="types">
                The types.
            </param>
            <returns>
                The <see cref="T:System.Type"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="P:Tauron.Application.WeakAction.MethodInfo">
            <summary>Die ZielMethode.</summary>
            <value>The method info.</value>
        </member>
        <member name="P:Tauron.Application.WeakAction.TargetObject">
            <summary>Das Object mit dem die Methode Ausgeführt werden soll.</summary>
            <value>The target object.</value>
        </member>
        <member name="T:Tauron.Application.WeakActionEvent`1">
            <summary>
                Sammelt eine Gruppe von WeakAction Handlern und führ sie Gleichzeitig aus.
            </summary>
            <typeparam name="T">
                Der Type der Des Parameters.
            </typeparam>
        </member>
        <member name="F:Tauron.Application.WeakActionEvent`1._delegates">
            <summary>The _delegates.</summary>
        </member>
        <member name="M:Tauron.Application.WeakActionEvent`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakActionEvent`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.WeakActionEvent`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakActionEvent`1"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.WeakActionEvent`1.Add(System.Action{`0})">
            <summary>
            </summary>
            <param name="handler">
            </param>
            <returns>
                The WeakActionEvent.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakActionEvent`1.Invoke(`0)">
            <summary>
                Führt alle Handler aus und entfehrt dabei alle Toton Eiträge.
            </summary>
            <param name="arg">
                Des Argument das Allen übergeben werden soll.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakActionEvent`1.Remove(System.Action{`0})">
            <summary>
            </summary>
            <param name="handler">
            </param>
            <returns>
                The WeakActionEvent.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakActionEvent`1.CleanUp">
            <summary>The clean up.</summary>
        </member>
        <member name="T:Tauron.Application.WeakDelegate">
            <summary>The weak delegate.</summary>
        </member>
        <member name="F:Tauron.Application.WeakDelegate._method">
            <summary>The _method.</summary>
        </member>
        <member name="F:Tauron.Application.WeakDelegate._reference">
            <summary>The _reference.</summary>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.#ctor(System.Delegate)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakDelegate"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.WeakDelegate"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakDelegate"/> class.
            </summary>
            <param name="delegate">
                The delegate.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.#ctor(System.Reflection.MethodBase,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakDelegate"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.WeakDelegate"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakDelegate"/> class.
            </summary>
            <param name="methodInfo">
                The method info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.Equals(Tauron.Application.WeakDelegate)">
            <summary>
                The equals.
            </summary>
            <param name="other">
                The other.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.op_Equality(Tauron.Application.WeakDelegate,Tauron.Application.WeakDelegate)">
            <summary>The ==.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.op_Inequality(Tauron.Application.WeakDelegate,Tauron.Application.WeakDelegate)">
            <summary>The !=.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.Equals(System.Object)">
            <summary>
                The equals.
            </summary>
            <param name="obj">
                The obj.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.GetHashCode">
            <summary>The get hash code.</summary>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakDelegate.Invoke(System.Object[])">
            <summary>
                The invoke.
            </summary>
            <param name="parms">
                The parms.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.WeakDelegate.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.WeakCleanUp">
            <summary>The weak clean up.</summary>
        </member>
        <member name="F:Tauron.Application.WeakCleanUp.WeakCleanUpExceptionPolicy">
            <summary>WeakCleanUpExceptionPolicy.</summary>
        </member>
        <member name="F:Tauron.Application.WeakCleanUp.Actions">
            <summary>The actions.</summary>
        </member>
        <member name="M:Tauron.Application.WeakCleanUp.RegisterAction(System.Action)">
            <summary>
                The register action.
            </summary>
            <param name="action">
                The action.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakCleanUp.Initialize">
            <summary>The initialize.</summary>
            <returns>The List.</returns>
        </member>
        <member name="M:Tauron.Application.WeakCleanUp.InvokeCleanUp">
            <summary>The invoke clean up.</summary>
        </member>
        <member name="M:Tauron.Application.WeakCleanUp.GCNotifier.#ctor(System.Threading.AutoResetEvent)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakCleanUp.GCNotifier"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.WeakCleanUp.GCNotifier"/> Klasse.
            </summary>
            <param name="resetEvent">
                The reset event.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakCleanUp.GCNotifier.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Tauron.Application.WeakCleanUp.GCNotifier"/> class.
                Finalisiert eine Instanz der <see cref="T:Tauron.Application.WeakCleanUp.GCNotifier"/> Klasse.
            </summary>
        </member>
        <member name="T:Tauron.Application.WeakCollection`1">
            <summary>
                The weak collection.
            </summary>
            <typeparam name="TType">
            </typeparam>
        </member>
        <member name="F:Tauron.Application.WeakCollection`1._internalCollection">
            <summary>The _internal collection.</summary>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakCollection`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.WeakCollection`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.Add(`0)">
            <summary>
                The add.
            </summary>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.Clear">
            <summary>The clear.</summary>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.Contains(`0)">
            <summary>
                The contains.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
                The copy to.
            </summary>
            <param name="array">
                The array.
            </param>
            <param name="arrayIndex">
                The array index.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.IndexOf(`0)">
            <summary>
                The index of.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.Insert(System.Int32,`0)">
            <summary>
                The insert.
            </summary>
            <param name="index">
                The index.
            </param>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.Remove(`0)">
            <summary>
                The remove.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.RemoveAt(System.Int32)">
            <summary>
                The remove at.
            </summary>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.CleanUp">
            <summary>The clean up.</summary>
        </member>
        <member name="M:Tauron.Application.WeakCollection`1.OnCleaned">
            <summary>The on cleaned.</summary>
        </member>
        <member name="E:Tauron.Application.WeakCollection`1.CleanedEvent">
            <summary>The cleaned event.</summary>
        </member>
        <member name="P:Tauron.Application.WeakCollection`1.EffectiveCount">
            <summary>Gets the effective count.</summary>
            <value>The effective count.</value>
        </member>
        <member name="P:Tauron.Application.WeakCollection`1.Count">
            <summary>Gets the count.</summary>
            <value>The count.</value>
        </member>
        <member name="P:Tauron.Application.WeakCollection`1.IsReadOnly">
            <summary>Gets a value indicating whether is read only.</summary>
            <value>The is read only.</value>
        </member>
        <member name="P:Tauron.Application.WeakCollection`1.Item(System.Int32)">
            <summary>
                The this.
            </summary>
            <param name="index">
                The index.
            </param>
            <returns>
                The Value.
            </returns>
        </member>
        <member name="T:Tauron.Application.WeakReferenceCollection`1">
            <summary>
                The weak reference collection.
            </summary>
            <typeparam name="TType">
            </typeparam>
        </member>
        <member name="M:Tauron.Application.WeakReferenceCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakReferenceCollection`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.WeakReferenceCollection`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.WeakReferenceCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.WeakReferenceCollection`1.ClearItems">
            <summary>The clear items.</summary>
        </member>
        <member name="M:Tauron.Application.WeakReferenceCollection`1.InsertItem(System.Int32,`0)">
            <summary>
                The insert item.
            </summary>
            <param name="index">
                The index.
            </param>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakReferenceCollection`1.RemoveItem(System.Int32)">
            <summary>
                The remove item.
            </summary>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakReferenceCollection`1.SetItem(System.Int32,`0)">
            <summary>
                The set item.
            </summary>
            <param name="index">
                The index.
            </param>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.WeakReferenceCollection`1.CleanUpMethod">
            <summary>The clean up method.</summary>
        </member>
        <member name="T:Tauron.Application.LimitedList`1">
            <summary>
                The limited list.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="F:Tauron.Application.LimitedList`1._limit">
            <summary>The _limit.</summary>
        </member>
        <member name="M:Tauron.Application.LimitedList`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.LimitedList`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.LimitedList`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.LimitedList`1"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.LimitedList`1.InsertItem(System.Int32,`0)">
            <summary>
                The insert item.
            </summary>
            <param name="index">
                The index.
            </param>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.LimitedList`1.SetItem(System.Int32,`0)">
            <summary>
                The set item.
            </summary>
            <param name="index">
                The index.
            </param>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.LimitedList`1.CleanUp">
            <summary>The clean up.</summary>
        </member>
        <member name="P:Tauron.Application.LimitedList`1.Limit">
            <summary>Gets or sets the limit.</summary>
            <value>The limit.</value>
        </member>
        <member name="T:Tauron.Application.ObservableDictionary`2">
            <summary>
                The observable dictionary.
            </summary>
            <typeparam name="TKey">
            </typeparam>
            <typeparam name="TValue">
            </typeparam>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2._entrys">
            <summary>The _entrys.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2._helper">
            <summary>The _helper.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2._keyEquals">
            <summary>The _key equals.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2._keys">
            <summary>The _keys.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2._values">
            <summary>The _values.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2._version">
            <summary>The _version.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ObservableDictionary`2"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.Add(`0,`1)">
            <summary>
                The add.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.Clear">
            <summary>The clear.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.ContainsKey(`0)">
            <summary>
                The contains key.
            </summary>
            <param name="key">
                The key.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.Remove(`0)">
            <summary>
                The remove.
            </summary>
            <param name="key">
                The key.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.TryGetValue(`0,`1@)">
            <summary>
                The try get value.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
                The add.
            </summary>
            <param name="item">
                The item.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
                The contains.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
                The copy to.
            </summary>
            <param name="array">
                The array.
            </param>
            <param name="arrayIndex">
                The array index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
                The remove.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.AddCore(`0,`1)">
            <summary>
                The add core.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.BlockCollection">
            <summary>The block collection.</summary>
            <returns>
                The <see cref="T:System.IDisposable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.EnsureCapatcity(System.Int32)">
            <summary>
                The ensure capatcity.
            </summary>
            <param name="min">
                The min.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.FindEntry(`0,System.Int32@)">
            <summary>
                The find entry.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="index">
                The index.
            </param>
            <returns>
                The <see cref="!:ObservableDictionary"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.InvokeCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                The invoke collection changed.
            </summary>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.InvokePropertyChanged">
            <summary>The invoke property changed.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.OnCollectionAdd(System.Collections.Generic.KeyValuePair{`0,`1},System.Int32)">
            <summary>
                The on collection add.
            </summary>
            <param name="changed">
                The changed.
            </param>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.OnCollectionRemove(System.Collections.Generic.KeyValuePair{`0,`1},System.Int32)">
            <summary>
                The on collection remove.
            </summary>
            <param name="changed">
                The changed.
            </param>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.OnCollectionReplace(System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1},System.Int32)">
            <summary>
                The on collection replace.
            </summary>
            <param name="newItem">
                The new item.
            </param>
            <param name="oldItem">
                The old item.
            </param>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.OnCollectionReset">
            <summary>The on collection reset.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
                The on deserialized.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="E:Tauron.Application.ObservableDictionary`2.CollectionChanged">
            <summary>The collection changed.</summary>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.Count">
            <summary>Gets the count.</summary>
            <value>The count.</value>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.Keys">
            <summary>Gets the keys.</summary>
            <value>The keys.</value>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.Values">
            <summary>Gets the values.</summary>
            <value>The values.</value>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>Gets a value indicating whether is read only.</summary>
            <value>The is read only.</value>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.Item(`0)">
            <summary>
                The this.
            </summary>
            <param name="key">
                The key.
            </param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            </exception>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ObservableDictionary`2.BlockHelper">
            <summary>The block helper.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.BlockHelper.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.BlockHelper.Enter">
            <summary>The enter.</summary>
        </member>
        <member name="T:Tauron.Application.ObservableDictionary`2.Entry">
            <summary>The entry.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2.Entry.Key">
            <summary>The key.</summary>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2.Entry.Value">
            <summary>The value.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.Entry.Construct(`0,`1)">
            <summary>
                The construct.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
            <returns>
                The <see cref="!:KeyValuePair"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.Entry.Construct(Tauron.Application.ObservableDictionary{`0,`1}.Entry)">
            <summary>
                The construct.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <returns>
                The <see cref="!:KeyValuePair"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ObservableDictionary`2.KeyCollection">
            <summary>The key collection.</summary>
        </member>
        <member name="T:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1">
            <summary>
                The notify collection changed base.
            </summary>
            <typeparam name="TTarget">
            </typeparam>
        </member>
        <member name="F:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Dictionary">
            <summary>The dictionary.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.#ctor(Tauron.Application.ObservableDictionary{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1"/> class.
            </summary>
            <param name="dictionary">
                The dictionary.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Add(`2)">
            <summary>
                The add.
            </summary>
            <param name="item">
                The item.
            </param>
            <exception cref="T:System.NotSupportedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Clear">
            <summary>The clear.</summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Contains(`2)">
            <summary>
                The contains.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.CopyTo(`2[],System.Int32)">
            <summary>
                The copy to.
            </summary>
            <param name="array">
                The array.
            </param>
            <param name="arrayIndex">
                The array index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Remove(`2)">
            <summary>
                The remove.
            </summary>
            <param name="item">
                The item.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.OnCollectionAdd(`2,System.Int32)">
            <summary>
                The on collection add.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.OnCollectionRemove(`2,System.Int32)">
            <summary>
                The on collection remove.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.OnCollectionReplace(`2,`2,System.Int32)">
            <summary>
                The on collection replace.
            </summary>
            <param name="newItem">
                The new item.
            </param>
            <param name="oldItem">
                The old item.
            </param>
            <param name="index">
                The index.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.OnCollectionReset">
            <summary>The on collection reset.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Contains(Tauron.Application.ObservableDictionary{`0,`1}.Entry,`2)">
            <summary>
                The contains.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <param name="target">
                The target.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Select(Tauron.Application.ObservableDictionary{`0,`1}.Entry)">
            <summary>
                The select.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <returns>
                The <see cref="!:TTarget"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.InvokeCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                The invoke collection changed.
            </summary>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.InvokePropertyChanged">
            <summary>The invoke property changed.</summary>
        </member>
        <member name="E:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.CollectionChanged">
            <summary>The collection changed.</summary>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.Count">
            <summary>Gets the count.</summary>
            <value>The count.</value>
        </member>
        <member name="P:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBase`1.IsReadOnly">
            <summary>Gets a value indicating whether is read only.</summary>
            <value>The is read only.</value>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.KeyCollection.#ctor(Tauron.Application.ObservableDictionary{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.KeyCollection"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ObservableDictionary`2.KeyCollection"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.KeyCollection"/> class.
            </summary>
            <param name="collection">
                The collection.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.KeyCollection.Contains(Tauron.Application.ObservableDictionary{`0,`1}.Entry,`0)">
            <summary>
                The contains.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <param name="target">
                The target.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.KeyCollection.Select(Tauron.Application.ObservableDictionary{`0,`1}.Entry)">
            <summary>
                The select.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <returns>
                The <see cref="!:TKey"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBaseContracts`1.#ctor(Tauron.Application.ObservableDictionary{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBaseContracts`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBaseContracts`1"/> Klasse.
            </summary>
            <param name="dictionary">
                The dictionary.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBaseContracts`1.Contains(Tauron.Application.ObservableDictionary{`0,`1}.Entry,`2)">
            <summary>
                The contains.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <param name="target">
                The target.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.NotifyCollectionChangedBaseContracts`1.Select(Tauron.Application.ObservableDictionary{`0,`1}.Entry)">
            <summary>
                The select.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <returns>
                The <see cref="!:TTarget"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.ObservableDictionary`2.ValueCollection">
            <summary>The value collection.</summary>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.ValueCollection.#ctor(Tauron.Application.ObservableDictionary{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.ValueCollection"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.ObservableDictionary`2.ValueCollection"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.ObservableDictionary`2.ValueCollection"/> class.
            </summary>
            <param name="collection">
                The collection.
            </param>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.ValueCollection.Contains(Tauron.Application.ObservableDictionary{`0,`1}.Entry,`1)">
            <summary>
                The contains.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <param name="target">
                The target.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ObservableDictionary`2.ValueCollection.Select(Tauron.Application.ObservableDictionary{`0,`1}.Entry)">
            <summary>
                The select.
            </summary>
            <param name="entry">
                The entry.
            </param>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.SharedEvent`1">
            <summary>
                The shared event.
            </summary>
            <typeparam name="TPayload">
            </typeparam>
        </member>
        <member name="F:Tauron.Application.SharedEvent`1._handlerList">
            <summary>The _handler list.</summary>
        </member>
        <member name="M:Tauron.Application.SharedEvent`1.Publish(`0)">
            <summary>
                The publish.
            </summary>
            <param name="content">
                The content.
            </param>
        </member>
        <member name="M:Tauron.Application.SharedEvent`1.Subscribe(System.Action{`0})">
            <summary>
                The subscribe.
            </summary>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="M:Tauron.Application.SharedEvent`1.UnSubscribe(System.Action{`0})">
            <summary>
                The un subscribe.
            </summary>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="T:Tauron.Application.IEventAggregator">
            <summary>The EventAggregator interface.</summary>
        </member>
        <member name="M:Tauron.Application.IEventAggregator.GetEvent``2">
            <summary>The get event.</summary>
            <typeparam name="TEventType"></typeparam>
            <typeparam name="TPayload"></typeparam>
            <returns>
                The <see cref="!:TEventType"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.EventAggregatorContracts.GetEvent``2">
            <summary>The get event.</summary>
            <typeparam name="TEventType"></typeparam>
            <typeparam name="TPayload"></typeparam>
            <returns>
                The <see cref="!:TEventType"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.EventAggregator">
            <summary>The event aggregator.</summary>
        </member>
        <member name="F:Tauron.Application.EventAggregator._aggregator">
            <summary>The _aggregator.</summary>
        </member>
        <member name="F:Tauron.Application.EventAggregator._events">
            <summary>The _events.</summary>
        </member>
        <member name="M:Tauron.Application.EventAggregator.GetEvent``2">
            <summary>The get event.</summary>
            <typeparam name="TEventType"></typeparam>
            <typeparam name="TPayload"></typeparam>
            <returns>
                The <see cref="!:TEventType"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.EventAggregator.Aggregator">
            <summary>Gets the aggregator.</summary>
            <value>The aggregator.</value>
        </member>
        <member name="T:Tauron.Application.Implement.SingleInstance`1">
            <summary>
                This class checks to make sure that only one instance of
                this application is running at a time.
            </summary>
            <typeparam name="TApplication">
            </typeparam>
            <remarks>
                Note: this class should be used with some caution, because it does no
                security checking. For example, if one instance of an app that uses this class
                is running as Administrator, any other instance, even if it is not
                running as Administrator, can activate it with command line arguments.
                For most apps, this will not be much of an issue.
            </remarks>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.ChannelNameSuffix">
            <summary>Suffix to the channel name.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.Delimiter">
            <summary>String delimiter used in channel names.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.IpcProtocol">
            <summary>IPC protocol used (string).</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.RemoteServiceName">
            <summary>Remote service name.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1._app">
            <summary>The _app.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.channel">
            <summary>IPC channel for communications.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.commandLineArgs">
            <summary>List of command line arguments for the application.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.SingleInstance`1.singleInstanceMutex">
            <summary>Application mutex.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.Cleanup">
            <summary>Cleans up single-instance code, clearing shared resources, mutexes, etc.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.InitializeAsFirstInstance(System.String,`0)">
            <summary>
                Checks if the instance of the application attempting to start is the first instance.
                If not, activates the first instance.
            </summary>
            <param name="uniqueName">
                The unique Name.
            </param>
            <param name="application">
                The application.
            </param>
            <returns>
                True if this is the first instance of the application.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.ActivateFirstInstance(System.Collections.Generic.IList{System.String})">
            <summary>
                Activates the first instance of the application with arguments from a second instance.
            </summary>
            <param name="args">
                List of arguments to supply the first instance of the application.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.ActivateFirstInstanceCallback(System.Object)">
            <summary>
                Callback for activating first instance of the application.
            </summary>
            <param name="arg">
                Callback argument.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.CreateRemoteService(System.String)">
            <summary>
                Creates a remote service for communication.
            </summary>
            <param name="channelName">
                Application's IPC channel name.
            </param>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.GetCommandLineArgs(System.String)">
            <summary>
                Gets command line args - for ClickOnce deployed applications, command line args may not be passed directly, they
                have to be retrieved.
            </summary>
            <param name="uniqueApplicationName">
                The unique Application Name.
            </param>
            <returns>
                List of command line arg strings.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.SignalFirstInstance(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
                Creates a client channel and obtains a reference to the remoting service exposed by the server -
                in this case, the remoting service exposed by the first instance. Calls a function of the remoting service
                class to pass on command line arguments from the second instance to the first and cause it to activate itself.
            </summary>
            <param name="channelName">
                Application's IPC channel name.
            </param>
            <param name="args">
                Command line arguments for the second instance, passed to the first instance to take appropriate action.
            </param>
        </member>
        <member name="P:Tauron.Application.Implement.SingleInstance`1.CommandLineArgs">
            <summary>Gets list of command line arguments for the application.</summary>
            <value>The command line args.</value>
        </member>
        <member name="T:Tauron.Application.Implement.SingleInstance`1.IPCRemoteService">
            <summary>
                Remoting service class which is exposed by the server i.e the first instance and called by the second instance
                to pass on the command line arguments to the first instance and cause it to activate itself.
            </summary>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.IPCRemoteService.InitializeLifetimeService">
            <summary>
                Remoting Object's ease expires after every 5 minutes by default. We need to override the InitializeLifetimeService
                class
                to ensure that lease never expires.
            </summary>
            <returns>Always null.</returns>
        </member>
        <member name="M:Tauron.Application.Implement.SingleInstance`1.IPCRemoteService.InvokeFirstInstance(System.Collections.Generic.IList{System.String})">
            <summary>
                Activates the first instance of the application.
            </summary>
            <param name="args">
                List of arguments to pass to the first instance.
            </param>
        </member>
        <member name="T:Tauron.Application.ITauronEnviroment">
            <summary>The TauronEnviroment interface.</summary>
        </member>
        <member name="M:Tauron.Application.ITauronEnviroment.GetProfiles(System.String)">
            <summary>
                The get profiles.
            </summary>
            <param name="application">
                The application.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.ITauronEnviroment.SearchForFolder(System.Guid)">
            <summary>
                The search for folder.
            </summary>
            <param name="id">
                The id.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.ITauronEnviroment.DefaultProfilePath">
            <summary>Gets or sets the default profile path.</summary>
            <value>The default profile path.</value>
        </member>
        <member name="P:Tauron.Application.ITauronEnviroment.LocalApplicationData">
            <summary>Gets the local application data.</summary>
            <value>The local application data.</value>
        </member>
        <member name="P:Tauron.Application.ITauronEnviroment.LocalApplicationTempFolder">
            <summary>Gets the local application temp folder.</summary>
            <value>The local application temp folder.</value>
        </member>
        <member name="P:Tauron.Application.ITauronEnviroment.LocalDownloadFolder">
            <summary>Gets the local download folder.</summary>
            <value>The local download folder.</value>
        </member>
        <member name="M:Tauron.Application.TauronEnviromentContracts.GetProfiles(System.String)">
            <summary>
                The get profiles.
            </summary>
            <param name="application">
                The application.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.TauronEnviromentContracts.SearchForFolder(System.Guid)">
            <summary>
                The search for folder.
            </summary>
            <param name="id">
                The id.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.TauronEnviromentContracts.DefaultProfilePath">
            <summary>Gets or sets the default profile path.</summary>
            <value>The default profile path.</value>
        </member>
        <member name="P:Tauron.Application.TauronEnviromentContracts.LocalApplicationData">
            <summary>Gets the local application data.</summary>
            <value>The local application data.</value>
        </member>
        <member name="P:Tauron.Application.TauronEnviromentContracts.LocalApplicationTempFolder">
            <summary>Gets the local application temp folder.</summary>
            <value>The local application temp folder.</value>
        </member>
        <member name="P:Tauron.Application.TauronEnviromentContracts.LocalDownloadFolder">
            <summary>Gets the local download folder.</summary>
            <value>The local download folder.</value>
        </member>
        <member name="T:Tauron.Application.KnownFolder">
            <summary>The known folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.AddNewPrograms">
            <summary>The add new programs.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.AdminTools">
            <summary>The admin tools.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.AppUpdates">
            <summary>The app updates.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CDBurning">
            <summary>The cd burning.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ChangeRemovePrograms">
            <summary>The change remove programs.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CommonAdminTools">
            <summary>The common admin tools.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CommonOemLinks">
            <summary>The common oem links.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CommonPrograms">
            <summary>The common programs.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CommonStartMenu">
            <summary>The common start menu.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CommonStartup">
            <summary>The common startup.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.CommonTemplates">
            <summary>The common templates.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ComputerFolder">
            <summary>The computer folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ConflictFolder">
            <summary>The conflict folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ConnectionsFolder">
            <summary>The connections folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Contacts">
            <summary>The contacts.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ControlPanelFolder">
            <summary>The control panel folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Cookies">
            <summary>The cookies.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Desktop">
            <summary>The desktop.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Documents">
            <summary>The documents.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Downloads">
            <summary>The downloads.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Favorites">
            <summary>The favorites.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Fonts">
            <summary>The fonts.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.GameTasks">
            <summary>The game tasks.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Games">
            <summary>The games.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.History">
            <summary>The history.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.InternetCache">
            <summary>The internet cache.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.InternetFolder">
            <summary>The internet folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Links">
            <summary>The links.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.LocalAppData">
            <summary>The local app data.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.LocalAppDataLow">
            <summary>The local app data low.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.LocalizedResourcesDir">
            <summary>The localized resources dir.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Music">
            <summary>The music.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.NetHood">
            <summary>The net hood.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.NetworkFolder">
            <summary>The network folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.OriginalImages">
            <summary>The original images.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PhotoAlbums">
            <summary>The photo albums.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Pictures">
            <summary>The pictures.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Playlists">
            <summary>The playlists.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PrintHood">
            <summary>The print hood.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PrintersFolder">
            <summary>The printers folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Profile">
            <summary>The profile.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramData">
            <summary>The program data.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramFiles">
            <summary>The program files.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramFilesCommon">
            <summary>The program files common.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramFilesCommonX64">
            <summary>The program files common x 64.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramFilesCommonX86">
            <summary>The program files common x 86.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramFilesX64">
            <summary>The program files x 64.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ProgramFilesX86">
            <summary>The program files x 86.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Programs">
            <summary>The programs.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Public">
            <summary>The public.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicDesktop">
            <summary>The public desktop.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicDocuments">
            <summary>The public documents.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicDownloads">
            <summary>The public downloads.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicGameTasks">
            <summary>The public game tasks.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicMusic">
            <summary>The public music.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicPictures">
            <summary>The public pictures.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.PublicVideos">
            <summary>The public videos.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.QuickLaunch">
            <summary>The quick launch.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Recent">
            <summary>The recent.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.RecycleBinFolder">
            <summary>The recycle bin folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.ResourceDir">
            <summary>The resource dir.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.RoamingAppData">
            <summary>The roaming app data.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SampleMusic">
            <summary>The sample music.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SamplePictures">
            <summary>The sample pictures.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SamplePlaylists">
            <summary>The sample playlists.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SampleVideos">
            <summary>The sample videos.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SavedGames">
            <summary>The saved games.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SavedSearches">
            <summary>The saved searches.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SearchCsc">
            <summary>The search csc.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SearchHome">
            <summary>The search home.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SearchMapi">
            <summary>The search mapi.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SendTo">
            <summary>The send to.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SidebarDefaultParts">
            <summary>The sidebar default parts.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SidebarParts">
            <summary>The sidebar parts.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.StartMenu">
            <summary>The start menu.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Startup">
            <summary>The startup.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SyncManagerFolder">
            <summary>The sync manager folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SyncResultsFolder">
            <summary>The sync results folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SyncSetupFolder">
            <summary>The sync setup folder.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.System">
            <summary>The system.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.SystemX86">
            <summary>The system x 86.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Templates">
            <summary>The templates.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.TreeProperties">
            <summary>The tree properties.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.UserProfiles">
            <summary>The user profiles.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.UsersFiles">
            <summary>The users files.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Videos">
            <summary>The videos.</summary>
        </member>
        <member name="F:Tauron.Application.KnownFolder.Windows">
            <summary>The windows.</summary>
        </member>
        <member name="T:Tauron.Application.Implement.TauronEnviroment">
            <summary>The tauron enviroment.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.TauronEnviroment.AppRepository">
            <summary>The app repository.</summary>
        </member>
        <member name="F:Tauron.Application.Implement.TauronEnviroment._defaultPath">
            <summary>The _default path.</summary>
        </member>
        <member name="M:Tauron.Application.Implement.TauronEnviroment.GetProfiles(System.String)">
            <summary>
                The get profiles.
            </summary>
            <param name="application">
                The application.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Implement.TauronEnviroment.SearchForFolder(System.Guid)">
            <summary>
                The search for folder.
            </summary>
            <param name="id">
                The id.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Implement.TauronEnviroment.DefaultProfilePath">
            <summary>Gets or sets the default profile path.</summary>
            <value>The default profile path.</value>
        </member>
        <member name="P:Tauron.Application.Implement.TauronEnviroment.LocalApplicationData">
            <summary>Gets the local application data.</summary>
            <value>The local application data.</value>
        </member>
        <member name="P:Tauron.Application.Implement.TauronEnviroment.LocalApplicationTempFolder">
            <summary>Gets the local application temp folder.</summary>
            <value>The local application temp folder.</value>
        </member>
        <member name="P:Tauron.Application.Implement.TauronEnviroment.LocalDownloadFolder">
            <summary>Gets the local download folder.</summary>
            <value>The local download folder.</value>
        </member>
        <member name="T:Tauron.Application.TauronProfile">
            <summary>The tauron profile.</summary>
        </member>
        <member name="F:Tauron.Application.TauronProfile.ContentSplitter">
            <summary>The content splitter.</summary>
        </member>
        <member name="F:Tauron.Application.TauronProfile._defaultPath">
            <summary>The _default path.</summary>
        </member>
        <member name="F:Tauron.Application.TauronProfile._settings">
            <summary>The _settings.</summary>
        </member>
        <member name="M:Tauron.Application.TauronProfile.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.TauronProfile"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.TauronProfile"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.TauronProfile"/> class.
            </summary>
            <param name="application">
                The application.
            </param>
            <param name="dafaultPath">
                The dafault path.
            </param>
        </member>
        <member name="M:Tauron.Application.TauronProfile.Delete">
            <summary>The delete.</summary>
        </member>
        <member name="M:Tauron.Application.TauronProfile.Load(System.String)">
            <summary>
                The load.
            </summary>
            <param name="name">
                The name.
            </param>
        </member>
        <member name="M:Tauron.Application.TauronProfile.Save">
            <summary>The save.</summary>
        </member>
        <member name="M:Tauron.Application.TauronProfile.GetValue(System.String,System.String)">
            <summary>
                The get value.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="defaultValue">
                The default value.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.TauronProfile.SetVaue(System.String,System.Object)">
            <summary>
                The set vaue.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.TauronProfile.Application">
            <summary>Gets the application.</summary>
            <value>The application.</value>
        </member>
        <member name="P:Tauron.Application.TauronProfile.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Tauron.Application.TauronProfile.Dictionary">
            <summary>Gets the dictionary.</summary>
            <value>The dictionary.</value>
        </member>
        <member name="P:Tauron.Application.TauronProfile.FilePath">
            <summary>Gets the file path.</summary>
            <value>The file path.</value>
        </member>
        <member name="P:Tauron.Application.TauronProfile.Item(System.String)">
            <summary>
                The this.
            </summary>
            <param name="key">
                The key.
            </param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.BuildEngine">
            <summary>The build engine.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.BuildEngine._factory">
            <summary>The _factory.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.BuildEngine.container">
            <summary>The _container.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.BuildEngine.#ctor(Tauron.Application.Ioc.IContainer,Tauron.Application.Ioc.Components.ExportProviderRegistry,Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.BuildEngine"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.BuildEngine"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.BuildEngine"/> class.
            </summary>
            <param name="container">
                The container.
            </param>
            <param name="providerRegistry">
                The provider registry.
            </param>
            <param name="componentRegistry">
                The component registry.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.BuildEngine.BuildUp(Tauron.Application.Ioc.BuildUp.Exports.IExport,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="export">
                The export.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="tracer"></param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.BuildEngine.BuildUp(System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="toBuild"></param>
            <param name="export">
                The export.
            </param>
            <param name="errorTracer"></param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.BuildEngine.BuildUp(System.Type,System.Object[],Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="constructorArguments">
                The constructor arguments.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.BuildEngine.ExportsChanged(System.Object,Tauron.Application.Ioc.ExportChangedEventArgs)">
            <summary>
                The exports changed.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.BuildEngine.Pipeline">
            <summary>Gets the pipeline.</summary>
            <value>The pipeline.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.BuildEngine.RebuildManager">
            <summary>Gets the rebuild manager.</summary>
            <value>The rebuild manager.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.BuildMode">
            <summary>The build mode.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.BuildMode.Resolve">
            <summary>The resolve.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.BuildMode.BuildUpObject">
            <summary>The build up object.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport">
            <summary>The default export.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.IExport">
            <summary>The Export interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.IExport.GetNamedExportMetadata(System.String)">
            <summary>
                The get export metadata.
            </summary>
            <param name="contractName">
                The contract name.
            </param>
            <returns>
                The <see cref="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.IExport.SelectContractName(System.String)">
            <summary>
                The select contract name.
            </summary>
            <param name="contractName">
                The contract name.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.ExportMetadata">
            <summary>Gets the export metadata.</summary>
            <value>The export metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.Exports">
            <summary>Gets the exports.</summary>
            <value>The exports.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.ExternalInfo">
            <summary>Gets the external info.</summary>
            <value>The external info.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.Globalmetadata">
            <summary>Gets or sets the globalmetadata.</summary>
            <value>The globalmetadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.ImplementType">
            <summary>Gets the implement type.</summary>
            <value>The implement type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.ImportMetadata">
            <summary>Gets the import metadata.</summary>
            <value>The import metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExport.ShareLifetime">
            <summary>Gets a value indicating whether share lifetime.</summary>
            <value>The share lifetime.</value>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.exportetType">
            <summary>The _exportet type.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.exports">
            <summary>The _exports.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.#ctor(System.Type,Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport"/> class.
            </summary>
            <param name="exportetType">
                The exportet type.
            </param>
            <param name="externalInfo">
                The external info.
            </param>
            <param name="asAnonym">
                The as anonym.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.#ctor(System.Reflection.MethodInfo,Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport"/> class.
            </summary>
            <param name="info">
                The exportet type.
            </param>
            <param name="externalInfo">
                The external info.
            </param>
            <param name="asAnonym">
                The as anonym.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.Equals(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The equals.
            </summary>
            <param name="other">
                The other.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.GetNamedExportMetadata(System.String)">
            <summary>
                The get export metadata.
            </summary>
            <param name="contractName">
                The contract name.
            </param>
            <returns>
                The <see cref="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.SelectContractName(System.String)">
            <summary>
                The select contract name.
            </summary>
            <param name="contractName">
                The contract name.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.IsExport(System.Reflection.ICustomAttributeProvider)">
            <summary>
                The is export.
            </summary>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.op_Equality(Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport,Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport)">
            <summary>The ==.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.op_Inequality(Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport,Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport)">
            <summary>The !=.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.Equals(System.Object)">
            <summary>
                The equals.
            </summary>
            <param name="obj">
                The obj.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.GetHashCode">
            <summary>The get hash code.</summary>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ToString">
            <summary>The to string.</summary>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.Initialize(System.Boolean)">
            <summary>
                The initialize.
            </summary>
            <param name="anonym">
                The anonym.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ExportMetadata">
            <summary>Gets the export metadata.</summary>
            <value>The export metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.Exports">
            <summary>Gets the exports.</summary>
            <value>The exports.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ExternalInfo">
            <summary>Gets the external info.</summary>
            <value>The external info.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.Globalmetadata">
            <summary>Gets or sets the globalmetadata.</summary>
            <value>The globalmetadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ImplementType">
            <summary>Gets the implement type.</summary>
            <value>The implement type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ImportMetadata">
            <summary>Gets the import metadata.</summary>
            <value>The import metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExport.ShareLifetime">
            <summary>Gets a value indicating whether share lifetime.</summary>
            <value>The share lifetime.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory">
            <summary>The default export factory.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.IExportFactory">
            <summary>The ExportFactory interface.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.IInitializeable">
            <summary>The Initializeable interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.IInitializeable.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.IExportFactory.TechnologyName">
            <summary>Gets the technology name.</summary>
            <value>The technology name.</value>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory._chain">
            <summary>The _chain.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory.Create(System.Type)">
            <summary>
                The create.
            </summary>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.IExport"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory.CreateAnonymos(System.Type,System.Object[])">
            <summary>
                The create anonymos.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="args">
                The args.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.IExport"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory.CreateAnonymosWithTarget(System.Type,System.Object)">
            <summary>
                The create anonymos with target.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="target">
                The target.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.IExport"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory.CreateMethodExport(System.Reflection.MethodInfo)">
            <summary>
                The create method export.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.IExport"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.DefaultExportFactory.TechnologyName">
            <summary>Gets the technology name.</summary>
            <value>The technology name.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.EventImportSelector">
            <summary>The event import selector.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelector">
            <summary>The ImportSelector interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelector.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select.
            </summary>
            <param name="exportType">
                The export.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.EventImportSelector.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select.
            </summary>
            <param name="exportType">
                The export.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.FieldImportSelector">
            <summary>The field import selector.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.FieldImportSelector.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select.
            </summary>
            <param name="exportType">
                The export.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorContracts.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select import.
            </summary>
            <param name="exportType">
                The export type.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelectorChain">
            <summary>The ImportSelectorChain interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelectorChain.Register(Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelector)">
            <summary>
                The register.
            </summary>
            <param name="selector">
                The selector.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorChainContarcts.Register(Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelector)">
            <summary>
                The register.
            </summary>
            <param name="selector">
                The selector.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorChainContarcts.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select import.
            </summary>
            <param name="exportType">
                The export type.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorChain">
            <summary>The import selector chain.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorChain._selectors">
            <summary>The _selectors.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorChain.Register(Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.IImportSelector)">
            <summary>
                The register.
            </summary>
            <param name="selector">
                The selector.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.ImportSelectorChain.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select.
            </summary>
            <param name="exportType">
                The export.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataBase">
            <summary>The metadata base.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataBase.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataBase"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataBase"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataBase"/> class.
            </summary>
            <param name="metadata">
                The metadata.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataBase.Metadata">
            <summary>Gets or sets the metadata.</summary>
            <value>The metadata.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataInterceptor">
            <summary>The metadata interceptor.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
                The intercept.
            </summary>
            <param name="invocation">
                The invocation.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataFactory">
            <summary>The metadata factory.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory">
            <summary>The MetadataFactory interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory.CreateMetadata(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                The create metadata.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataFactory._generator">
            <summary>The _generator.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MetadataFactory.CreateMetadata(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                The create metadata.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MethodImportSelector">
            <summary>The method import selector.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.MethodImportSelector.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select.
            </summary>
            <param name="exportType">
                The export.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.PropertyImportSelector">
            <summary>The property import selector.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.DefaultExports.PropertyImportSelector.SelectImport(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The select.
            </summary>
            <param name="exportType">
                The export.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata">
            <summary>The export metadata.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.#ctor(System.Type,System.String,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/> Klasse.
            </summary>
            <param name="interfaceType">
                The interface type.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="lifetime">
                The lifetime.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="export">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.Equals(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>
                The equals.
            </summary>
            <param name="other">
                The other.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.op_Equality(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>The ==.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.op_Inequality(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>The !=.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.Equals(System.Object)">
            <summary>
                The equals.
            </summary>
            <param name="obj">
                The obj.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.GetHashCode">
            <summary>The get hash code.</summary>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.ToString">
            <summary>The to string.</summary>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.ContractName">
            <summary>Gets the contract name.</summary>
            <value>The contract name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.Export">
            <summary>Gets or sets the export.</summary>
            <value>The export.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.InterfaceType">
            <summary>Gets the interface type.</summary>
            <value>The interface type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.Lifetime">
            <summary>Gets the lifetime.</summary>
            <value>The lifetime.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata.Metadata">
            <summary>Gets the metadata.</summary>
            <value>The metadata.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo">
            <summary>The external export info.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo._createInstance">
            <summary>The _create instance.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Func{Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext,Castle.DynamicProxy.ProxyGenerator,System.Object},System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo"/> class.
            </summary>
            <param name="external">
                The external.
            </param>
            <param name="handlesLiftime">
                The handles liftime.
            </param>
            <param name="canUseBuildup">
                The can use buildup.
            </param>
            <param name="handlesDispose">
                The handles dispose.
            </param>
            <param name="createInstance">
                The create instance.
            </param>
            <param name="extenalComponentName">
                The extenal component name.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.Create(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext,Castle.DynamicProxy.ProxyGenerator)">
            <summary>
                The create.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="service">
                The service.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.CanUseBuildup">
            <summary>Gets a value indicating whether can use buildup.</summary>
            <value>The can use buildup.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.ExtenalComponentName">
            <summary>Gets the extenal component name.</summary>
            <value>The extenal component name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.External">
            <summary>Gets a value indicating whether external.</summary>
            <value>The external.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.HandlesDispose">
            <summary>Gets a value indicating whether handles dispose.</summary>
            <value>The handles dispose.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExternalExportInfo.HandlesLiftime">
            <summary>Gets a value indicating whether handles liftime.</summary>
            <value>The handles liftime.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.Equals(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The equals.
            </summary>
            <param name="other">
                The other.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.GetNamedExportMetadata(System.String)">
            <summary>
                The get named export metadata.
            </summary>
            <param name="contractName">
                The contract name.
            </param>
            <returns>
                The <see cref="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.ExportMetadata"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.SelectContractName(System.String)">
            <summary>
                The select contract name.
            </summary>
            <param name="contractName">
                The contract name.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.ExportMetadata">
            <summary>Gets the export metadata.</summary>
            <value>The export metadata.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.Exports">
            <summary>Gets the exports.</summary>
            <value>The exports.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.ExternalInfo">
            <summary>Gets the external info.</summary>
            <value>The external info.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.Globalmetadata">
            <summary>Gets the globalmetadata.</summary>
            <value>The globalmetadata.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.ImplementType">
            <summary>Gets the implement type.</summary>
            <value>The implement type.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.ImportMetadata">
            <summary>Gets the import metadata.</summary>
            <value>The import metadata.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportContracts.ShareLifetime">
            <summary>Gets a value indicating whether share lifetime.</summary>
            <value>The share lifetime.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ExportFactoryContracts.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ExportFactoryContracts.TechnologyName">
            <summary>Gets the technology name.</summary>
            <value>The technology name.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.MetadataFactoryContracts.CreateMetadata(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                The create metadata.
            </summary>
            <param name="interfaceType">
                The interface type.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata">
            <summary>The import metadata.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.#ctor(System.Type,System.String,Tauron.Application.Ioc.BuildUp.Exports.IExport,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata"/> class.
            </summary>
            <param name="interfaceType">
                The interface type.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="export">
                The export.
            </param>
            <param name="memberName">
                The member name.
            </param>
            <param name="optional">
                The optional.
            </param>
            <param name="metadata">
                The metadata.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.Equals(Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata)">
            <summary>
                The equals.
            </summary>
            <param name="other">
                The other.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.op_Equality(Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata,Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata)">
            <summary>The ==.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.op_Inequality(Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata,Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata)">
            <summary>The !=.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.Equals(System.Object)">
            <summary>
                The equals.
            </summary>
            <param name="obj">
                The obj.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.GetHashCode">
            <summary>The get hash code.</summary>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.ContractName">
            <summary>Gets the contract name.</summary>
            <value>The contract name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.Export">
            <summary>Gets the export.</summary>
            <value>The export.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.InterfaceType">
            <summary>Gets the interface type.</summary>
            <value>The interface type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.MemberName">
            <summary>Gets the member name.</summary>
            <value>The member name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.Metadata">
            <summary>Gets the metadata.</summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata.Optional">
            <summary>Gets a value indicating whether optional.</summary>
            <value>The optional.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Helper">
            <summary>The helper.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Helper.MapParameters(System.Reflection.MethodBase)">
            <summary>
                The map parameters.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Helper.WriteDefaultCreation(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The write default creation.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="!:Func"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Pipeline">
            <summary>The pipeline.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Pipeline.registry">
            <summary>The registry.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Pipeline.#ctor(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Pipeline"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Pipeline"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Pipeline"/> class.
            </summary>
            <param name="registry">
                The registry.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Pipeline.Build(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Pipeline.Invoke(System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Strategy.IStrategy},System.Action{Tauron.Application.Ioc.BuildUp.Strategy.IStrategy},Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The invoke.
            </summary>
            <param name="strategies">
                The strategies.
            </param>
            <param name="invoker">
                The invoker.
            </param>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ConstructorPolicy">
            <summary>The constructor policy.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ConstructorPolicy.Constructor">
            <summary>Gets or sets the constructor.</summary>
            <value>The constructor.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectMemberPolicy">
            <summary>The inject member policy.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectMemberPolicy.Injector">
            <summary>Gets or sets the injector.</summary>
            <value>The injector.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy">
            <summary>The interception policy.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy"/> class.
            </summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy.InterceptAttribute">
            <summary>Gets or sets the intercept attribute.</summary>
            <value>The intercept attribute.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionPolicy.MemberInterceptor">
            <summary>Gets the member interceptor.</summary>
            <value>The member interceptor.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LifetimeTimePolicy">
            <summary>The lifetime time policy.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LifetimeTimePolicy.LifetimeContext">
            <summary>Gets or sets the lifetime context.</summary>
            <value>The lifetime context.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LifetimeTimePolicy.LiftimeType">
            <summary>Gets or sets the liftime type.</summary>
            <value>The liftime type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LifetimeTimePolicy.ShareLiftime">
            <summary>Gets or sets a value indicating whether share liftime.</summary>
            <value>The share liftime.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions">
            <summary>The build context extensions.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions.CanCache(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The can cache.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions.CanHandleLiftime(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The can handle liftime.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions.CanUseBuildUp(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The can use build up.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions.IsBuildExport(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The is build export.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions.IsResolving(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The is resolving.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildContextExtensions.UseInternalInstantiation(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The use internal instantiation.
            </summary>
            <param name="context">
                The context.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache">
            <summary>The cache.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.ICache">
            <summary>The Cache interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.ICache.Add(Tauron.Application.Ioc.LifeTime.ILifetimeContext,Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,System.Boolean)">
            <summary>
                The add.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="shareLifetime">
                The share lifetime.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.ICache.GetContext(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>
                The get.
            </summary>
            <param name="metadata">
                The metadata.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.LifeTime.ILifetimeContext"/>.
            </returns>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache._global">
            <summary>The _global.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache._local">
            <summary>The _local.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache.Add(Tauron.Application.Ioc.LifeTime.ILifetimeContext,Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,System.Boolean)">
            <summary>
                The add.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="shareLifetime">
                The share lifetime.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache.GetContext(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>
                The get.
            </summary>
            <param name="metadata">
                The metadata.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.LifeTime.ILifetimeContext"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.BuildCache.OnCleanUp">
            <summary>The on clean up.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager">
            <summary>The event manager.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IEventManager">
            <summary>The EventManager interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IEventManager.AddEventHandler(System.String,System.Delegate,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add handler.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IEventManager.AddEventHandler(System.String,System.Reflection.MethodInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add handler.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="handler">
                The handler.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IEventManager.AddPublisher(System.String,System.Reflection.EventInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add publisher.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="eventInfo">
                The event info.
            </param>
            <param name="publisher">
                The publisher.
            </param>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager._entrys">
            <summary>The _entrys.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.AddEventHandler(System.String,System.Delegate,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add handler.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.AddEventHandler(System.String,System.Reflection.MethodInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add handler.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="handler">
                The handler.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.AddPublisher(System.String,System.Reflection.EventInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add publisher.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="eventInfo">
                The event info.
            </param>
            <param name="publisher">
                The publisher.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventAction(System.String,System.Action{Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry},Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The event action.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="entryAction">
                The entry action.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry">
            <summary>The event entry.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.Handlermethod">
            <summary>The handlermethod.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry._handler">
            <summary>The _handler.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry._publisher">
            <summary>The _publisher.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry"/> class.
            </summary>
            <param name="topic">
                The topic.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.AddPublisher(System.Reflection.EventInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add publisher.
            </summary>
            <param name="info">
                The info.
            </param>
            <param name="publisher">
                The publisher.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.Addhandler(System.Delegate,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The addhandler.
            </summary>
            <param name="dDelegate">
                The d delegate.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.Addhandler(System.Reflection.MethodInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The addhandler.
            </summary>
            <param name="dDelegate">
                The d delegate.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.GeneralHandler(System.Object,System.EventArgs)">
            <summary>
                The general handler.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="args">
                The args.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.Topic">
            <summary>Gets the topic.</summary>
            <value>The topic.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry">
            <summary>The handler entry.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry._delegate">
            <summary>The _delegate.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry._type">
            <summary>The _type.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.#ctor(System.Delegate)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry"/> class.
            </summary>
            <param name="dDelegate">
                The d delegate.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.#ctor(System.Reflection.MethodBase,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry"/> class.
            </summary>
            <param name="methodInfo">
                The method info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.Invoke(System.Object,System.Object)">
            <summary>
                The invoke.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="args">
                The args.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.InvokeType">
            <summary>The invoke type.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.InvokeType.Zero">
            <summary>The zero.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.InvokeType.One">
            <summary>The one.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManager.EventEntry.HandlerEntry.InvokeType.Two">
            <summary>The two.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventMemberInjector">
            <summary>The event member injector.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MemberInjector">
            <summary>The member injector.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MemberInjector.Inject(System.Object,Tauron.Application.Ioc.IContainer,Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata,Tauron.Application.Ioc.BuildUp.IImportInterceptor,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="container">
                The container.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="interceptor"></param>
            <param name="errorTracer"></param>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventMemberInjector._manager">
            <summary>The _manager.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventMemberInjector._member">
            <summary>The _member.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventMemberInjector._metadata">
            <summary>The _metadata.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventMemberInjector.#ctor(Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata,Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IEventManager,System.Reflection.MemberInfo)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventMemberInjector"/> Klasse.
            </summary>
            <param name="metadata">
                The metadata.
            </param>
            <param name="manager">
                The manager.
            </param>
            <param name="member">
                The member.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector">
            <summary>The field injector.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1">
            <summary>
                The injectorbase.
            </summary>
            <typeparam name="TMember">
            </typeparam>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1.#ctor(Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory,`0)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1"/> class.
            </summary>
            <param name="metadataFactory">
                The metadata factory.
            </param>
            <param name="member">
                The member.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1.Inject(System.Object,Tauron.Application.Ioc.IContainer,Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata,Tauron.Application.Ioc.BuildUp.IImportInterceptor,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="container">
                The container.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="interceptor"></param>
            <param name="errorTracer"></param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1.Inject(System.Object,System.Object)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1.Member">
            <summary>The member.</summary>
            <value>The member.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.Injectorbase`1.MemberType">
            <summary>The get member type.</summary>
            <returns>
                The <see cref="T:System.Type"/>.
            </returns>
            <value>The member type.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector.#ctor(Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory,System.Reflection.FieldInfo)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector"/> class.
            </summary>
            <param name="metadataFactory">
                The metadata factory.
            </param>
            <param name="member">
                The member.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector.Inject(System.Object,System.Object)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.FieldInjector.MemberType">
            <summary>The get member type.</summary>
            <returns>
                The <see cref="T:System.Type"/>.
            </returns>
            <value>The member type.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManagerContracts.AddEventHandler(System.String,System.Delegate,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add event handler.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="handler">
                The handler.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManagerContracts.AddEventHandler(System.String,System.Reflection.MethodInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add event handler.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="handler">
                The handler.
            </param>
            <param name="target">
                The target.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.EventManagerContracts.AddPublisher(System.String,System.Reflection.EventInfo,System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The add publisher.
            </summary>
            <param name="topic">
                The topic.
            </param>
            <param name="eventInfo">
                The event info.
            </param>
            <param name="publisher">
                The publisher.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectorbaseContracts`1.#ctor(Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory,`0)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectorbaseContracts`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectorbaseContracts`1"/> Klasse.
            </summary>
            <param name="metadataFactory">
                The metadata factory.
            </param>
            <param name="member">
                The member.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectorbaseContracts`1.Inject(System.Object,System.Object)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectorbaseContracts`1.MemberType">
            <summary>Gets the member type.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.IProxyService">
            <summary>The ProxyService interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.IProxyService.Generate(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata[],Tauron.Application.Ioc.BuildUp.IImportInterceptor@)">
            <summary>Gets the generator.</summary>
            <value>The generator.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector">
            <summary>The method injector.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector._eventManager">
            <summary>The _event manager.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector._metadataFactory">
            <summary>The _metadata factory.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector._method">
            <summary>The _method.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.#ctor(System.Reflection.MethodInfo,Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory,Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.IEventManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector"/> class.
            </summary>
            <param name="method">
                The method.
            </param>
            <param name="metadataFactory">
                The metadata factory.
            </param>
            <param name="eventManager">
                The event manager.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.Inject(System.Object,Tauron.Application.Ioc.IContainer,Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata,Tauron.Application.Ioc.BuildUp.IImportInterceptor,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="container">
                The container.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="interceptor"></param>
            <param name="errorTracer"></param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper">
            <summary>The parameter helper.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper._parameters">
            <summary>The _parameters.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper.#ctor(Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory,Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ParameterMemberInfo,System.Collections.Generic.List{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper"/> class.
            </summary>
            <param name="metadataFactory">
                The metadata factory.
            </param>
            <param name="parameter">
                The parameter.
            </param>
            <param name="parameters">
                The parameters.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper.Inject(System.Object,System.Object)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.MethodInjector.ParameterHelper.MemberType">
            <summary>The get member type.</summary>
            <returns>
                The <see cref="T:System.Type"/>.
            </returns>
            <value>The member type.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector">
            <summary>The property injector.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector.#ctor(Tauron.Application.Ioc.BuildUp.Exports.IMetadataFactory,System.Reflection.PropertyInfo)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector"/> class.
            </summary>
            <param name="metadataFactory">
                The metadata factory.
            </param>
            <param name="member">
                The member.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector.Inject(System.Object,System.Object)">
            <summary>
                The inject.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.PropertyInjector.MemberType">
            <summary>The get member type.</summary>
            <returns>
                The <see cref="T:System.Type"/>.
            </returns>
            <value>The member type.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService">
            <summary>The proxy service.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService"/> class.
            </summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService.GenericGenerator">
            <summary>Gets the generator.</summary>
            <value>The generator.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService.PrivateLogger">
            <summary>The private logger.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService.PrivateLogger.CreateChildLogger(System.String)">
            <summary>
                The create child logger.
            </summary>
            <param name="loggerName">
                The logger name.
            </param>
            <returns>
                The <see cref="T:Castle.Core.Logging.ILogger"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.ProxyService.PrivateLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>
                The log.
            </summary>
            <param name="loggerLevel">
                The logger level.
            </param>
            <param name="loggerName">
                The logger name.
            </param>
            <param name="message">
                The message.
            </param>
            <param name="exception">
                The exception.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.CacheStrategy">
            <summary>The cache strategy.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.StrategyBase">
            <summary>The strategy base.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.IStrategy">
            <summary>The Strategy interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.IStrategy.OnBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.IStrategy.OnCreateInstance(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on create instance.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.IStrategy.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.IStrategy.OnPostBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on post build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyBase.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyBase.OnBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyBase.OnCreateInstance(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on create instance.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyBase.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyBase.OnPostBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on post build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.CacheStrategy._cache">
            <summary>The _cache.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.CacheStrategy.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.CacheStrategy.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.CacheStrategy.OnPostBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on post build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectionStrategy">
            <summary>The injection strategy.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectionStrategy._eventManager">
            <summary>The _event manager.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectionStrategy._factory">
            <summary>The _factory.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectionStrategy.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectionStrategy.OnBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InjectionStrategy.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InstantiationStrategy">
            <summary>The instantiation strategy.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InstantiationStrategy._service">
            <summary>The _service.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InstantiationStrategy.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InstantiationStrategy.OnCreateInstance(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on create instance.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InstantiationStrategy.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionStrategy">
            <summary>The interception strategy.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionStrategy._generator">
            <summary>The _generator.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionStrategy.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionStrategy.OnBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InterceptionStrategy.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InternalInterceptorSelector">
            <summary>The internal interceptor selector.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.InternalInterceptorSelector.SelectInterceptors(System.Type,System.Reflection.MethodInfo,Castle.DynamicProxy.IInterceptor[])">
            <summary>
                The select interceptors.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="method">
                The method.
            </param>
            <param name="interceptors">
                The interceptors.
            </param>
            <returns>
                The <see cref="!:IInterceptor[]"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LiftimeStrategy">
            <summary>The liftime strategy.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LiftimeStrategy.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.LiftimeStrategy.OnPostBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on post build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.NodifyBuildCompledStrategy">
            <summary>The nodify build compled strategy.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DafaultStrategys.NodifyBuildCompledStrategy.OnPostBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on post build.
            </summary>
            <param name="context">
                The context.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext">
            <summary>The default build context.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext">
            <summary>The BuildContext interface.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.BuildCompled">
            <summary>Gets or sets a value indicating whether build compled.</summary>
            <value>The build compled.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.Container">
            <summary>Gets the container.</summary>
            <value>The container.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.ExportType">
            <summary>Gets or sets the export type.</summary>
            <value>The export type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.Metadata">
            <summary>Gets the metadata.</summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.Mode">
            <summary>Gets the mode.</summary>
            <value>The mode.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.Policys">
            <summary>Gets the policys.</summary>
            <value>The policys.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext.Target">
            <summary>Gets or sets the target.</summary>
            <value>The target.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.#ctor(Tauron.Application.Ioc.BuildUp.Exports.IExport,Tauron.Application.Ioc.BuildUp.BuildMode,Tauron.Application.Ioc.IContainer,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext"/> Klasse.
            </summary>
            <param name="targetExport">
                The target export.
            </param>
            <param name="mode">
                The mode.
            </param>
            <param name="container">
                The container.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="errorTracer"></param>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.#ctor(Tauron.Application.Ioc.Components.BuildObject,Tauron.Application.Ioc.IContainer,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext"/> Klasse.
            </summary>
            <param name="buildObject">
                The build object.
            </param>
            <param name="container">
                The container.
            </param>
            <param name="errorTracer"></param>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.BuildCompled">
            <summary>Gets or sets a value indicating whether build compled.</summary>
            <value>The build compled.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.Container">
            <summary>Gets the container.</summary>
            <value>The container.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.ExportType">
            <summary>Gets or sets the export type.</summary>
            <value>The export type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.Metadata">
            <summary>Gets the metadata.</summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.Mode">
            <summary>Gets the mode.</summary>
            <value>The mode.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.Policys">
            <summary>Gets the policys.</summary>
            <value>The policys.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.DefaultBuildContext.Target">
            <summary>Gets or sets the target.</summary>
            <value>The target.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.BuildCompled">
            <summary>Gets or sets a value indicating whether build compled.</summary>
            <value>The build compled.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.Container">
            <summary>Gets the container.</summary>
            <value>The container.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.ExportType">
            <summary>Gets or sets the export type.</summary>
            <value>The export type.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.Metadata">
            <summary>Gets the metadata.</summary>
            <value>The metadata.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.Mode">
            <summary>Gets the mode.</summary>
            <value>The mode.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.Policys">
            <summary>Gets the policys.</summary>
            <value>The policys.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.Ioc.BuildUp.Strategy.BuildContextContracts.Target">
            <summary>Gets or sets the target.</summary>
            <value>The target.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.CacheContracts.Add(Tauron.Application.Ioc.LifeTime.ILifetimeContext,Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,System.Boolean)">
            <summary>
                The add.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="metadata">
                The metadata.
            </param>
            <param name="shareLifetime">
                The share lifetime.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.CacheContracts.GetContext(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>
                The get context.
            </summary>
            <param name="metadata">
                The metadata.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.LifeTime.ILifetimeContext"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyContracts.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyContracts.OnBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on build.
            </summary>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyContracts.OnCreateInstance(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on create instance.
            </summary>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyContracts.OnPerpare(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on perpare.
            </summary>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.StrategyContracts.OnPostBuild(Tauron.Application.Ioc.BuildUp.Strategy.IBuildContext)">
            <summary>
                The on post build.
            </summary>
            <param name="context">
                The context.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="T:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList">
            <summary>The policy list.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList._list">
            <summary>The _list.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList.Add``1(``0)">
            <summary>
                The add.
            </summary>
            <param name="policy">
                The policy.
            </param>
            <typeparam name="TPolicy">
            </typeparam>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList.Get``1">
            <summary>The get.</summary>
            <typeparam name="TPolicy"></typeparam>
            <returns>
                The <see cref="!:TPolicy"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList.GetAll``1">
            <summary>The get all.</summary>
            <typeparam name="TPolicy"></typeparam>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList.Remove``1">
            <summary>The remove.</summary>
            <typeparam name="TPolicy"></typeparam>
        </member>
        <member name="M:Tauron.Application.Ioc.BuildUp.Strategy.PolicyList.Remove``1(``0)">
            <summary>
                The remove.
            </summary>
            <param name="policy">
                The policy.
            </param>
            <typeparam name="TPolicy">
            </typeparam>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.ComponentRegistry">
            <summary>The component registry.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ComponentRegistry._dictionary">
            <summary>The _dictionary.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.Get``1">
            <summary>The get.</summary>
            <typeparam name="TInterface"></typeparam>
            <returns>
                The <see cref="!:TInterface"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.GetAll``1">
            <summary>The get all.</summary>
            <typeparam name="TInterface"></typeparam>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.Register``2">
            <summary>The register.</summary>
            <typeparam name="TInterface"></typeparam>
            <typeparam name="TImplement"></typeparam>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.Register``2(``1)">
            <summary>
                The register.
            </summary>
            <param name="instance">
                The instance.
            </param>
            <typeparam name="T">
            </typeparam>
            <typeparam name="T1">
            </typeparam>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad">
            <summary>The lazy load.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad._implement">
            <summary>The _implement.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad._registry">
            <summary>The _registry.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad._isInitialized">
            <summary>The _is initialized.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad._object">
            <summary>The _object.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad.#ctor(System.Type,Tauron.Application.Ioc.Components.ComponentRegistry,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad"/> class.
            </summary>
            <param name="implement">
                The implement.
            </param>
            <param name="registry">
                The registry.
            </param>
            <param name="instance">
                The instance.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.Components.ComponentRegistry.LazyLoad.Object">
            <summary>Gets the object.</summary>
            <value>The object.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.DefaultExtension">
            <summary>The default extension.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.IContainerExtension">
            <summary>The ContainerExtension interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainerExtension.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.DefaultExtension.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.ExportProviderRegistry">
            <summary>The export provider registry.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ExportProviderRegistry._providers">
            <summary>The _providers.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportProviderRegistry.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.Components.ExportProviderRegistry"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.Components.ExportProviderRegistry"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.Components.ExportProviderRegistry"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportProviderRegistry.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportProviderRegistry.Add(Tauron.Application.Ioc.ExportProvider)">
            <summary>
                The add.
            </summary>
            <param name="provider">
                The provider.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportProviderRegistry.OnExportsChanged(System.Object,Tauron.Application.Ioc.ExportChangedEventArgs)">
            <summary>
                The on exports changed.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="E:Tauron.Application.Ioc.Components.ExportProviderRegistry.ExportsChanged">
            <summary>The exports changed.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.ExportRegistry">
            <summary>The export registry.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.ExportRegistry._registrations">
            <summary>The _registrations.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportRegistry.FindAll(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find all.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="errorTracer"></param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportRegistry.FindOptional(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find optional.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="errorTracer"></param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportRegistry.FindSingle(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find single.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="contractName">
                The contract name.
            </param>
            <param name="errorTracer"></param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportRegistry.Register(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The register.
            </summary>
            <param name="export">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.ExportRegistry.Remove(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The remove.
            </summary>
            <param name="export">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.InitializeableContracts.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.BuildObject">
            <summary>The build object.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.BuildObject._instance">
            <summary>The _instance.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.BuildObject.#ctor(System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Exports.ImportMetadata},Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.Components.BuildObject"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.Components.BuildObject"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.Components.BuildObject"/> class.
            </summary>
            <param name="imports">
                The imports.
            </param>
            <param name="targetExport">
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.BuildObject.GetImports">
            <summary>The get imports.</summary>
            <returns>
                The <see cref="!:ImportMetadata[]"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.Components.BuildObject.Export">
            <summary>Gets or sets the export.</summary>
            <value>The export.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.Components.BuildObject.Instance">
            <summary>Gets or sets the instance.</summary>
            <value>The instance.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.Components.BuildObject.Metadata">
            <summary>Gets or sets the metadata.</summary>
        </member>
        <member name="P:Tauron.Application.Ioc.Components.BuildObject.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.Components.RebuildManager">
            <summary>The rebuild manager.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.Components.RebuildManager._objects">
            <summary>The _objects.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.RebuildManager.AddBuild(Tauron.Application.Ioc.Components.BuildObject)">
            <summary>
                The add build.
            </summary>
            <param name="instance">
                The instance.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.Components.RebuildManager.GetAffectedParts(System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata},System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata})">
            <summary>
                The get affected parts.
            </summary>
            <param name="added">
                The added.
            </param>
            <param name="removed">
                The removed.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="T:Tauron.Application.Ioc.AopConstants">
            <summary>The constants.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.ContextMetadataName">
            <summary>The context metadata name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.DefaultBindingFlags">
            <summary>The default binding flags.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.DefaultExportFactoryName">
            <summary>The default export factory name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.EventAdder">
            <summary>The event adder.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.EventMetodMetadataName">
            <summary>The event metod metadata name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.EventRemover">
            <summary>The event remover.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.EventTopicMetadataName">
            <summary>The event topic metadata name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.InterceptMetadataName">
            <summary>The intercept metadata name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.InternalUniversalInterceptorName">
            <summary>The internal universal interceptor name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.LiftimeMetadataName">
            <summary>The liftime metadata name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.ParameterMetadataName">
            <summary>The parameter metadata name.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.PropertyGetter">
            <summary>The property getter.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.AopConstants.PropertySetter">
            <summary>The property setter.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.DefaultContainer">
            <summary>The default container.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.IContainer">
            <summary>The Container interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.BuildUp(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="data">
                The data.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.BuildUp(System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="toBuild">
                The object.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.BuildUp(System.Type,Tauron.Application.Ioc.ErrorTracer,System.Object[])">
            <summary>
                The build up.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="constructorArguments">
                The constructor arguments.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.FindExport(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer,System.Boolean)">
            <summary>
                The find export.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="name">
                The name.
            </param>
            <param name="isOptional">
                The optional.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.FindExport(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find export.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="name">
                The name.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.FindExports(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find exports.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="name">
                The name.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.Register(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The register.
            </summary>
            <param name="exportType">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.Register(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The register.
            </summary>
            <param name="exportResolver">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.IContainer.Register(Tauron.Application.Ioc.IContainerExtension)">
            <summary>
                The register.
            </summary>
            <param name="extension">
                The extension.
            </param>
        </member>
        <member name="F:Tauron.Application.Ioc.DefaultContainer._buildEngine">
            <summary>The _build engine.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.DefaultContainer._componetnts">
            <summary>The _componetnts.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.DefaultContainer._exportproviders">
            <summary>The _exportproviders.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.DefaultContainer._exports">
            <summary>The _exports.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.DefaultContainer._extensions">
            <summary>The _extensions.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.#ctor">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.DefaultContainer"/> Klasse.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.BuildUp(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="data">
                The data.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.BuildUp(System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="toBuild">
                The object.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.BuildUp(System.Type,Tauron.Application.Ioc.ErrorTracer,System.Object[])">
            <summary>
                The build up.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="constructorArguments">
                The constructor arguments.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.FindExport(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer,System.Boolean)">
            <summary>
                The find export.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="name">
                The name.
            </param>
            <param name="isOptional">
                The optional.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.FindExport(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find export.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="name">
                The name.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.FindExports(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find exports.
            </summary>
            <param name="interfaceType">
                The interface.
            </param>
            <param name="name">
                The name.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.Register(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The register.
            </summary>
            <param name="exportType">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.Register(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The register.
            </summary>
            <param name="exportResolver">
                The export.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.DefaultContainer.Register(Tauron.Application.Ioc.IContainerExtension)">
            <summary>
                The register.
            </summary>
            <param name="extension">
                The extension.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportMetadataAttribute">
            <summary>The export metadata attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportMetadataAttribute.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportMetadataAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportMetadataAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportMetadataAttribute"/> class.
            </summary>
            <param name="key">
                The key.
            </param>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportMetadataAttribute.Key">
            <summary>Gets the key.</summary>
            <value>The key.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportMetadataAttribute.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportProviderContracts.CreateExports(Tauron.Application.Ioc.BuildUp.Exports.IExportFactory)">
            <summary>
                The create exports.
            </summary>
            <param name="factory">
                The factory.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportProviderContracts.Technology">
            <summary>Gets the technology.</summary>
            <value>The technology.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportChangedEventArgs">
            <summary>The export changed event args.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata},System.Collections.Generic.IEnumerable{Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportChangedEventArgs"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportChangedEventArgs"/> Klasse.
            </summary>
            <param name="addedExport">
                The added export.
            </param>
            <param name="removedExport">
                The removed export.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportChangedEventArgs.Added">
            <summary>Gets or sets the added.</summary>
            <value>The added.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportChangedEventArgs.Removed">
            <summary>Gets or sets the removed.</summary>
            <value>The removed.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportResolver">
            <summary>The export resolver.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver._providers">
            <summary>The _providers.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportResolver"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddAssembly(System.Reflection.Assembly)">
            <summary>
                The add assembly.
            </summary>
            <param name="assembly">
                The assembly.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddPath(System.String,System.String,System.IO.SearchOption,System.Boolean)">
            <summary>
                The add path.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="searchpattern">
                The searchpattern.
            </param>
            <param name="option">
                The option.
            </param>
            <param name="discoverChanges">
                The discover changes.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddPath(System.String)">
            <summary>
                The add path.
            </summary>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddPath(System.String,System.String)">
            <summary>
                The add path.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="searchpattern">
                The searchpattern.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddPath(System.String,System.String,System.IO.SearchOption)">
            <summary>
                The add path.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="searchpattern">
                The searchpattern.
            </param>
            <param name="searchOption">
                The search option.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddProvider(Tauron.Application.Ioc.ExportProvider)">
            <summary>
                The add provider.
            </summary>
            <param name="provider">
                The provider.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AddTypes(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
                The add types.
            </summary>
            <param name="types">
                The types.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.Fill(Tauron.Application.Ioc.Components.ComponentRegistry,Tauron.Application.Ioc.Components.ExportRegistry,Tauron.Application.Ioc.Components.ExportProviderRegistry)">
            <summary>
                The fill.
            </summary>
            <param name="componentRegistry">
                The component registry.
            </param>
            <param name="exportRegistry">
                The export registry.
            </param>
            <param name="exportProviderRegistry">
                The export provider registry.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider">
            <summary>The assembly export provider.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.Asm">
            <summary>The asm.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider._provider">
            <summary>The _provider.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.#ctor(System.Reflection.Assembly)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider"/> class.
            </summary>
            <param name="asm">
                The asm.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.Equals(Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider)">
            <summary>
                The equals.
            </summary>
            <param name="other">
                The other.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.op_Equality(Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider,Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider)">
            <summary>The ==.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.op_Inequality(Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider,Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider)">
            <summary>The !=.</summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.CreateExports(Tauron.Application.Ioc.BuildUp.Exports.IExportFactory)">
            <summary>
                The create exports.
            </summary>
            <param name="factory">
                The factory.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.Equals(System.Object)">
            <summary>
                The equals.
            </summary>
            <param name="obj">
                The obj.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.GetHashCode">
            <summary>The get hash code.</summary>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportResolver.AssemblyExportProvider.Technology">
            <summary>Gets the technology.</summary>
            <value>The technology.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportResolver.PathExportProvider">
            <summary>The path export provider.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._discoverChanges">
            <summary>The _discover changes.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._files">
            <summary>The _files.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._option">
            <summary>The _option.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._path">
            <summary>The _path.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._searchpattern">
            <summary>The _searchpattern.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._factory">
            <summary>The _factory.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._providers">
            <summary>The _providers.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.PathExportProvider._watcher">
            <summary>The _watcher.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.PathExportProvider.#ctor(System.String,System.String,System.IO.SearchOption,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.PathExportProvider"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportResolver.PathExportProvider"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.PathExportProvider"/> class.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="searchpattern">
                The searchpattern.
            </param>
            <param name="option">
                The option.
            </param>
            <param name="discoverChanges">
                The discover changes.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.PathExportProvider.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.PathExportProvider"/> class.
                Finalisiert eine Instanz der <see cref="T:Tauron.Application.Ioc.ExportResolver.PathExportProvider"/> Klasse.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.PathExportProvider.Dispose">
            <summary>The dispose.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.PathExportProvider.CreateExports(Tauron.Application.Ioc.BuildUp.Exports.IExportFactory)">
            <summary>
                The create exports.
            </summary>
            <param name="factory">
                The factory.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.PathExportProvider.Created(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
                The created.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.PathExportProvider.Deleted(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
                The deleted.
            </summary>
            <param name="sender">
                The sender.
            </param>
            <param name="e">
                The e.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportResolver.PathExportProvider.BroadcastChanges">
            <summary>Gets a value indicating whether broadcast changes.</summary>
            <value>The broadcast changes.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportResolver.PathExportProvider.Technology">
            <summary>Gets the technology.</summary>
            <value>The technology.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.ExportResolver.TypeExportProvider">
            <summary>The type export provider.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.TypeExportProvider.types">
            <summary>The _types.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.ExportResolver.TypeExportProvider.exports">
            <summary>The _exports.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.TypeExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.TypeExportProvider"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ExportResolver.TypeExportProvider"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ExportResolver.TypeExportProvider"/> class.
            </summary>
            <param name="types">
                The types.
            </param>
        </member>
        <member name="M:Tauron.Application.Ioc.ExportResolver.TypeExportProvider.CreateExports(Tauron.Application.Ioc.BuildUp.Exports.IExportFactory)">
            <summary>
                The create exports.
            </summary>
            <param name="factory">
                The factory.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="P:Tauron.Application.Ioc.ExportResolver.TypeExportProvider.Technology">
            <summary>Gets the technology.</summary>
            <value>The technology.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.BuildUp(Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="data">
                The data.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.BuildUp(System.Object,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The build up.
            </summary>
            <param name="toBuild">
                The to build.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.BuildUp(System.Type,Tauron.Application.Ioc.ErrorTracer,System.Object[])">
            <summary>
                The build up.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="constructorArguments">
                The constructor arguments.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.Dispose">
            <summary>The dispose.</summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.FindExport(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer,System.Boolean)">
            <summary>
                The find export.
            </summary>
            <param name="interfaceType">
                The interface type.
            </param>
            <param name="name">
                The name.
            </param>
            <param name="isOptional">
                The is optional.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.FindExport(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find export.
            </summary>
            <param name="interfaceType">
                The interface type.
            </param>
            <param name="name">
                The name.
            </param>
            <returns>
                The <see cref="T:Tauron.Application.Ioc.BuildUp.Exports.ExportMetadata"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.FindExports(System.Type,System.String,Tauron.Application.Ioc.ErrorTracer)">
            <summary>
                The find exports.
            </summary>
            <param name="interfaceType">
                The interface type.
            </param>
            <param name="name">
                The name.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.Register(Tauron.Application.Ioc.BuildUp.Exports.IExport)">
            <summary>
                The register.
            </summary>
            <param name="exportType">
                The export type.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.Register(Tauron.Application.Ioc.ExportResolver)">
            <summary>
                The register.
            </summary>
            <param name="exportResolver">
                The export resolver.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerContracts.Register(Tauron.Application.Ioc.IContainerExtension)">
            <summary>
                The register.
            </summary>
            <param name="extension">
                The extension.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:Tauron.Application.Ioc.ContainerExtensionContracts.Initialize(Tauron.Application.Ioc.Components.ComponentRegistry)">
            <summary>
                The initialize.
            </summary>
            <param name="components">
                The components.
            </param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="T:Tauron.Application.Ioc.InjectAttribute">
            <summary>The inject attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.InjectAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InjectAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.InjectAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InjectAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.InjectAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InjectAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.InjectAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InjectAttribute"/> class.
            </summary>
            <param name="interface">
                The interface.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.InjectAttribute.ContractName">
            <summary>Gets or sets the contract name.</summary>
            <value>The contract name.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.InjectAttribute.Interface">
            <summary>Gets or sets the interface.</summary>
            <value>The interface.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.InjectAttribute.Optional">
            <summary>Gets or sets a value indicating whether optional.</summary>
            <value>The optional.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.InjectEventAttribute">
            <summary>The inject event attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.InjectEventAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InjectEventAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.InjectEventAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InjectEventAttribute"/> class.
            </summary>
            <param name="topic">
                The topic.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.InjectEventAttribute.Topic">
            <summary>Gets the topic.</summary>
            <value>The topic.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.INotifyBuildCompled">
            <summary>The NodifyBuildCompled interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.INotifyBuildCompled.BuildCompled">
            <summary>The build compled.</summary>
        </member>
        <member name="T:Tauron.Application.Ioc.InterceptAttribute">
            <summary>The intercept attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.InterceptAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InterceptAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.InterceptAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.InterceptAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.InterceptAttribute.Create">
            <summary>The create.</summary>
            <returns>
                The <see cref="T:Castle.DynamicProxy.IInterceptor"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.InterceptAttribute.Initialize(System.Object)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.ILifetimeContext">
            <summary>The LifetimeContext interface.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ILifetimeContext.GetValue">
            <summary>The get value.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ILifetimeContext.SetValue(System.Object)">
            <summary>
                The set value.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.ILifetimeContext.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute">
            <summary>The lifetime context attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute"/> class.
            </summary>
            <param name="lifeTimeType">
                The life time type.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute.LifeTimeType">
            <summary>Gets the life time type.</summary>
            <value>The life time type.</value>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.LifetimeContextAttribute.ShareLiftime">
            <summary>Gets or sets a value indicating whether share liftime.</summary>
            <value>The share liftime.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.NotSharedLifetime">
            <summary>The not shared lifetime.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.NotSharedLifetime.GetValue">
            <summary>The get value.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.NotSharedLifetime.SetValue(System.Object)">
            <summary>
                The set value.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.NotSharedLifetime.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.SharedLifetime">
            <summary>The shared lifetime.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.SharedLifetime._value">
            <summary>The _value.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.SharedLifetime.GetValue">
            <summary>The get value.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.SharedLifetime.SetValue(System.Object)">
            <summary>
                The set value.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.SharedLifetime.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.ThreadSharedLifetime">
            <summary>The thread shared lifetime.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.ThreadSharedLifetime._objects">
            <summary>The _objects.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ThreadSharedLifetime.GetValue">
            <summary>The get value.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.ThreadSharedLifetime.SetValue(System.Object)">
            <summary>
                The set value.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.ThreadSharedLifetime.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.Application.Ioc.LifeTime.WeakSharedLifetime">
            <summary>The weak shared lifetime.</summary>
        </member>
        <member name="F:Tauron.Application.Ioc.LifeTime.WeakSharedLifetime._reference">
            <summary>The _reference.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.WeakSharedLifetime.GetValue">
            <summary>The get value.</summary>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.LifeTime.WeakSharedLifetime.SetValue(System.Object)">
            <summary>
                The set value.
            </summary>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="P:Tauron.Application.Ioc.LifeTime.WeakSharedLifetime.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="M:Tauron.Application.Ioc.MemberInterceptionAttributeContracts.Create(System.Reflection.MemberInfo)">
            <summary>
                The create.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="T:Castle.DynamicProxy.IInterceptor"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.Ioc.MemberInterceptionAttributeContracts.Initialize(System.Object,Tauron.Application.Ioc.LifeTime.ObjectContext,System.String)">
            <summary>
                The initialize.
            </summary>
            <param name="target">
                The target.
            </param>
            <param name="context">
                The context.
            </param>
            <param name="contextName">
                The context name.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.NotSharedAttribute">
            <summary>The not shared attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.NotSharedAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.NotSharedAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.NotSharedAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.NotSharedAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ObjectContextPropertyAttributeContracts.Register(Tauron.Application.Ioc.LifeTime.ObjectContext,System.Reflection.MemberInfo,System.Object)">
            <summary>
                The register.
            </summary>
            <param name="context">
                The context.
            </param>
            <param name="info">
                The info.
            </param>
            <param name="target">
                The target.
            </param>
        </member>
        <member name="T:Tauron.Application.Ioc.SharedAttribute">
            <summary>The shared attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.SharedAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.SharedAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.SharedAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.SharedAttribute"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Ioc.ThreadSharedAttribute">
            <summary>The thread shared attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.ThreadSharedAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ThreadSharedAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.ThreadSharedAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.ThreadSharedAttribute"/> class.
            </summary>
        </member>
        <member name="T:Tauron.Application.Ioc.WeakSharedAttribute">
            <summary>The weak shared attribute.</summary>
        </member>
        <member name="M:Tauron.Application.Ioc.WeakSharedAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.WeakSharedAttribute"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.Ioc.WeakSharedAttribute"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.Application.Ioc.WeakSharedAttribute"/> class.
            </summary>
        </member>
        <member name="T:Tauron.ContainerExtensions">
            <summary>Stellt Erweiterung Methoden für den Ioc Container zur Verfügung.</summary>
            <remarks>
                <para>Die Konkreteren methoden zum Abrufen von Instanzen werden mit Erweiterung Methoden Implementiert.</para>
                <para>Dadurch bleibt das Container Interface Sauber.</para>
            </remarks>
        </member>
        <member name="M:Tauron.ContainerExtensions.Resolve``1(Tauron.Application.Ioc.IContainer)">
            <summary>
                Ruft einene Instanz aus dem Build System des Containers ab.
            </summary>
            <example>
                Beispilhafter Aufruf der Methode.
                <code>
            IContainer conatainer = Create();
            Service instanz = container.Resolve&lt;Service&gt;();
            </code>
            </example>
            <param name="con">
                Der Container mit dem die Instanz abgerufen werden soll.
            </param>
            <typeparam name="TType">
                Der Type der Abgerufen werden soll.
            </typeparam>
            <returns>
                Eine Instanz von <see cref="!:TType"/>.
            </returns>
            <exception cref="T:Tauron.Application.Ioc.BuildUpException">
                Wird geworfen wenn Beim erstellen des Export ein Fehel aufgetreten ist.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
            <exception cref="!:Tauron.Application.Ioc.FindExportException">
                Wird geworfen wenn ein Export nicht gefunden wurde.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
        </member>
        <member name="M:Tauron.ContainerExtensions.Resolve``1(Tauron.Application.Ioc.IContainer,System.String,System.Boolean)">
            <summary>
                The resolve.
            </summary>
            <param name="con">
                The con.
            </param>
            <param name="name">
                The name.
            </param>
            <param name="optional">
                The optional.
            </param>
            <typeparam name="TType">
            </typeparam>
            <returns>
                The <see cref="!:TType"/>.
            </returns>
        </member>
        <member name="M:Tauron.ContainerExtensions.Resolve(Tauron.Application.Ioc.IContainer,System.Type,System.String)">
            <summary>
                Ruft einene Instanz mit Vertragsnamen aus dem Build System des Containers ab.
            </summary>
            <example>
                Beispilhafter Aufruf der Methode.
                <code>
            IContainer conatainer = Create();
            Service instanz = container.Resolve(typeof(Service), "VertragsName");
            </code>
            </example>
            <param name="con">
                Der Container mit dem die Instanz abgerufen werden soll.
            </param>
            <param name="interface">
                Der Type der Abgerufen werden soll.
            </param>
            <param name="name">
                Der Vertrags Namen für den Export.
            </param>
            <returns>
                Eine Instanz des Exports.
            </returns>
            <exception cref="T:Tauron.Application.Ioc.BuildUpException">
                Wird geworfen wenn Beim erstellen des Export ein Fehel aufgetreten ist.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
            <exception cref="!:Tauron.Application.Ioc.FindExportException">
                Wird geworfen wenn ein Export nicht gefunden wurde.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
        </member>
        <member name="M:Tauron.ContainerExtensions.Resolve(Tauron.Application.Ioc.IContainer,System.Type,System.String,System.Boolean)">
            <summary>
                Ruft einene Instanz mit Vertragsnamen aus dem Build System des Containers ab
                und gibt null zurück wenn kein Export gefunden wurde.
            </summary>
            <example>
                Beispilhafter Aufruf der Methode.
                <code>
            IContainer conatainer = Create();
            Service instanz = container.Resolve(typeof(Service), "VertragsName", true);
            </code>
            </example>
            <param name="con">
                Der Container mit dem die Instanz abgerufen werden soll.
            </param>
            <param name="interface">
                Der Type der Abgerufen werden soll.
            </param>
            <param name="name">
                Der Vertrags Namen für den Export.
            </param>
            <param name="optional">
                Gibt an ob der Export Optional ist oder nicht.
            </param>
            <returns>
                Eine Instanz des Exports.
            </returns>
            <exception cref="T:Tauron.Application.Ioc.BuildUpException">
                Wird geworfen wenn Beim erstellen des Export ein Fehel aufgetreten ist.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
            <exception cref="!:Tauron.Application.Ioc.FindExportException">
                Wird geworfen wenn ein Export nicht gefunden wurde.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
        </member>
        <member name="M:Tauron.ContainerExtensions.ResolveAll(Tauron.Application.Ioc.IContainer,System.Type,System.String)">
            <summary>
                Ruft alle Instanzen aus dem Build System des Containers ab.
            </summary>
            <example>
                Beispilhafter Aufruf der Methode.
                <code>
            IContainer conatainer = Create();
            IEnumerable&lt;object&gt; instanz = container.ResolveAll(typeof(Service), "VertragsName");
            </code>
            </example>
            <param name="con">
                Der Container mit dem die Instanz abgerufen werden soll.
            </param>
            <param name="interface">
                Der Type der Abgerufen werden soll.
            </param>
            <param name="name">
                Der Vertrags Namen für den Export.
            </param>
            <returns>
                Eine Auflistung von Instanzen des Exports als <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
            <exception cref="T:Tauron.Application.Ioc.BuildUpException">
                Wird geworfen wenn Beim erstellen des Export ein Fehel aufgetreten ist.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
            <exception cref="!:Tauron.Application.Ioc.FindExportException">
                Wird geworfen wenn ein Export nicht gefunden wurde.
                Weiter informationen stehen dann in der Inner Exceptionzur verfügung.
            </exception>
        </member>
        <member name="M:Tauron.ContainerExtensions.ResolveAll``1(Tauron.Application.Ioc.IContainer,System.String)">
            <summary>
                The resolve all.
            </summary>
            <param name="con">
                The con.
            </param>
            <param name="name">
                The name.
            </param>
            <typeparam name="TType">
            </typeparam>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="T:Tauron.EditableValueMap">
            <summary>Eine Statische Klasse die Instanzen vom Type EditableValueMap erstellt.</summary>
        </member>
        <member name="M:Tauron.EditableValueMap.Create``2(``0,``1)">
            <summary>
                Erstellt eine Instanz vom Type EditableValueMap&lt;T1, T2&gt;.
            </summary>
            <example>
                Beispielhafter Aufruf der methode Create.
                <code>
            var map = EditableValueMap.Create(Type2 value1, Type2 value2);
            </code>
            </example>
            <param name="item1">
                Der Wert des Ersten Items.
            </param>
            <param name="item2">
                Der Wert des zweiten items.
            </param>
            <typeparam name="T1">
                Der Type des ersten Items.
            </typeparam>
            <typeparam name="T2">
                Der Type des zweiten Items.
            </typeparam>
            <returns>
                Eine instanz vom Type <see cref="T:Tauron.EditableValueMap`2"/>.
            </returns>
        </member>
        <member name="T:Tauron.EditableValueMap`2">
            <summary>
                Stellt eine Klasse dar die zwei Typisierte und beabeitbare Werte in einer Klasse bündelt.
            </summary>
            <remarks>
                <para>
                    Stellt eine Klasse dar die zwei Typisierte und beabeitbare Werte in einer Klasse bündelt.
                </para>
                <para>
                    Implementiert das <see cref="T:Tauron.IWeakReference"/> Interface und überprüft beide Items ob sie als
                    <see cref="T:System.WeakReference"/>
                    oder <see cref="T:Tauron.IWeakReference"/> gecastet werden können. Ist das nicht der Fall wird immer true
                    zurückgegeben.
                </para>
            </remarks>
            <typeparam name="T1">
                Der Type des ersten Items.
            </typeparam>
            <typeparam name="T2">
                Der Type des zweiten Items.
            </typeparam>
        </member>
        <member name="P:Tauron.EditableValueMap`2.Item1">
            <summary>Gibt den wert des item 1 zurück oder legt ihn fest.</summary>
            <value>Der Typesierter erste Wert.</value>
        </member>
        <member name="P:Tauron.EditableValueMap`2.Item2">
            <summary>Gibt den wert des item 1 zurück oder legt ihn fest.</summary>
            <value>Der Typesierter zeiter Wert.</value>
        </member>
        <member name="P:Tauron.EditableValueMap`2.Tauron#IWeakReference#IsAlive">
            <summary>Wenn eines der beiden Item einen Schwacher Verweis Ist gibt diese Eigenscht dessen Wert zurück.</summary>
            <value>Ob diese Instnz noch verfügbar ist.</value>
        </member>
        <member name="T:Tauron.Resources.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Tauron.Resources.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Tauron.Resources.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:Tauron.Resources.Resources.Init_Msg_Step1">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Search for Components..... ähnelt.
            </summary>
        </member>
        <member name="P:Tauron.Resources.Resources.Init_Msg_Step2">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Initialize Components.... ähnelt.
            </summary>
        </member>
        <member name="P:Tauron.Resources.Resources.Init_Msg_Step3">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Load Resources.... ähnelt.
            </summary>
        </member>
        <member name="P:Tauron.Resources.Resources.Init_Msg_Step4">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Start Application ähnelt.
            </summary>
        </member>
        <member name="T:Tauron.Application.IUIControllerFactory">
            <summary>The UIControllerFactory interface.</summary>
        </member>
        <member name="M:Tauron.Application.IUIControllerFactory.CreateController">
            <summary>The create controller.</summary>
            <returns>
                The <see cref="T:Tauron.Application.IUIController"/>.
            </returns>
        </member>
        <member name="M:Tauron.Application.IUIControllerFactory.SetSynchronizationContext">
            <summary>The set synchronization context.</summary>
        </member>
        <member name="M:Tauron.Application.UIControllerFactoryContracts.CreateController">
            <summary>The create controller.</summary>
            <returns>
                The <see cref="T:Tauron.Application.IUIController"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tauron.Application.UIControllerFactoryContracts.SetSynchronizationContext">
            <summary>The set synchronization context.</summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tauron.Application.ShutdownMode">
            <summary>The shutdown mode.</summary>
        </member>
        <member name="F:Tauron.Application.ShutdownMode.OnLastWindowClose">
            <summary>The on last window close.</summary>
        </member>
        <member name="F:Tauron.Application.ShutdownMode.OnMainWindowClose">
            <summary>The on main window close.</summary>
        </member>
        <member name="F:Tauron.Application.ShutdownMode.OnExplicitShutdown">
            <summary>The on explicit shutdown.</summary>
        </member>
        <member name="T:Tauron.Application.IUIController">
            <summary>The UIController interface.</summary>
        </member>
        <member name="M:Tauron.Application.IUIController.Run(Tauron.Application.IWindow)">
            <summary>
                The run.
            </summary>
            <param name="window">
                The window.
            </param>
        </member>
        <member name="M:Tauron.Application.IUIController.Shutdown">
            <summary>The shutdown.</summary>
        </member>
        <member name="P:Tauron.Application.IUIController.MainWindow">
            <summary>Gets or sets the main window.</summary>
            <value>The main window.</value>
        </member>
        <member name="P:Tauron.Application.IUIController.ShutdownMode">
            <summary>Gets or sets the shutdown mode.</summary>
            <value>The shutdown mode.</value>
        </member>
        <member name="M:Tauron.Application.UIControllerContract.Run(Tauron.Application.IWindow)">
            <summary>
                The run.
            </summary>
            <param name="window">
                The window.
            </param>
        </member>
        <member name="M:Tauron.Application.UIControllerContract.Shutdown">
            <summary>The shutdown.</summary>
        </member>
        <member name="P:Tauron.Application.UIControllerContract.MainWindow">
            <summary>Gets or sets the main window.</summary>
            <value>The main window.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.UIControllerContract.ShutdownMode">
            <summary>Gets or sets the shutdown mode.</summary>
            <value>The shutdown mode.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tauron.Application.SplashMessageListener">
            <summary>The splash message listener.</summary>
        </member>
        <member name="F:Tauron.Application.SplashMessageListener._message">
            <summary>The _message.</summary>
        </member>
        <member name="F:Tauron.Application.SplashMessageListener._splashContent">
            <summary>The _splash content.</summary>
        </member>
        <member name="M:Tauron.Application.SplashMessageListener.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.Application.SplashMessageListener"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.Application.SplashMessageListener"/> Klasse.
            </summary>
        </member>
        <member name="M:Tauron.Application.SplashMessageListener.ReceiveMessage(System.String)">
            <summary>
                The receive message.
            </summary>
            <param name="message">
                The message.
            </param>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.CurrentListner">
            <summary>Gets or sets the current listner.</summary>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.Height">
            <summary>
                Gets or sets the height.
            </summary>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.MainLabelForeground">
            <summary>
                Gets or sets the main label foreground.
            </summary>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.MainLabelBackground">
            <summary>
                Gets or sets the main labelbackground.
            </summary>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.Message">
            <summary>Get or set received message.</summary>
            <value>The message.</value>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.SplashContent">
            <summary>Gets or sets the splash content.</summary>
            <value>The splash content.</value>
        </member>
        <member name="P:Tauron.Application.SplashMessageListener.Widht">
            <summary>
                Gets or sets the widht.
            </summary>
        </member>
        <member name="M:Tauron.Application.SplashServiceContracts.CloseSplash">
            <summary>The close splash.</summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tauron.Application.SplashServiceContracts.ShowSplash">
            <summary>The show splash.</summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Tauron.Application.SplashServiceContracts.Listner">
            <summary>Gets the listner.</summary>
            <value>The listner.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tauron.Async">
            <summary>Ermöglich auf einfache weise eine Asyncrone Aufgabe Auszuführen.</summary>
            <remarks>
                <para>Ermöglich auf einfache weise eine Asyncrone Aufgabe Auszuführen.</para>
                <para>Intern wird auf die TPL zurüggeriffen.</para>
            </remarks>
        </member>
        <member name="M:Tauron.Async.StartNew(System.Action)">
            <summary>
                Startet einen neuen Task mit dem Standart Verhalten.
            </summary>
            <example>
                Beschpielhafte darstellen des Aufruhfes <see cref="M:Tauron.Async.StartNew(System.Action)"/>
                <code>
            Task task = new Action(DoSonmthing).StartNew();
            </code>
            </example>
            <param name="method">
                Ein Action Delegate das dem neuen
                <seealso cref="T:System.Threading.Tasks.Task"/>
                übergeben wird.
            </param>
            <returns>
                Der erstellte <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Tauron.Async.StartNewLong(System.Action)">
            <summary>
                Startet einen neuen Task mit der Long Running Einstellung.
            </summary>
            <example>
                Beschpielhafte darstellen des Aufruhfes <see cref="M:Tauron.Async.StartNewLong(System.Action)"/>
                <code>
            Task task = new Action(DoSonmthing).StartNewLong();
            </code>
            </example>
            <param name="method">
                Ein Action Delegate das dem neuen
                <seealso cref="T:System.Threading.Tasks.Task"/>
                übergeben wird.
            </param>
            <returns>
                Der erstellte <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:Tauron.CollectionExtensions">
            <summary>Stellt Erweiterung Methoden für Auflistungen zur Verfügung.</summary>
        </member>
        <member name="M:Tauron.CollectionExtensions.AddIfNotExis``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})">
            <summary>
                Fügt einen Wert hinzu wenn kein eintsprechender Schlüssel Vormanden ist und
                gibt den Inhalt anschliesen zurück.
            </summary>
            <param name="dic">
                Das Dicionary in das der Wert eingefügt werden soll.
            </param>
            <param name="key">
                Der Schlussel der geprüft werden soll.
            </param>
            <param name="creator">
                Eine Methode die den Inhalt bei bedarf erstellt.
            </param>
            <example>
                Beispielhafte darstellung des Aufrufs <see cref="M:Tauron.CollectionExtensions.AddIfNotExis``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})"/>
                <code>
            var value = dic.(key, () =&gt; Creator());
            </code>
            </example>
            <typeparam name="TKey">
                Der Type des Schlüssels.
            </typeparam>
            <typeparam name="TValue">
                Der Type des Inhalts.
            </typeparam>
            <returns>
                Der Wert, der entwerder erstellt wurde oder schon enthalten war.
            </returns>
        </member>
        <member name="M:Tauron.CollectionExtensions.TryGetAndCast``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
                Gibt den Inhalt eines Schlüssels von einem Dictionary&lt;string,object&gt; zurück und
                Castet ihn in den richtigen Typen.
            </summary>
            <remarks>
                <para>
                    Gibt den Inhalt eines Schlüssels von einem Dictionary&lt;string,object&gt; zurück und
                    Castet ihn in den richtigen Typen.
                </para>
                <para>
                    Wenn kein Schlüssel vorhanden ist oder der Type Falsch ist wird null zurück gegeben.
                </para>
            </remarks>
            <example>
                Beispielhafte Darstellung eines Aufrufes.
                <code>
            IDictionary dic = Initialize();
            Type sample = dic.TryGetAndCast&lt;Type&gt;("SampleKey");
            </code>
            </example>
            <param name="dic">
                Das
                <seealso cref="T:System.Collections.Generic.IDictionary`2"/>
                , dessen Wert entnommen werden soll.
            </param>
            <param name="key">
                Der Schlüssel nach dem Gesucht werden soll.
            </param>
            <typeparam name="TValue">
                Der Type in dem der Wert gecastet werden soll.
            </typeparam>
            <returns>
                Der gecastete wert oder null.
            </returns>
        </member>
        <member name="T:Tauron.EnumerableExtensions">
            <summary>
                Enthält Erweiterungs-Methoden für <seealso cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Tauron.EnumerableExtensions.Concat(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Fügt eine Auflistung von Strings zu einem string zusammen. Dazu wird die
                <see cref="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})"/>
                verwendet.
            </summary>
            <example>
                Beispielhafter Aufruf von Concat.
                <code>
            IEnumerable&lt;string&gt; stringList = Create();
            string concated = stringList.Concat();
            </code>
            </example>
            <param name="strings">
                Die Liste von strings die Vebunden werden soll.
            </param>
            <returns>
                Der Verkettete <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.EnumerableExtensions.Concat(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Fügt eine Auflistung vom Type object zu einem string zusammen. Dazu wird die
                <see cref="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})"/>
                verwendet.
            </summary>
            <example>
                Beispielhafter Aufruf von Concat.
                <code>
            IEnumerable&lt;object&gt; stringList = Create();
            string concated = stringList.Concat();
            </code>
            </example>
            <param name="objects">
                Die Liste vom Type object die Vebunden werden soll.
            </param>
            <returns>
                Der Verkettete <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.EnumerableExtensions.Foreach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
                Führt einen <see cref="T:System.Action`1"/>Delegate auf allen Items der Liste aus.
            </summary>
            <example>
                Beispielhafter Aufruf von Foreach
                <code>
            IEnumerable&lt;SampleType&gt; list = Create();
            list.Foreach(DoSomething);
            </code>
            </example>
            <param name="enumerator">
                Die Auflistung von Item auf denen die Aktion Ausgeführt werden soll.
            </param>
            <param name="action">
                Der Action Delegate der die Auszuführendende Aufgabe Darstellt.
            </param>
            <typeparam name="TValue">
                Der Type der Items der Auflistung.
            </typeparam>
        </member>
        <member name="M:Tauron.EnumerableExtensions.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
                Überspringt eine angegebene Angahl von Items am ende der Auflistung.
            </summary>
            <example>
                Beispielhafter Aufruf von SkipLast.
                <code>
            IEnumerable&lt;SampleType&gt; list = Create();
            list = lsit.SkipLast(1); // The last Element was Skipped.
            </code>
            </example>
            <typeparam name="T">
                Der Type der Auflistung.
            </typeparam>
            <param name="source">
                Die Quell Auflistung.
            </param>
            <param name="count">
                Die Anzahl der an ende zu Überspringenden Elemente.
            </param>
            <returns>
                Eine Auflistung von denn die letzten Items fehlen.
            </returns>
        </member>
        <member name="M:Tauron.EnumerableExtensions.FindIndex``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>Finds the index of the first item matching an expression in an enumerable.</summary>
            <param name="items">The enumerable to search.</param>
            <param name="predicate">The expression to test the items against.</param>
            <returns>The index of the first matching item, or -1 if no items match.</returns>
        </member>
        <member name="M:Tauron.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>Finds the index of the first occurence of an item in an enumerable.</summary>
            <param name="items">The enumerable to search.</param>
            <param name="item">The item to find.</param>
            <returns>The index of the first matching item, or -1 if the item was not found.</returns>
        </member>
        <member name="T:Tauron.CriticalExceptions">
            <summary>The critical exceptions.</summary>
        </member>
        <member name="M:Tauron.CriticalExceptions.IsCriticalApplicationException(System.Exception)">
            <summary>
                The is critical application exception.
            </summary>
            <param name="ex">
                The ex.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.CriticalExceptions.IsCriticalException(System.Exception)">
            <summary>
                The is critical exception.
            </summary>
            <param name="ex">
                The ex.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.CriticalExceptions.Unwrap(System.Exception)">
            <summary>
                The unwrap.
            </summary>
            <param name="ex">
                The ex.
            </param>
            <returns>
                The <see cref="T:System.Exception"/>.
            </returns>
        </member>
        <member name="T:Tauron.Interop.NativeMethods">
            <summary>The native methods.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.WmDrawclipboard">
            <summary>The wm drawclipboard.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.WmChangecbchain">
            <summary>The wm changecbchain.</summary>
        </member>
        <member name="M:Tauron.Interop.NativeMethods.SetClipboardViewer(System.IntPtr)">
            <summary>
                The set clipboard viewer.
            </summary>
            <param name="hWndNewViewer">
                The h wnd new viewer.
            </param>
            <returns>
                The <see cref="T:System.IntPtr"/>.
            </returns>
        </member>
        <member name="M:Tauron.Interop.NativeMethods.ChangeClipboardChain(System.IntPtr,System.IntPtr)">
            <summary>
                The change clipboard chain.
            </summary>
            <param name="hWndRemove">
                The h wnd remove.
            </param>
            <param name="hWndNewNext">
                The h wnd new next.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Interop.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
                The send message.
            </summary>
            <param name="hWnd">
                The h wnd.
            </param>
            <param name="msg">
                The msg.
            </param>
            <param name="wParam">
                The w param.
            </param>
            <param name="lParam">
                The l param.
            </param>
            <returns>
                The <see cref="T:System.IntPtr"/>.
            </returns>
        </member>
        <member name="M:Tauron.Interop.NativeMethods._CommandLineToArgvW(System.String,System.Int32@)">
            <summary>
                The _ command line to argv w.
            </summary>
            <param name="cmdLine">
                The cmd line.
            </param>
            <param name="numArgs">
                The num args.
            </param>
            <returns>
                The <see cref="T:System.IntPtr"/>.
            </returns>
        </member>
        <member name="M:Tauron.Interop.NativeMethods._LocalFree(System.IntPtr)">
            <summary>
                The _ local free.
            </summary>
            <param name="hMem">
                The h mem.
            </param>
            <returns>
                The <see cref="T:System.IntPtr"/>.
            </returns>
        </member>
        <member name="M:Tauron.Interop.NativeMethods.CommandLineToArgvW(System.String)">
            <summary>
                The command line to argv w.
            </summary>
            <param name="cmdLine">
                The cmd line.
            </param>
            <returns>
                The <see cref="!:string[]"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Win32Exception">
            </exception>
        </member>
        <member name="M:Tauron.Interop.NativeMethods.CopyFileEx(System.String,System.String,Tauron.Interop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,Tauron.Interop.NativeMethods.CopyFileFlags)">
            <summary>
                The copy file ex.
            </summary>
            <param name="lpExistingFileName">
                The lp existing file name.
            </param>
            <param name="lpNewFileName">
                The lp new file name.
            </param>
            <param name="lpProgressRoutine">
                The lp progress routine.
            </param>
            <param name="lpData">
                The lp data.
            </param>
            <param name="pbCancel">
                The pb cancel.
            </param>
            <param name="dwCopyFlags">
                The dw copy flags.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.Interop.NativeMethods.SHGetKnownFolderPath(System.Guid,System.UInt32,System.IntPtr,System.IntPtr@)">
            <summary>
                The sh get known folder path.
            </summary>
            <param name="rfid">
                The rfid.
            </param>
            <param name="dwFlags">
                The dw flags.
            </param>
            <param name="hToken">
                The h token.
            </param>
            <param name="pszPath">
                The psz path.
            </param>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Tauron.Interop.NativeMethods.CopyProgressRoutine">
            <summary>The copy progress routine.</summary>
            <param name="totalFileSize">The total file size.</param>
            <param name="totalBytesTransferred">The total bytes transferred.</param>
            <param name="streamSize">The stream size.</param>
            <param name="streamBytesTransferred">The stream bytes transferred.</param>
            <param name="dwStreamNumber">The dw stream number.</param>
            <param name="dwCallbackReason">The dw callback reason.</param>
            <param name="hSourceFile">The h source file.</param>
            <param name="hDestinationFile">The h destination file.</param>
            <param name="lpData">The lp data.</param>
            <returns>The CopyProgressResult.</returns>
        </member>
        <member name="T:Tauron.Interop.NativeMethods.CopyProgressCallbackReason">
            <summary>The copy progress callback reason.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyProgressCallbackReason.CALLBACK_CHUNK_FINISHED">
            <summary>The callbac k_ chun k_ finished.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyProgressCallbackReason.CALLBACK_STREAM_SWITCH">
            <summary>The callbac k_ strea m_ switch.</summary>
        </member>
        <member name="T:Tauron.Interop.NativeMethods.CopyProgressResult">
            <summary>The copy progress result.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyProgressResult.PROGRESS_CONTINUE">
            <summary>The progres s_ continue.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyProgressResult.PROGRESS_CANCEL">
            <summary>The progres s_ cancel.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyProgressResult.PROGRESS_STOP">
            <summary>The progres s_ stop.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyProgressResult.PROGRESS_QUIET">
            <summary>The progres s_ quiet.</summary>
        </member>
        <member name="T:Tauron.Interop.NativeMethods.CopyFileFlags">
            <summary>The copy file flags.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyFileFlags.COPY_FILE_FAIL_IF_EXISTS">
            <summary>The cop y_ fil e_ fai l_ i f_ exists.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyFileFlags.COPY_FILE_NO_BUFFERING">
            <summary>The cop y_ fil e_ n o_ buffering.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyFileFlags.COPY_FILE_RESTARTABLE">
            <summary>The cop y_ fil e_ restartable.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyFileFlags.COPY_FILE_OPEN_SOURCE_FOR_WRITE">
            <summary>The cop y_ fil e_ ope n_ sourc e_ fo r_ write.</summary>
        </member>
        <member name="F:Tauron.Interop.NativeMethods.CopyFileFlags.COPY_FILE_ALLOW_DECRYPTED_DESTINATION">
            <summary>The cop y_ fil e_ allo w_ decrypte d_ destination.</summary>
        </member>
        <member name="T:Tauron.IOExtensions">
            <summary>The io extensions.</summary>
        </member>
        <member name="M:Tauron.IOExtensions.Clear(System.IO.DirectoryInfo)">
            <summary>
                The clear.
            </summary>
            <param name="dic">
                The dic.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.ClearDirectory(System.String)">
            <summary>
                The clear directory.
            </summary>
            <param name="dic">
                The dic.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.ClearParentDirectory(System.String)">
            <summary>
                The clear parent directory.
            </summary>
            <param name="dic">
                The dic.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.CombinePath(System.String,System.String[])">
            <summary>
                The combine path.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="paths">
                The paths.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.CombinePath(System.String,System.String)">
            <summary>
                The combine path.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="path1">
                The path 1.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.CombinePath(System.IO.FileSystemInfo,System.String)">
            <summary>
                The combine path.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="path1">
                The path 1.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.CopyFileTo(System.String,System.String)">
            <summary>
                The copy file to.
            </summary>
            <param name="source">
                The source.
            </param>
            <param name="destination">
                The destination.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.CreateDirectoryIfNotExis(System.String)">
            <summary>
                The create directory if not exis.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.CreateDirectoryIfNotExis(System.IO.DirectoryInfo)">
            <summary>
                The create directory if not exis.
            </summary>
            <param name="dic">
                The dic.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.Delete(System.IO.FileSystemInfo)">
            <summary>
                The delete.
            </summary>
            <param name="info">
                The info.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.DeleteDirectory(System.String)">
            <summary>
                The delete directory.
            </summary>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.DeleteDirectory(System.String,System.Object)">
            <summary>
                The delete directory.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="sub">
                The sub.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.DeleteDirectoryIfEmpty(System.String)">
            <summary>
                The delete directory if empty.
            </summary>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.DeleteFile(System.String)">
            <summary>
                The delete file.
            </summary>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.EnumerateDirectorys(System.String)">
            <summary>
                The enumerate directorys.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.EnumerateFileSystemEntrys(System.String)">
            <summary>
                The enumerate file system entrys.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.EnumerateFiles(System.String)">
            <summary>
                The enumerate all files.
            </summary>
            <param name="dic">
                The dic.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.EnumerateTextLinesIfExis(System.String)">
            <summary>
                The enumerate text lines if exis.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.ExisDirectory(System.String)">
            <summary>
                The exis directory.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.ExisFile(System.String,System.String)">
            <summary>
                The exis file.
            </summary>
            <param name="workingDirectory">
                The working directory.
            </param>
            <param name="file">
                The file.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.ExisFile(System.String)">
            <summary>
                The exis file.
            </summary>
            <param name="file">
                The file.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetDirectoryCreationTime(System.String)">
            <summary>
                The get directory creation time.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetDirectoryName(System.String)">
            <summary>
                The get directory name.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetDirectoryName(System.Text.StringBuilder)">
            <summary>
                The get directory name.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetDirectorys(System.String)">
            <summary>
                The get directorys.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="!:string[]"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetExtension(System.String)">
            <summary>
                The get extension.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFileName(System.String)">
            <summary>
                The get file name.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFileNameWithoutExtension(System.String)">
            <summary>
                The get file name without extension.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFileSystemCount(System.String)">
            <summary>
                The get file system count.
            </summary>
            <param name="strDir">
                The str dir.
            </param>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFileSystemCount(System.IO.DirectoryInfo)">
            <summary>
                The get file system count.
            </summary>
            <param name="di">
                The di.
            </param>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFiles(System.String)">
            <summary>
                The get files.
            </summary>
            <param name="dic">
                The dic.
            </param>
            <returns>
                The <see cref="!:string[]"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
                The get files.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="pattern">
                The pattern.
            </param>
            <param name="option">
                The option.
            </param>
            <returns>
                The <see cref="!:string[]"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.GetFullPath(System.String)">
            <summary>
                The get full path.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.HasExtension(System.String)">
            <summary>
                The has extension.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.IsPathRooted(System.String)">
            <summary>
                The is path rooted.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.MoveTo(System.String,System.String)">
            <summary>
                The move to.
            </summary>
            <param name="source">
                The source.
            </param>
            <param name="dest">
                The dest.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.MoveTo(System.String,System.String,System.String)">
            <summary>
                The move to.
            </summary>
            <param name="source">
                The source.
            </param>
            <param name="workingDirectory">
                The working directory.
            </param>
            <param name="dest">
                The dest.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.OpenRead(System.String,System.IO.FileShare)">
            <summary>
                The open read.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="share">
                The share.
            </param>
            <returns>
                The <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.OpenRead(System.String)">
            <summary>
                The open read.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.OpenTextAppend(System.String)">
            <summary>
                The open text append.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.IO.StreamWriter"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.OpenTextRead(System.String)">
            <summary>
                The open text read.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.IO.StreamReader"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.OpenTextWrite(System.String)">
            <summary>
                The open text write.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.IO.StreamWriter"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.OpenWrite(System.String)">
            <summary>
                The open write.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.OpenWrite(System.String,System.IO.FileShare)">
            <summary>
                The open write.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="share">
                The share.
            </param>
            <returns>
                The <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.ReadTextIfExis(System.String)">
            <summary>
                The read text if exis.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.ReadTextIfExis(System.String,System.String)">
            <summary>
                The read text if exis.
            </summary>
            <param name="workingDirectory">
                The working directory.
            </param>
            <param name="subPath">
                The sub path.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.ReadTextLinesIfExis(System.String)">
            <summary>
                The read text lines if exis.
            </summary>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="!:string[]"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.TryCreateUriWithoutScheme(System.String,System.Uri@,System.String[])">
            <summary>
                The create uri without scheme.
            </summary>
            <param name="str">
                The str.
            </param>
            <param name="uri">
                The uri.
            </param>
            <param name="scheme">
                The scheme.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.IOExtensions.WriteTextContentTo(System.String,System.String)">
            <summary>
                The write text content to.
            </summary>
            <param name="content">
                The content.
            </param>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.IOExtensions.WriteTextContentTo(System.String,System.String,System.String)">
            <summary>
                The write text content to.
            </summary>
            <param name="content">
                The content.
            </param>
            <param name="workingDirectory">
                The working directory.
            </param>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="P:Tauron.IWeakReferenceContracts.IsAlive">
            <summary>Gets a value indicating whether is alive.</summary>
            <value>The is alive.</value>
        </member>
        <member name="T:Tauron.RoundType">
            <summary>The Rounding types.</summary>
        </member>
        <member name="F:Tauron.RoundType.None">
            <summary>The none.</summary>
        </member>
        <member name="F:Tauron.RoundType.Hour">
            <summary>Complete Hour.</summary>
        </member>
        <member name="F:Tauron.RoundType.HalfHour">
            <summary>Half an Hour.</summary>
        </member>
        <member name="F:Tauron.RoundType.QuaterHour">
            <summary>15 Miniutes.</summary>
        </member>
        <member name="T:Tauron.ObjectExtension">
            <summary>The object extension.</summary>
        </member>
        <member name="M:Tauron.ObjectExtension.As``1(System.Object)">
            <summary>
                The as.
            </summary>
            <param name="value">
                The value.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="!:T"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.CastObj``1(System.Object)">
            <summary>
                The cast obj.
            </summary>
            <param name="value">
                The value.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="!:T"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.CutSecond(System.DateTime)">
            <summary>
                The cut second.
            </summary>
            <param name="source">
                The source.
            </param>
            <returns>
                The <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.GetService``1(System.IServiceProvider)">
            <summary>
                The get service.
            </summary>
            <param name="provider">
                The provider.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="!:T"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.IsAlive``1(System.WeakReference{``0})">
            <summary>
                The is alive.
            </summary>
            <param name="reference">
                The reference.
            </param>
            <typeparam name="TType">
            </typeparam>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.Round(System.DateTime,Tauron.RoundType)">
            <summary>
                Roundes the given DateTime to the given Minutes Pattern (15,30,60...).
            </summary>
            <param name="source">
                DateTime which should be rounded.
            </param>
            <param name="type">
                The Roundtype.
            </param>
            <returns>
                The <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.Round(System.DateTime,System.Double)">
            <summary>
                Roundes the given DateTime to the given Minutes Pattern (15,30,60...).
            </summary>
            <param name="source">
                DateTime which should be rounded.
            </param>
            <param name="type">
                The Roundtype.
            </param>
            <returns>
                The <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.SFormat(System.String,System.Object[])">
            <summary>
                The s format.
            </summary>
            <param name="format">
                The format.
            </param>
            <param name="args">
                The args.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Tauron.ObjectExtension.TypedTarget``1(System.WeakReference{``0})">
            <summary>
                The typed target.
            </summary>
            <param name="reference">
                The reference.
            </param>
            <typeparam name="TType">
            </typeparam>
            <returns>
                The <see cref="!:TType"/>.
            </returns>
        </member>
        <member name="T:Tauron.ReadOnlyEnumerator`1">
            <summary>
                The read only enumerator.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="F:Tauron.ReadOnlyEnumerator`1._enumerable">
            <summary>The _enumerable.</summary>
        </member>
        <member name="M:Tauron.ReadOnlyEnumerator`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.ReadOnlyEnumerator`1"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.ReadOnlyEnumerator`1"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.ReadOnlyEnumerator`1"/> class.
            </summary>
            <param name="enumerable">
                The enumerable.
            </param>
        </member>
        <member name="M:Tauron.ReadOnlyEnumerator`1.GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReadOnlyEnumerator`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>The get enumerator.</summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="T:Tauron.ReflectionExtensions">
            <summary>The reflection extensions.</summary>
        </member>
        <member name="F:Tauron.ReflectionExtensions.DefaultBindingFlags">
            <summary>The default binding flags.</summary>
        </member>
        <member name="M:Tauron.ReflectionExtensions.CreateInstanceAndUnwrap``1(System.AppDomain)">
            <summary>
                The create instance and unwrap.
            </summary>
            <param name="domain">
                The domain.
            </param>
            <typeparam name="TValue">
            </typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.CreateInstanceAndUnwrap``1(System.AppDomain,System.Object[])">
            <summary>
                The create instance and unwrap.
            </summary>
            <param name="domain">
                The domain.
            </param>
            <param name="args">
                The args.
            </param>
            <typeparam name="TValue">
            </typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.FindMemberAttributes``1(System.Type,System.Boolean,System.Reflection.BindingFlags)">
            <summary>
                The find member attributes.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="nonPublic">
                The non public.
            </param>
            <param name="bindingflags">
                The bindingflags.
            </param>
            <typeparam name="TAttribute">
            </typeparam>
            <returns>
                The <see cref="T:System.Collections.IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.FindMemberAttributes``1(System.Type,System.Boolean)">
            <summary>
                The find member attributes.
            </summary>
            <param name="type">
                The type.
            </param>
            <param name="nonPublic">
                The non public.
            </param>
            <typeparam name="TAttribute">
            </typeparam>
            <returns>
                The <see cref="T:System.Collections.IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetAllCustomAttributes``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
                The get all attributes.
            </summary>
            <param name="member">
                The member.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="!:T[]"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetAllCustomAttributes(System.Reflection.ICustomAttributeProvider,System.Type)">
            <summary>
                The get all attributes.
            </summary>
            <param name="member">
                The member.
            </param>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="!:object[]"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetCustomAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
                The get custom attribute.
            </summary>
            <param name="provider">
                The provider.
            </param>
            <typeparam name="TAttribute">
            </typeparam>
            <returns>
                The <see cref="!:TAttribute"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetCustomAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
                The get custom attribute.
            </summary>
            <param name="provider">
                The provider.
            </param>
            <param name="inherit">
                The inherit.
            </param>
            <typeparam name="TAttribute">
            </typeparam>
            <returns>
                The <see cref="!:TAttribute"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetCustomAttributes(System.Reflection.ICustomAttributeProvider,System.Type[])">
            <summary>
                The get custom attributes.
            </summary>
            <param name="provider">
                The provider.
            </param>
            <param name="attributeTypes">
                The attribute types.
            </param>
            <returns>
                The <see cref="T:System.Collections.IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetInvokeMember``1(System.Reflection.MemberInfo,System.Object,System.Object[])">
            <summary>
                The get invoke member.
            </summary>
            <param name="info">
                The info.
            </param>
            <param name="instance">
                The instance.
            </param>
            <param name="parameter">
                The parameter.
            </param>
            <typeparam name="TType">
            </typeparam>
            <returns>
                The <see cref="!:TType"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetMethodHandle(System.Reflection.MethodBase)">
            <summary>
                The get method handle.
            </summary>
            <param name="method">
                The method.
            </param>
            <returns>
                The <see cref="T:System.RuntimeMethodHandle"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetParameterTypes(System.Reflection.MethodBase)">
            <summary>
                The get parameter types.
            </summary>
            <param name="method">
                The method.
            </param>
            <returns>
                The <see cref="T:System.Collections.IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetPropertyFromMethod(System.Reflection.MethodInfo,System.Type)">
            <summary>
                The get property from method.
            </summary>
            <param name="method">
                The method.
            </param>
            <param name="implementingType">
                The implementing type.
            </param>
            <returns>
                The <see cref="T:System.Reflection.PropertyInfo"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)">
            <summary>
                The get property from method.
            </summary>
            <param name="method">
                The method.
            </param>
            <returns>
                The <see cref="T:System.Reflection.PropertyInfo"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.GetSetInvokeType(System.Reflection.MemberInfo)">
            <summary>
                The get set invoke type.
            </summary>
            <param name="info">
                The info.
            </param>
            <returns>
                The <see cref="T:System.Type"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Tauron.ReflectionExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
                The has attribute.
            </summary>
            <param name="member">
                The member.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.HasAttribute(System.Reflection.ICustomAttributeProvider,System.Type)">
            <summary>
                The has attribute.
            </summary>
            <param name="member">
                The member.
            </param>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.HasMatchingAttribute``1(System.Reflection.ICustomAttributeProvider,``0)">
            <summary>
                The has matching attribute.
            </summary>
            <param name="member">
                The member.
            </param>
            <param name="attributeToMatch">
                The attribute to match.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.Invoke``1(System.Reflection.MethodBase,System.Object,System.Object[])">
            <summary>
                The invoke.
            </summary>
            <param name="method">
                The method.
            </param>
            <param name="instance">
                The instance.
            </param>
            <param name="args">
                The args.
            </param>
            <typeparam name="TType">
            </typeparam>
            <returns>
                The <see cref="!:TType"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.Invoke(System.Reflection.MethodBase,System.Object,System.Object[])">
            <summary>
                The invoke.
            </summary>
            <param name="method">
                The method.
            </param>
            <param name="instance">
                The instance.
            </param>
            <param name="args">
                The args.
            </param>
        </member>
        <member name="M:Tauron.ReflectionExtensions.ParseEnum``1(System.String)">
            <summary>
                The parse enum.
            </summary>
            <param name="value">
                The value.
            </param>
            <typeparam name="TEnum">
            </typeparam>
            <returns>
                The <see cref="!:TEnum"/>.
            </returns>
        </member>
        <member name="M:Tauron.ReflectionExtensions.SetInvokeMember(System.Reflection.MemberInfo,System.Object,System.Object[])">
            <summary>
                The set invoke member.
            </summary>
            <param name="info">
                The info.
            </param>
            <param name="instance">
                The instance.
            </param>
            <param name="parameter">
                The parameter.
            </param>
        </member>
        <member name="M:Tauron.ReflectionExtensions.TryParseEnum``1(System.String,``0@)">
            <summary>
                The parse enum.
            </summary>
            <param name="value">
                The value.
            </param>
            <param name="eEnum">
                The e Enum.
            </param>
            <typeparam name="TEnum">
            </typeparam>
            <returns>
                The <see cref="!:TEnum"/>.
            </returns>
        </member>
        <member name="T:Tauron.SerializationExtensions">
            <summary>The serialization extensions.</summary>
        </member>
        <member name="M:Tauron.SerializationExtensions.Deserialize``1(System.String,System.Runtime.Serialization.IFormatter)">
            <summary>
                The deserialize.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="formatter">
                The formatter.
            </param>
            <typeparam name="TValue">
            </typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="M:Tauron.SerializationExtensions.Deserialize``1(System.String)">
            <summary>
                The deserialize.
            </summary>
            <param name="path">
                The path.
            </param>
            <typeparam name="TValue">
            </typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="M:Tauron.SerializationExtensions.Serialize(System.Object,System.Runtime.Serialization.IFormatter,System.String)">
            <summary>
                The serialize.
            </summary>
            <param name="graph">
                The graph.
            </param>
            <param name="formatter">
                The formatter.
            </param>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.SerializationExtensions.Serialize(System.Object,System.String)">
            <summary>
                The serialize.
            </summary>
            <param name="graph">
                The graph.
            </param>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.SerializationExtensions.XmlDeserialize``1(System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
                The xml deserialize.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="formatter">
                The formatter.
            </param>
            <typeparam name="TValue">
            </typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="M:Tauron.SerializationExtensions.XmlDeserializeIfExis``1(System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
                The xml deserialize if exis.
            </summary>
            <param name="path">
                The path.
            </param>
            <param name="formatter">
                The formatter.
            </param>
            <typeparam name="TValue">
            </typeparam>
            <returns>
                The <see cref="!:TValue"/>.
            </returns>
        </member>
        <member name="M:Tauron.SerializationExtensions.XmlSerialize(System.Object,System.Xml.Serialization.XmlSerializer,System.String)">
            <summary>
                The xml serialize.
            </summary>
            <param name="graph">
                The graph.
            </param>
            <param name="formatter">
                The formatter.
            </param>
            <param name="path">
                The path.
            </param>
        </member>
        <member name="M:Tauron.SerializationExtensions.InternalDeserialize(System.Runtime.Serialization.IFormatter,System.IO.Stream)">
            <summary>
                The internal deserialize.
            </summary>
            <param name="formatter">
                The formatter.
            </param>
            <param name="stream">
                The stream.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.SerializationExtensions.InternalSerialize(System.Object,System.Runtime.Serialization.IFormatter,System.IO.Stream)">
            <summary>
                The internal serialize.
            </summary>
            <param name="graph">
                The graph.
            </param>
            <param name="formatter">
                The formatter.
            </param>
            <param name="stream">
                The stream.
            </param>
        </member>
        <member name="T:Tauron.SerializationExtensions.XmlSerilalizerDelegator">
            <summary>The xml serilalizer delegator.</summary>
        </member>
        <member name="F:Tauron.SerializationExtensions.XmlSerilalizerDelegator.serializer">
            <summary>The _serializer.</summary>
        </member>
        <member name="M:Tauron.SerializationExtensions.XmlSerilalizerDelegator.#ctor(System.Xml.Serialization.XmlSerializer)">
            <summary>
                Initializes a new instance of the <see cref="T:Tauron.SerializationExtensions.XmlSerilalizerDelegator"/> class.
                Initialisiert eine neue Instanz der <see cref="T:Tauron.SerializationExtensions.XmlSerilalizerDelegator"/> Klasse.
                Initializes a new instance of the <see cref="T:Tauron.SerializationExtensions.XmlSerilalizerDelegator"/> class.
            </summary>
            <param name="serializer">
                The serializer.
            </param>
        </member>
        <member name="M:Tauron.SerializationExtensions.XmlSerilalizerDelegator.Deserialize(System.IO.Stream)">
            <summary>
                The deserialize.
            </summary>
            <param name="serializationStream">
                The serialization stream.
            </param>
            <returns>
                The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Tauron.SerializationExtensions.XmlSerilalizerDelegator.Serialize(System.IO.Stream,System.Object)">
            <summary>
                The serialize.
            </summary>
            <param name="serializationStream">
                The serialization stream.
            </param>
            <param name="graph">
                The graph.
            </param>
        </member>
        <member name="P:Tauron.SerializationExtensions.XmlSerilalizerDelegator.Binder">
            <summary>Gets or sets the binder.</summary>
            <value>The binder.</value>
        </member>
        <member name="P:Tauron.SerializationExtensions.XmlSerilalizerDelegator.Context">
            <summary>Gets or sets the context.</summary>
            <value>The context.</value>
        </member>
        <member name="P:Tauron.SerializationExtensions.XmlSerilalizerDelegator.SurrogateSelector">
            <summary>Gets or sets the surrogate selector.</summary>
            <value>The surrogate selector.</value>
        </member>
        <member name="T:Tauron.XCopy">
            <summary>
                PInvoke wrapper for CopyEx
                http://msdn.microsoft.com/en-us/library/windows/desktop/aa363852.aspx.
            </summary>
        </member>
        <member name="F:Tauron.XCopy._destination">
            <summary>The _destination.</summary>
        </member>
        <member name="F:Tauron.XCopy._filePercentCompleted">
            <summary>The _file percent completed.</summary>
        </member>
        <member name="F:Tauron.XCopy._isCancelled">
            <summary>The _is cancelled.</summary>
        </member>
        <member name="F:Tauron.XCopy._source">
            <summary>The _source.</summary>
        </member>
        <member name="M:Tauron.XCopy.#ctor">
            <summary>
                Prevents a default instance of the <see cref="T:Tauron.XCopy"/> class from being created.
                Verhindert, dass eine Standardinstanz der <see cref="T:Tauron.XCopy"/> Klasse erstellt wird.
                Prevents a default instance of the <see cref="T:Tauron.XCopy"/> class from being created.
            </summary>
        </member>
        <member name="M:Tauron.XCopy.Copy(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
                The copy.
            </summary>
            <param name="source">
                The source.
            </param>
            <param name="destination">
                The destination.
            </param>
            <param name="overwrite">
                The overwrite.
            </param>
            <param name="nobuffering">
                The nobuffering.
            </param>
        </member>
        <member name="M:Tauron.XCopy.Copy(System.String,System.String,System.Boolean,System.Boolean,System.EventHandler{System.ComponentModel.ProgressChangedEventArgs})">
            <summary>
                The copy.
            </summary>
            <param name="source">
                The source.
            </param>
            <param name="destination">
                The destination.
            </param>
            <param name="overwrite">
                The overwrite.
            </param>
            <param name="nobuffering">
                The nobuffering.
            </param>
            <param name="handler">
                The handler.
            </param>
        </member>
        <member name="M:Tauron.XCopy.CopyInternal(System.String,System.String,System.Boolean,System.Boolean,System.EventHandler{System.ComponentModel.ProgressChangedEventArgs})">
            <summary>
                The copy internal.
            </summary>
            <param name="source">
                The source.
            </param>
            <param name="destination">
                The destination.
            </param>
            <param name="overwrite">
                The overwrite.
            </param>
            <param name="nobuffering">
                The nobuffering.
            </param>
            <param name="handler">
                The handler.
            </param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            </exception>
        </member>
        <member name="M:Tauron.XCopy.CopyProgressHandler(System.Int64,System.Int64,System.Int64,System.Int64,System.UInt32,Tauron.Interop.NativeMethods.CopyProgressCallbackReason,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                The copy progress handler.
            </summary>
            <param name="total">
                The total.
            </param>
            <param name="transferred">
                The transferred.
            </param>
            <param name="streamSize">
                The stream size.
            </param>
            <param name="streamByteTrans">
                The stream byte trans.
            </param>
            <param name="dwStreamNumber">
                The dw stream number.
            </param>
            <param name="reason">
                The reason.
            </param>
            <param name="hSourceFile">
                The h source file.
            </param>
            <param name="hDestinationFile">
                The h destination file.
            </param>
            <param name="lpData">
                The lp data.
            </param>
            <returns>
                The <see cref="T:Tauron.Interop.NativeMethods.CopyProgressResult"/>.
            </returns>
        </member>
        <member name="M:Tauron.XCopy.OnProgressChanged(System.Double)">
            <summary>
                The on progress changed.
            </summary>
            <param name="percent">
                The percent.
            </param>
        </member>
        <member name="E:Tauron.XCopy.ProgressChanged">
            <summary>The progress changed.</summary>
        </member>
    </members>
</doc>
