//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34003
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tauron.Application.Audio {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class BassMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BassMessages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tauron.Application.Audio.BassMessages", typeof(BassMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Already initialized/paused/whatever ähnelt.
        /// </summary>
        internal static string BASS_ERROR_ALREADY {
            get {
                return ResourceManager.GetString("BASS_ERROR_ALREADY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The sample buffer was lost ähnelt.
        /// </summary>
        internal static string BASS_ERROR_BUFLOST {
            get {
                return ResourceManager.GetString("BASS_ERROR_BUFLOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid track number ähnelt.
        /// </summary>
        internal static string BASS_ERROR_CDTRACK {
            get {
                return ResourceManager.GetString("BASS_ERROR_CDTRACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t create the file ähnelt.
        /// </summary>
        internal static string BASS_ERROR_CREATE {
            get {
                return ResourceManager.GetString("BASS_ERROR_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BASS_ERROR_DEVICE ähnelt.
        /// </summary>
        internal static string BASS_ERROR_DEVICE {
            get {
                return ResourceManager.GetString("BASS_ERROR_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t find a free/valid driver ähnelt.
        /// </summary>
        internal static string BASS_ERROR_DRIVER {
            get {
                return ResourceManager.GetString("BASS_ERROR_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The MOD music has no sequence data ähnelt.
        /// </summary>
        internal static string BASS_ERROR_EMPTY {
            get {
                return ResourceManager.GetString("BASS_ERROR_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t open the file ähnelt.
        /// </summary>
        internal static string BASS_ERROR_FILEOPEN {
            get {
                return ResourceManager.GetString("BASS_ERROR_FILEOPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported sample format ähnelt.
        /// </summary>
        internal static string BASS_ERROR_FORMAT {
            get {
                return ResourceManager.GetString("BASS_ERROR_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Illegal sample rate ähnelt.
        /// </summary>
        internal static string BASS_ERROR_FREQ {
            get {
                return ResourceManager.GetString("BASS_ERROR_FREQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid handle ähnelt.
        /// </summary>
        internal static string BASS_ERROR_HANDLE {
            get {
                return ResourceManager.GetString("BASS_ERROR_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An illegal parameter was specified ähnelt.
        /// </summary>
        internal static string BASS_ERROR_ILLPARAM {
            get {
                return ResourceManager.GetString("BASS_ERROR_ILLPARAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An illegal type was specified ähnelt.
        /// </summary>
        internal static string BASS_ERROR_ILLTYPE {
            get {
                return ResourceManager.GetString("BASS_ERROR_ILLTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BASS_Init has not been successfully called ähnelt.
        /// </summary>
        internal static string BASS_ERROR_INIT {
            get {
                return ResourceManager.GetString("BASS_ERROR_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Memory Error ähnelt.
        /// </summary>
        internal static string BASS_ERROR_MEM {
            get {
                return ResourceManager.GetString("BASS_ERROR_MEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No 3D support ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NO3D {
            get {
                return ResourceManager.GetString("BASS_ERROR_NO3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No CD in drive ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOCD {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can&apos;t get a free channel ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOCHAN {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOCHAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No EAX support ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOEAX {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOEAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Effects are not available ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOFX {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOFX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No hardware voices available ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOHW {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No internet connection could be opened ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NONET {
            get {
                return ResourceManager.GetString("BASS_ERROR_NONET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not paused ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOPAUSE {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOPAUSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not playing ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOPLAY {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOPLAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not an audio track ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOTAUDIO {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOTAUDIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BASS_Requested data is not available ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOTAVAIL {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOTAVAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The stream is not a file stream ähnelt.
        /// </summary>
        internal static string BASS_ERROR_NOTFILE {
            get {
                return ResourceManager.GetString("BASS_ERROR_NOTFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The channel is playing ähnelt.
        /// </summary>
        internal static string BASS_ERROR_PLAYING {
            get {
                return ResourceManager.GetString("BASS_ERROR_PLAYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid playback position ähnelt.
        /// </summary>
        internal static string BASS_ERROR_POSITION {
            get {
                return ResourceManager.GetString("BASS_ERROR_POSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BASS_Start has not been successfully called ähnelt.
        /// </summary>
        internal static string BASS_ERROR_START {
            get {
                return ResourceManager.GetString("BASS_ERROR_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Error ähnelt.
        /// </summary>
        internal static string BASS_OK {
            get {
                return ResourceManager.GetString("BASS_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unkown Error ähnelt.
        /// </summary>
        internal static string ErrorUnkown {
            get {
                return ResourceManager.GetString("ErrorUnkown", resourceCulture);
            }
        }
    }
}
